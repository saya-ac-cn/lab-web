{"version":3,"sources":["console.js","config/backendMenuConfig.js","utils/memoryUtils.js","utils/storageUtils.js","utils/var.js","api/ajax.js","api/index.js","utils/window.js","utils/string.js","pages/me/info/uploadLogo.jsx","pages/me/info/index.jsx","pages/me/logs/index.jsx","pages/financial/transaction/declare.jsx","pages/financial/transaction/detail.jsx","pages/financial/transaction/renew.jsx","pages/financial/transaction/index.jsx","pages/memory/memo/edit.jsx","pages/memory/memo/index.jsx","pages/memory/notebook/edit.jsx","pages/memory/notebook/index.jsx","pages/memory/notes/list.jsx","utils/url.js","component/for-editor.jsx","pages/memory/notes/edit.jsx","pages/memory/notes/index.jsx","pages/memory/news/list.jsx","pages/memory/news/edit.jsx","pages/memory/news/index.jsx","pages/memory/plan/index.jsx","pages/oss/db/index.jsx","pages/oss/file/index.jsx","pages/oss/wallpaper/index.jsx","pages/oss/illustration/index.jsx","pages/me/chart/index.jsx","pages/financial/day/index.jsx","pages/financial/month/index.jsx","pages/financial/year/index.jsx","pages/layout/backend1/index.jsx","pages/login/index.jsx","App.js","index.js"],"names":["e","o","s","t","exports","n","id","loaded","call","m","c","p","window","console","log","parent","__has_console_security_message","top","i","join","test","navigator","userAgent","Date","getFullYear","backstageMenuList","title","key","icon","hidden","requireAuth","root","children","user","USER_KEY","store","set","get","remove","isEmptyObject","data","item","formatMoney","l","parseFloat","replace","toFixed","split","reverse","r","length","deepClone","target","result","Array","isArray","push","constructor","RegExp","disabledDate","current","moment","endOf","disabledMonth","codeMessage","200","201","202","204","400","401","403","404","406","410","422","500","502","503","504","ajax","url","type","Promise","resolve","reject","axios","params","delete","put","post","then","response","code","storageUtils","memoryUtils","location","href","error","undefined","status","statusText","msg","text","catch","message","backendAPI","requestLogin","getLogList","getLogType","downloadLogExcel","uploadLogo","getPersonal","setPassword","setUserInfo","uploadNewsPicture","getNewsList","publishNews","deleteNews","getNews","editNews","getPictureList","uploadWallpaper","deletePicture","uploadFile","getFileList","deleteFile","editFile","downloadFileForAdmin","createNoteBook","updateNoteBook","deleteNoteBook","getNoteBookList","getNoteBookGroup","createNotes","updateNotes","getNotes","getPlanList","createPlan","updatePlan","deletePlan","getFinancialType","getFinancialAmount","getTransactionList","getTransactionDetail","applyTransaction","updateTransaction","deleteTransaction","downTransaction","outTransactionInfoExcel","insertTransactioninfo","updateTransactioninfo","deleteTransactioninfo","totalTransactionForDay","outTransactionForDayExcel","totalTransactionForMonth","outTransactionForMonthExcel","totalTransactionForYear","outTransactionForYearExcel","getBackUpDBList","downloadBackUpDB","getCountAndWordCloud","getActivityRate","getNewsRate","getAccountGrowthRate","getIncomePercentage","getOrderByAmount","getPreSixMonthBill","getMemo","getMemoList","createMemo","updateMemo","deleteMemo","openNotificationWithIcon","description","notification","placement","showLoading","indicator","LoadingOutlined","size","spinning","clearTrimValueEvent","value","UploadLogo","state","modalVisible","confirmLoading","src","headerImage","onCropperInit","cropper","handleFileChange","file","files","reader","FileReader","onload","setState","readAsDataURL","saveCropperImg","_this","getCroppedCanvas","croppedCanvas","getRoundedCanvas","toDataURL","upload","image","a","para","toString","sourceCanvas","canvas","document","createElement","context","getContext","width","height","imageSmoothingEnabled","drawImage","globalCompositeOperation","beginPath","arc","Math","min","PI","fill","cancelCropper","fileReader","dataURL","logo","this","props","uploadedImageFile","className","style","backgroundImage","role","accept","onChange","closable","destroyOnClose","visible","onOk","onCancel","preview","viewMode","zoomable","aspectRatio","guides","background","rotatable","onInitialized","bind","borderRadius","Component","TabPane","Info","pwdFormRef","React","createRef","autographFormRef","personalInfo","loading","getPersonalInfo","validatePwd1","rule","callback","validatePwd2","password","getFieldValue","handlePwdSubmit","validateFields","password2","handleAutographSubmit","autograph","formItemLayout","labelCol","span","wrapperCol","buttonItemLayout","offset","defaultActiveKey","tab","bordered","Item","label","disabled","sex","email","qq","phone","birthday","hometown","ref","onFinish","getValueFromEvent","name","initialValue","rules","required","max","TextArea","showCount","maxLength","autosize","minRows","maxRows","htmlType","validator","Password","RangePicker","Option","Logs","datas","dataTotal","nowPage","pageSize","listLoading","filters","date","beginTime","endTime","selectType","initColumns","columns","dataIndex","align","render","record","logType","describe","getTypeData","forEach","getDatas","dateSum","grid","reloadPage","changePageSize","changePage","onChangeDate","dateString","onChangeType","exportExcel","method","responseType","headers","res","fileName","blob","Blob","msSaveOrOpenBlob","msSaveBlob","link","URL","createObjectURL","download","click","revokeObjectURL","rangeDate","layout","showSearch","placeholder","onClick","SearchOutlined","ReloadOutlined","FileExcelOutlined","rowKey","dataSource","pagination","showTotal","showQuickJumper","total","showSizeChanger","onShowSizeChange","Declare","visibleModal","financialType","financialAmount","currentUser","bill","tradeType","transactionAmount","tradeDate","currencyNumber","deposited","expenditure","infoList","index","flog","source","currencyDetails","onChangeFlag","editable","inputChange","ordered","parser","onConfirm","deleteLine","CloseOutlined","ExclamationCircleOutlined","continueAdd","concat","filter","renewList","field","initFinancialType","transactionType","initFinancialAmount","tag","onChangeTypeAmount","handleCancel","handleDisplay","tradeDateChange","handleApply","param","format","resetForm","refreshList","onRef","to","okText","maskClosable","PlusOutlined","gutter","header","detailHeader","detailTradeNumber","detailTradeDate","inputLabel","tableFooter","detailGrid","BillDetail","tradeId","row","handlePrint","body","innerHTML","getElementById","print","reload","val","cancelText","tradeTypeEntity","tradeAmountEntity","createTime","updateTime","Renew","newBill","deleteControl","saveControl","renewLine","CheckOutlined","dependDelete","deleteTransactionItem","dependSave","renewTransactionItem","addTransactionItem","handleEdit","oldDate","newDate","isSame","Transaction","billDetailRef","billDeclareRef","billRenewRef","queryType","openViewModal","shape","EyeOutlined","openEditModal","EditOutlined","handleDelete","DeleteOutlined","initDatas","copyType","handleAddModal","bindBillDetailRef","bindBillDeclareRef","bindBillRenewRef","confirm","content","exportListExcel","exportInfoExcel","refreshListFromDeclare","refreshListFromRenew","EditMemo","formRef","memo","setFieldsValue","handleSubmit","handleRenewMemo","handleAddMemo","Memo","memoFormRef","handleModalEdit","handleDellMemo","titleInputChange","event","handleModalAdd","bindMemoFormRef","refreshListFromMemoForm","EditNoteBook","book","handleRenewBook","handleAddBook","descript","QuestionCircleOutlined","Group","NoteBook","bookFormRef","color","handleDeleteNoteBook","bindBookFormRef","refreshListFromBookForm","tips","notesCount","nameInputChange","NotesList","notebook","tags","map","forTagMap","history","handleDeleteNotes","colors","tagColor","tagElem","floor","random","display","topic","notebookId","getNoteBooks","notebooks","topicInputChange","onChangeBooks","search","str","reg","substr","match","decodeURIComponent","getUrlParameter","ForEditor","editorRef","initEditor","handleChange","handleAddImg","addImg","$img2Url","img","Image","filename","fileurl","isNull","trim","getValue","lineNum","border","boxShadow","maxWidth","EditNote","markdownRef","inputVisible","inputValue","form","isUpdate","handleClose","removedTag","showInput","input","focus","handleInputChange","handleInputConfirm","indexOf","forMap","onClose","preventDefault","submit","editor","_thisTag","bindMarkDownRef","notes","tagChild","marginBottom","onBlur","onPressEnter","Notes","path","component","exact","List","handleDellNews","EditNews","updateNews","createNews","news","News","NewsList","Plan","outhtml","formVisible","editForm","planDate","planContent","rendering","isNowMonth","nowDate","getNowFormatDate","nowYear","nowMonth","getMonth","nowday","getDate","localDate","localYear","localMonth","editDate","_thisLine","cellNum","dateKey","number","clickTD","data-id","data-key","data-value","year","month","strDate","JSON","stringify","getOperationData","_dateObject","x","setMonth","nd","valueOf","y","d","buttonQuery","currentTarget","getAttribute","clickData","isBefore","handleCloseForm","handleSubmitForm","sendInsertRequest","sendUpdateRequest","plandate","resetFields","handleDeletePlan","picker","float","textAlign","lineHeight","cursor","LeftOutlined","fontSize","RightOutlined","cellPadding","cellSpacing","DB","downloadFile","CloudDownloadOutlined","archiveDate","Dragger","Files","uploadVisible","initUpload","uploadConfig","multiple","action","uid","onRemove","info","handleChangeFile","handleDeleteFile","fileInputInputChange","handleCancelUpload","handleOpenUpload","sendStatus","CloudUploadOutlined","Wallpaper","nextpage","previewVisible","previewImage","fileList","pageNow","totalPage","handleSetBackbround","flag","err","parseInt","backgroundId","getBase64","onerror","handlePreview","thumbUrl","newFileList","slice","splice","previewPhoto","uploadButton","listType","onPreview","footer","alt","marginLeft","HeartOutlined","data-src","weburl","rel","MinusOutlined","MoreOutlined","Illustration","Chart","accountGrowthRate","serverData","m2m","y2y","avg","account","incomePercentage","percentage","activityRate","count","log6","newsRate","news6","financial","financial6","config","autoFit","xField","yField","geometryOptions","geometry","isGroup","seriesField","columnWidthRatio","meta","alias","incomeAndPay","amountOrder","countAndWordCloud","wordCloudConfig","wordField","weightField","colorField","wordStyle","fontFamily","rotation","serverRoseData","serverWordCloudData","loadAccountGrowthRate","loadIncomePercentage","loadActivityRate","loadNewsRate","loadOrderByAmount","array","amountEntity","loadPreSixMonthBill","time","loadCountAndWordCloud","rose","wordCloud","filed","_chart","tradeDateChangeHandle","activityCustomContent","_data$","_data$$data","newsCustomContent","initMonth","active","prefix","backgroundSize","valueStyle","precision","suffix","percent","barWidthRatio","smooth","tooltip","customContent","areaStyle","line","extra","minHeight","fontWeight","renderItem","radius","FinancialForDay","FinancialForMonth","FinancialForYear","SubMenu","LayoutBackend","transformComponent","DatabaseOutlined","UserOutlined","AccountBookOutlined","ScheduleOutlined","HomeOutlined","MessageOutlined","handlTabClick","collapsed","inputOnBlur","searchfocus","inputOnFocus","initHeaderMenu","userCatche","logout","getMenuNodes","menuList","pathname","reduce","pre","find","cItem","openKeys","padding","getTitle","titles","local","menuConfig","onOpenChange","_openKeys","latestOpenKey","getParentMenuChild","requestLogout","searchInputChange","searchValue","handleSearch","addNotes","menuNodes","headerUserInfo","backgroundUrl","MenuOutlined","process","onFocus","plan","dot","NotificationOutlined","trigger","mouseEnterDelay","mouseLeaveDelay","subMenuCloseDelay","subMenuOpenDelay","defaultOpenKeys","mode","inlineCollapsed","SwitcherOutlined","StockOutlined","FieldTimeOutlined","city","ip","MoneyCollectOutlined","CarryOutOutlined","PushpinOutlined","activeLabel","activeSpin","unactiveLabel","unactiveSpin","Login","userState","pwdState","userName","passWord","userOnBlur","userOnFocus","pwdOnBlur","pwdOnFocus","userInputChange","pwdInputChange","loginHandle","loginParams","App","Backend1","ReactDOM","locale","zhCN"],"mappings":";4WACA,SAAWA,GACP,SAASC,EAAEC,GAEP,GAAIC,EAAED,GACF,OAAOC,EAAED,GAAGE,QAChB,IAAIC,EAAIF,EAAED,GAAK,CAAEE,QAAS,GAAIE,GAAIJ,EAAGK,QAAQ,GAK7C,OAFAP,EAAEE,GAAGM,KAAKH,EAAED,QAASC,EAAGA,EAAED,QAASH,GACnCI,EAAEE,QAAS,EACJF,EAAED,QAEb,IAAID,EAAI,GAGRF,EAAEQ,EAAIT,EACNC,EAAES,EAAIP,EACNF,EAAEU,EAAI,GACCV,EAAE,GAlBb,CAoBC,CAAC,SAAUD,EAAGC,EAAGE,GAChBH,EAAEI,QAAUD,EAAE,IACZ,SAAUH,EAAGC,IAER,WACG,IAAID,EACJ,GAAIY,OAAOC,SAAW,oBAAsBA,QAAQC,IACpD,CACI,KAEKF,OAAOG,OAAOC,gCAAkCJ,OAAOK,IAAID,kCAAoChB,GAAI,GAExG,MAAOC,GAAKD,GAAI,EAChB,GAAIY,OAAOI,gCAAkChB,EACzC,OACJ,IAAIG,EAAI,+QAGJe,EAAI,CAFA,iFAEI,IADJ,uBACYC,KAAK,IAEzB,SAASC,KAAKC,UAAUC,YAAcT,QAAQC,IAAIX,GAAIU,QAAQC,IAAII,KAAOL,QAAQC,IAAI,kDAAoC,6JAA8J,iCAAkC,IAAIS,MAAMC,eAAgBX,QAAQC,IAAI,MAAQX,EAAG,8BAA+BU,QAAQC,IAAI,MAAQI,IAAKN,OAAOI,gCAAiC,GAhBjd,O,mVCmIMS,EAnJW,CACtB,CACEC,MAAO,eACPC,IAAK,mBACLC,KAAM,eACNC,QAAQ,EACRC,aAAa,EACbC,MAAK,EACLC,SAAU,MAEZ,CACIN,MAAO,SACPC,IAAK,gBACLC,KAAM,eACNC,QAAQ,EACRC,aAAa,EACbC,MAAK,EACLC,SAAU,CACN,CACIN,MAAO,2BACPC,IAAK,qBACLE,QAAQ,EACRC,aAAa,GAEjB,CACIJ,MAAO,2BACPC,IAAK,qBACLE,QAAQ,EACRC,aAAa,KAUzB,CACIJ,MAAO,qBACPC,IAAK,uBACLC,KAAM,sBACNC,QAAQ,EACRC,aAAa,EACbC,MAAK,EACLC,SAAU,CACN,CACIN,MAAO,2BACPC,IAAK,mCACLE,QAAQ,EACRC,aAAa,GAEjB,CACIJ,MAAO,2BACPC,IAAK,2BACLE,QAAQ,EACRC,aAAa,GAEjB,CACIJ,MAAO,2BACPC,IAAK,6BACLE,QAAQ,EACRC,aAAa,GAEjB,CACIJ,MAAO,2BACPC,IAAK,4BACLE,QAAQ,EACRC,aAAa,KAIzB,CACIJ,MAAO,qBACPC,IAAK,oBACLC,KAAM,mBACNC,QAAQ,EACRC,aAAa,EACbC,MAAK,EACLC,SAAU,CACN,CACEN,MAAO,2BACPC,IAAK,yBACLE,QAAQ,EACRC,aAAa,GAEf,CACIJ,MAAO,2BACPC,IAAK,yBACLE,QAAQ,EACRC,aAAa,GAEjB,CACIJ,MAAO,qBACPC,IAAK,6BACLE,QAAQ,EACRC,aAAa,GAEjB,CACIJ,MAAO,2BACPC,IAAK,0BACLE,QAAQ,EACRC,aAAa,GAEjB,CACIJ,MAAO,qBACPC,IAAK,yBACLE,QAAQ,EACRC,aAAa,KAIzB,CACEJ,MAAO,2BACPC,IAAK,iBACLC,KAAM,mBACNC,QAAQ,EACRC,aAAa,EACbC,MAAK,EACLC,SAAU,CACR,CACEN,MAAO,2BACPC,IAAK,2BACLE,QAAQ,EACRC,aAAa,GAEf,CACEJ,MAAO,2BACPC,IAAK,8BACLE,QAAQ,EACRC,aAAa,GAEf,CACEJ,MAAO,2BACPC,IAAK,uBACLE,QAAQ,EACRC,aAAa,GAEf,CACEJ,MAAO,2BACPC,IAAK,oBACLE,QAAQ,EACRC,aAAa,MCpJR,GACXG,KAAM,I,kBCCJC,EAAW,WACF,WAIFD,GAELE,IAAMC,IAAIF,EAAUD,IANb,aAcP,OAAOE,IAAME,IAAIH,IAAa,IAdvB,aAsBPC,IAAMG,OAAOJ,I,iBClBRK,EAAgB,SAACC,GAE1B,IAAK,IAAIC,KAAQD,EACb,OAAO,EACX,OAAO,GASEE,EAAc,SAACxC,EAAGG,GAE3BA,GADAA,EAAgB,qBAALA,EAAiB,EAAEA,GACtB,GAAKA,GAAK,GAAKA,EAAI,EAK3B,IAHA,IAAIsC,GADJzC,EAAI0C,YAAY1C,EAAI,IAAI2C,QAAQ,WAAY,KAAKC,QAAQzC,GAAK,IACpD0C,MAAM,KAAK,GAAGA,MAAM,IAAIC,UAC9BC,EAAI/C,EAAE6C,MAAM,KAAK,GACjB5C,EAAG,GACEe,EAAI,EAAGA,EAAIyB,EAAEO,OAAQhC,IAC1Bf,GAAKwC,EAAEzB,KAAOA,EAAI,GAAK,IAAM,GAAMA,EAAI,IAAOyB,EAAEO,OAAS,IAAM,IAEnE,OAAO/C,EAAE4C,MAAM,IAAIC,UAAU7B,KAAK,IAAM,IAAM8B,GAQrCE,EAAY,SAAZA,EAAaC,GAEtB,IAAIC,EAEJ,GAAsB,kBAAXD,EAEP,GAAIE,MAAMC,QAAQH,GAEd,IAAK,IAAIlC,KADTmC,EAAS,GACKD,EAEVC,EAAOG,KAAKL,EAAUC,EAAOlC,UAG9B,GAAY,OAATkC,EACNC,EAAS,UAEN,GAAGD,EAAOK,cAAcC,OAC3BL,EAASD,OAIT,IAAK,IAAIlC,KADTmC,EAAS,GACKD,EACVC,EAAOnC,GAAKiC,EAAUC,EAAOlC,SAKrCmC,EAASD,EAGb,OAAOC,GAIEM,EAAe,SAACC,GAE3B,OAAOA,GAAWA,EAAUC,MAASC,MAAM,QAIhCC,EAAgB,SAACH,GAC1B,OAAOA,GAAWA,EAAUC,MAASC,MAAM,U,wKC/DzCE,GAAc,CAChBC,IAAK,iFACLC,IAAK,+DACLC,IAAK,qHACLC,IAAK,6CACLC,IAAK,qKACLC,IAAK,2HACLC,IAAK,yGACLC,IAAK,+JACLC,IAAK,yDACLC,IAAK,qHACLC,IAAK,+GACLC,IAAK,6FACLC,IAAK,iCACLC,IAAK,yGACLC,IAAK,kCAIM,SAASC,GAAKC,GAA+B,IAA1BzC,EAAyB,uDAAlB,GAAI0C,EAAc,uDAAP,MAChD,OAAO,IAAIC,SAAQ,SAACC,EAASC,IAGZ,QAATH,EACUI,KAAMjD,IAAI4C,EAAK,CACrBM,OAAQ/C,IAEI,WAAT0C,EACGI,KAAME,OAAOP,EAAK,CACxBM,OAAQ/C,IAEI,QAAT0C,EACGI,KAAMG,IAAIR,EAAKzC,GAEf8C,KAAMI,KAAKT,EAAKzC,IAGtBmD,MAAK,SAAAC,GACTR,EAAQQ,EAASpD,OAEW,IAAxBoD,EAASpD,KAAKqD,OAEdC,IACAC,EAAY9D,KAAO,GACnBrB,OAAOoF,SAASC,KAAO,aAG7B,SAAAC,QACgBC,IAAVD,GAAsC,iBAAfA,EAAML,MAC7B,KAAQK,MAAM,wCAFX,MAIgEA,EAA/DN,SAAYQ,EAJb,EAIaA,OAAQC,EAJrB,EAIqBA,WAJrB,IAIiC7D,KAAQ8D,IAE1CC,EAAOvC,GAAYoC,IAAWC,SAN7B,MAI+C,6CAJ/C,GAOQ,MAAXD,GAEAN,IACAC,EAAY9D,KAAO,GACnBrB,OAAOoF,SAASC,KAAO,UAEvB,KAAQC,MAAMK,MAEnBC,OAAM,SAAAN,GAEL,KAAQA,MAAM,mCAAYA,EAAMO,eC1E5C,IAAIC,GAAa,WAGJC,GAAe,SAAApB,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,cAA4BnB,EAAQ,SAIjEqB,GAAa,SAAArB,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,gBAA8BnB,EAAQ,SAEjEsB,GAAa,SAAAtB,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,oBAAkCnB,EAAQ,SAErEuB,GAAgB,UAAMJ,GAAN,sBAEhBK,GAAa,SAAAxB,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,uBAAqCnB,EAAQ,SAExEyB,GAAc,SAAAzB,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,qBAAmCnB,EAAQ,QAEvE0B,GAAc,SAAA1B,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,qBAAmCnB,EAAQ,QAEvE2B,GAAc,SAAA3B,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,mBAAiCnB,EAAQ,QAErE4B,GAAiB,UAAMT,GAAN,gCAEjBU,GAAc,SAAA7B,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,qBAAmCnB,EAAQ,QAEvE8B,GAAc,SAAA9B,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,6BAA2CnB,EAAQ,SAE/E+B,GAAa,SAAA/B,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,4BAA0CnB,EAAQ,WAE7EgC,GAAU,SAAAhC,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,0BAAwCnB,EAAQ,QAExEiC,GAAW,SAAAjC,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,0BAAwCnB,EAAQ,QAEzEkC,GAAiB,SAAAlC,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,oBAAkCnB,EAAQ,QAEzEmC,GAAe,UAAMhB,GAAN,8BAEfiB,GAAgB,SAAApC,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,2BAAyCnB,EAAQ,WAE/EqC,GAAU,UAAMlB,GAAN,yBAEVmB,GAAc,SAAAtC,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,kBAAgCnB,EAAQ,QAEpEuC,GAAa,SAAAvC,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,yBAAuCnB,EAAQ,WAE1EwC,GAAW,SAAAxC,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,uBAAqCnB,EAAQ,QAEtEyC,GAAoB,UAAMtB,GAAN,4BAEpBuB,GAAiB,SAAA1C,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,gCAA8CnB,EAAQ,SAErF2C,GAAiB,SAAA3C,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,8BAA4CnB,EAAQ,QAEnF4C,GAAiB,SAAA5C,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,gCAA8CnB,EAAQ,WAErF6C,GAAkB,SAAA7C,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,yBAAuCnB,EAAQ,QAE/E8C,GAAmB,SAAA9C,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,+BAA6CnB,EAAQ,QAItF+C,GAAc,SAAA/C,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,6BAA2CnB,EAAQ,SAE/EgD,GAAc,SAAAhD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,2BAAyCnB,EAAQ,QAM7EiD,GAAW,SAAAjD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,2BAAyCnB,EAAQ,QAE1EkD,GAAc,SAAAlD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,iBAA+BnB,EAAQ,QAEnEmD,GAAa,SAAAnD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,wBAAsCnB,EAAQ,SAEzEoD,GAAa,SAAApD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,sBAAoCnB,EAAQ,QAEvEqD,GAAa,SAAArD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,wBAAsCnB,EAAQ,WAEzEsD,GAAmB,SAAAtD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,kCAAgDnB,EAAQ,QAEzFuD,GAAqB,SAAAvD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,oCAAkDnB,EAAQ,QAE7FwD,GAAqB,SAAAxD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,8BAA4CnB,EAAQ,QAEvFyD,GAAuB,SAAAzD,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,oCAAkDnB,EAAQ,QAI/F0D,GAAmB,SAAA1D,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,oCAAkDnB,EAAQ,SAE3F2D,GAAoB,SAAA3D,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,oCAAkDnB,EAAQ,QAE5F4D,GAAoB,SAAA5D,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,oCAAkDnB,EAAQ,WAE5F6D,GAAe,UAAM1C,GAAN,0CAEf2C,GAAuB,UAAM3C,GAAN,0CAIvB4C,GAAwB,SAAA/D,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,wCAAsDnB,EAAQ,SAEpGgE,GAAwB,SAAAhE,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,wCAAsDnB,EAAQ,QAEpGiE,GAAwB,SAAAjE,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,wCAAsDnB,EAAQ,WAEpGkE,GAAyB,SAAAlE,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,yCAAuDnB,EAAQ,QAEtGmE,GAAyB,UAAMhD,GAAN,4CAEzBiD,GAA2B,SAAApE,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,2CAAyDnB,EAAQ,QAE1GqE,GAA2B,UAAMlD,GAAN,8CAE3BmD,GAA0B,SAAAtE,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,0CAAwDnB,EAAQ,QAExGuE,GAA0B,UAAMpD,GAAN,6CAE1BqD,GAAkB,SAAAxE,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,eAA6BnB,EAAQ,QAErEyE,GAAgB,UAAMtD,GAAN,yBAEhBuD,GAAuB,kBAAMjF,GAAK,GAAD,OAAI0B,GAAJ,8BAA4C,GAAI,QAEjFwD,GAAiB,SAAA3E,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,iCAAuCnB,GAAU,GAAI,QAEpF4E,GAAc,SAAA5E,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,iCAAuCnB,GAAU,GAAI,QAEjF6E,GAAuB,SAAA7E,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,4CAAkDnB,GAAU,GAAI,QAErG8E,GAAsB,SAAA9E,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,2CAAiDnB,GAAU,GAAI,QAEnG+E,GAAmB,SAAA/E,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,wCAA8CnB,GAAU,GAAI,QAE7FgF,GAAqB,SAAAhF,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,0CAAgDnB,GAAU,GAAI,QAEjGiF,GAAU,SAAAjF,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,0BAAwCnB,EAAQ,QAExEkF,GAAc,SAAAlF,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,qBAAmCnB,EAAQ,QAEvEmF,GAAa,SAAAnF,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,4BAA0CnB,EAAQ,SAE7EoF,GAAa,SAAApF,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,0BAAwCnB,EAAQ,QAE3EqF,GAAa,SAAArF,GAAM,OAAIP,GAAK,GAAD,OAAI0B,GAAJ,4BAA0CnB,EAAQ,W,kICrJ7EsF,GAA2B,SAAC3F,EAAMuB,EAASqE,GAAhB,OAAgCC,GAAA,EAAa7F,GAAM,CACvF8F,UAAW,WACXvE,QAASA,EACTqE,YAAaA,KAUJG,GAAc,iBAAO,CAAEC,UAAU,cAACC,GAAA,EAAD,IAAmBC,KAAK,QAAQC,UAAS,ICV1EC,GAAsB,SAACC,GAChC,OAAOA,EAAMnI,OAAOmI,MAAM1I,QAAQ,OAAQ,K,mBC6M/B2I,I,0NAlMbC,MAAQ,CACJC,cAAc,EACdC,gBAAgB,EAChBC,IAAK,KACLC,YAAa,I,EAGjBC,cAAgB,SAAAC,GAAa,EAAKA,QAAUA,G,EAqB5CC,iBAAmB,SAAChM,GAChB,IAAMiM,EAAOjM,EAAEoD,OAAO8I,MAAM,GAC5B,GAAID,EAEA,GAAIA,EAAKb,KAAO,MAAQ,KAAU,CAC9B,IAAMe,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACZ,EAAKC,SAAS,CACVV,IAAKO,EAAO9I,SACb,WACC,EAAKiJ,SAAS,CACVZ,cAAc,QAI1BS,EAAOI,cAAcN,QAGrBpB,GAAyB,QAAS,2BAAQ,2DAG9CA,GAAyB,QAAS,2BAAQ,kCAE9C7K,EAAEoD,OAAOmI,MAAQ,I,EAInBiB,eAAiB,WACf,IAAIC,EAAK,eAEP,GAAyC,SAArCA,EAAMV,QAAQW,mBACd,OAAO,EAMX,IAAMC,EAAgBF,EAAMV,QAAQW,mBAIhCb,EAFgBY,EAAMG,iBAAiBD,GAEXE,YAChCJ,EAAMH,SAAS,CACXT,gBACD,WAECY,EAAMK,OAAOjB,O,EAIrBiB,O,uCAAS,WAAOC,GAAP,qBAAAC,EAAA,6DACDP,EADC,gBAECH,SAAS,CACXX,gBAAgB,IAGhBsB,EAAO,CACP,KAAQF,EAAMG,YAPb,SASgBnG,GAAWkG,GAT3B,OASC5J,EATD,OAULoJ,EAAMH,SAAS,CACXX,gBAAgB,IAEfrF,EAAajD,EAAbiD,IACQ,IADKjD,EAARwC,MAENgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMH,SAAS,CACXZ,cAAc,KAGlBb,GAAyB,QAAS,2BAAQvE,GApBzC,2C,wDAyBTsG,iBAAmB,SAACO,GAChB,IAAIC,EAASC,SAASC,cAAc,UAChCC,EAAUH,EAAOI,WAAW,MAC5BC,EAAQN,EAAaM,MACrBC,EAASP,EAAaO,OAS1B,OARAN,EAAOK,MAAQA,EACfL,EAAOM,OAASA,EAChBH,EAAQI,uBAAwB,EAChCJ,EAAQK,UAAUT,EAAc,EAAG,EAAGM,EAAOC,GAC7CH,EAAQM,yBAA2B,iBACnCN,EAAQO,YACRP,EAAQQ,IAAIN,EAAQ,EAAGC,EAAS,EAAGM,KAAKC,IAAIR,EAAOC,GAAU,EAAG,EAAG,EAAIM,KAAKE,IAAI,GAChFX,EAAQY,OACDf,G,EAIXgB,cAAgB,WACZ,EAAK9B,SAAS,CACVZ,cAAc,K,kEAjHH,IAAD,OACV2C,EAAa,IAAIjC,WACvBiC,EAAWhC,OAAS,SAACrM,GACjB,IAAMsO,EAAUtO,EAAEoD,OAAOC,OACzB,EAAKiJ,SAAS,CAACV,IAAK0C,KAGxB,IACMzC,EADO9F,EAAY9D,KACAsM,KACzBC,KAAKlC,SAAS,CACVT,gBAEO2C,KAAKC,MAAMC,mBAElBL,EAAW9B,cAAciC,KAAKC,MAAMC,qB,+BAwGjC,MAEoDF,KAAK/C,MAAvDI,EAFF,EAEEA,YAAaH,EAFf,EAEeA,aAAcC,EAF7B,EAE6BA,eAAgBC,EAF7C,EAE6CA,IAClD,OACI,sBAAK+C,UAAU,iBAAf,UAEI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,UAAUC,MAAO,CAACC,gBAAiB,OAAShD,EAAc,SAE7E,qBAAK8C,UAAU,aAAf,SACI,uBAAMA,UAAU,cAAcG,KAAK,SAAnC,UACE,uBACI5J,KAAK,OACL6J,OAAO,UACPJ,UAAU,oBACVK,SAAUR,KAAKxC,mBAEnB,qBAAK2C,UAAU,SAAf,SACE,sDAKR,mBACIjN,MAAM,2BACN+L,MAAM,OACNwB,UAAU,EACVC,gBAAgB,EAChBC,QAASzD,EACT0D,KAAMZ,KAAKhC,eACXb,eAAgBA,EAChB0D,SAAUb,KAAKJ,cARnB,SASI,sBAAKO,UAAU,eAAf,UACI,cAAC,KAAD,CACI/C,IAAKA,EACLgD,MAAO,CAAClB,OAAQ,IAAKD,MAAO,QAC5B6B,QAAQ,mBACRX,UAAU,kBACVY,SAAU,EACVC,UAAU,EACVC,YAAajB,KAAKC,MAAMgB,YACxBC,QAAQ,EACRC,YAAY,EACZC,WAAW,EAGXC,cAAerB,KAAK1C,cAAcgE,KAAKtB,QAE3C,qBAAKG,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAkBC,MAAO,CACpCmB,aAAc,MACdrC,OAAQ,IACRD,MAAO,wB,GArLduC,c,oBCVlBC,G,KAAAA,QAqPQC,G,4MA1ObC,WAAaC,IAAMC,Y,EAEnBC,iBAAmBF,IAAMC,Y,EAEzB5E,MAAQ,CAEJ8E,aAAc,GAEdC,SAAS,G,EAOXC,gB,sBAAkB,oCAAAzD,EAAA,6DACVP,EADU,gBAGRH,SAAS,CAACkE,SAAS,IAHX,SAKkBxJ,KALlB,gBAKPV,EALO,EAKPA,IAAKT,EALE,EAKFA,KAAMrD,EALJ,EAKIA,KAElBiK,EAAMH,SAAS,CAACkE,SAAS,IACZ,IAAT3K,EACA4G,EAAMH,SAAS,CACXiE,aAAc/N,IAGlBqI,GAAyB,QAAS,2BAAQvE,GAbhC,4C,EA2BlBoK,aAAe,SAACC,EAAMpF,EAAOqF,GAKzB,OAAKrF,EAEMA,EAAMrI,OAAS,EACjB0N,EAAS,2DACPrF,EAAMrI,OAAS,GACjB0N,EAAS,4DACN,kBAAkBxP,KAAKmK,GAG1BqF,IAFAA,EAAS,oGANTA,EAAS,yC,EAatBC,aAAe,SAACF,EAAMpF,EAAMqF,GAExB,IAAME,EAAW,EAAKX,WAAWvM,QAAQmN,cAAc,aACvD,OAAKxF,EAEMA,EAAMrI,OAAS,EACjB0N,EAAS,2DACPrF,EAAMrI,OAAS,GACjB0N,EAAS,4DACN,kBAAkBxP,KAAKmK,GAExBA,IAAUuF,EACZF,EAAS,sEAETA,IAJAA,EAAS,oGANTA,EAAS,yC,EAetBI,gBAAkB,SAAChR,GACjB,IAAIyM,EAAK,eAGTA,EAAM0D,WAAWvM,QAAQqN,eAAe,CAAC,YAAa,cAActL,KAApE,uCAAyE,WAAM4F,GAAN,mBAAAyB,EAAA,6DAErEP,EAAMH,SAAS,CAACkE,SAAS,IACrBvD,EAAO,CACP6D,SAAUvF,EAAM2F,WAJiD,SAMhDjK,GAAYgG,GANoC,OAM/D5J,EAN+D,OAQrEoJ,EAAMH,SAAS,CAACkE,SAAS,IACpBlK,EAAajD,EAAbiD,IACQ,IADKjD,EAARwC,KAENgF,GAAyB,UAAW,2BAAQ,wCAE5CA,GAAyB,QAAS,2BAAQvE,GAbuB,2CAAzE,uDAeGE,OAAM,SAAAxG,GAAC,OAAIa,QAAQC,IAAI,2BAAOd,O,EAInCmR,sBAAwB,SAACnR,GACrB,IAAIyM,EAAK,eAGTA,EAAM6D,iBAAiB1M,QAAQqN,eAAe,CAAC,cAActL,KAA7D,uCAAkE,WAAM4F,GAAN,mBAAAyB,EAAA,6DAEhEP,EAAMH,SAAS,CAACkE,SAAS,IACrBvD,EAAO,CACTmE,UAAW7F,EAAM6F,WAJ6C,SAM3ClK,GAAY+F,GAN+B,OAM1D5J,EAN0D,OAQhEoJ,EAAMH,SAAS,CAACkE,SAAS,IACpBlK,EAAajD,EAAbiD,IACQ,IADKjD,EAARwC,KAERgF,GAAyB,UAAW,2BAAQ,oDAE5CA,GAAyB,QAAS,2BAAQvE,GAboB,2CAAlE,uDAeGE,OAAM,SAAAxG,GAAC,OAAIa,QAAQC,IAAI,yDAAYd,O,kEAOtCwO,KAAK6C,eAAiB,CAClBC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEvB/C,KAAKiD,iBAAmB,CACpBD,WAAY,CAACD,KAAM,GAAIG,OAAQ,IAEnClD,KAAKiC,oB,+BAIA,MAE2BjC,KAAK/C,MAA9B8E,EAFF,EAEEA,aAAcC,EAFhB,EAEgBA,QACrB,OACI,cAAC,KAAD,CAAe9O,MAAM,2BAArB,SACI,0BAASiN,UAAU,cAAnB,UACI,sBAAKA,UAAU,SAAf,UACI,2EACA,uCACI,4BACI,kHAEJ,4BACI,iOAEJ,4BACI,8MAEJ,4BACI,uOAIZ,oBAAK4C,KAAM,GAAI5C,UAAU,mBAAzB,SACI,oBAAMtD,SAAUmF,EAAhB,SACI,qBAAMmB,iBAAiB,IAAvB,UACI,cAAC1B,GAAD,CAAS2B,IAAI,2BAAb,SACI,oBAAMlQ,MAAM,2BAAOmQ,UAAU,EAAOlD,UAAU,iBAA9C,SACI,iDAAUH,KAAK6C,gBAAf,cACI,mBAAMS,KAAN,2BAAWC,MAAM,sBAAUvD,KAAK6C,gBAAhC,aACI,mBAAOnM,KAAK,OAAOqG,MAAOgF,EAAatO,KAAM+P,UAAU,OAE3D,mBAAMF,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,aACI,mBAAOnM,KAAK,OAAOqG,MAAOgF,EAAa0B,IAAKD,UAAU,OAE1D,mBAAMF,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,aACI,mBAAOnM,KAAK,OAAOqG,MAAOgF,EAAa2B,MAAOF,UAAU,OAE5D,mBAAMF,KAAN,2BAAWC,MAAM,MAASvD,KAAK6C,gBAA/B,aACI,mBAAOnM,KAAK,OAAOqG,MAAOgF,EAAa4B,GAAIH,UAAU,OAEzD,mBAAMF,KAAN,2BAAWC,MAAM,SAAYvD,KAAK6C,gBAAlC,aACI,mBAAOnM,KAAK,OAAOqG,MAAOgF,EAAa6B,MAAOJ,UAAU,OAE5D,mBAAMF,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,aACI,mBAAOnM,KAAK,OAAOqG,MAAOgF,EAAa8B,SAAUL,UAAU,OAE/D,mBAAMF,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,aACI,mBAAOnM,KAAK,OAAOqG,MAAOgF,EAAa+B,SAAUN,UAAU,cAtBnD,KA2BxB,cAAC/B,GAAD,CAAS2B,IAAI,2BAAb,SACI,oBAAMlQ,MAAM,2BAAOmQ,UAAU,EAAOlD,UAAU,iBAA9C,SACI,iDAAUH,KAAK6C,gBAAf,IAA+BkB,IAAK/D,KAAK8B,iBAAkBkC,SAAUhE,KAAK2C,sBAA1E,UACI,mBAAMW,KAAN,2BAAWC,MAAM,4BAAWvD,KAAK6C,gBAAjC,IAAiDoB,kBAAoB,SAACzS,GAAD,OAAOsL,GAAoBtL,IAAI0S,KAAK,YAAYC,aAAcpC,EAAaa,UAAWwB,MAAO,CAAC,CAACC,UAAU,EAAMpM,QAAS,8CAAW,CAACwH,IAAK,EAAGxH,QAAS,sDAAmB,CAACqM,IAAK,IAAKrM,QAAS,uDAAjQ,SACE,kBAAOsM,SAAP,CAAgBC,WAAS,EAACC,UAAW,IAAKC,SAAU,CAACC,QAAS,EAAGC,QAAS,QAE5E,mBAAMtB,KAAN,6BAAetD,KAAKiD,kBAApB,aACI,mBAAQvM,KAAK,UAAUmO,SAAS,SAAhC,oCAPQ,KAYxB,cAACpD,GAAD,CAAS2B,IAAI,2BAAb,SACI,oBAAMlQ,MAAM,2BAAOmQ,UAAU,EAAOlD,UAAU,iBAA9C,SACI,cAAC,GAAD,OAFgB,KAKxB,cAACsB,GAAD,CAAS2B,IAAI,2BAAb,SACI,oBAAMlQ,MAAM,2BAAOmQ,UAAU,EAAOlD,UAAU,iBAA9C,SACI,iDAAUH,KAAK6C,gBAAf,IAA+BkB,IAAK/D,KAAK2B,WAAYqC,SAAUhE,KAAKwC,gBAApE,UACI,mBAAMc,KAAN,2BAAWC,MAAM,kCAAYvD,KAAK6C,gBAAlC,IAAkDoB,kBAAoB,SAACzS,GAAD,OAAOsL,GAAoBtL,IAAI0S,KAAK,YAAYE,MAAO,CAAC,CAACU,UAAW9E,KAAKkC,eAA/I,SACE,kBAAO6C,SAAP,OAEF,mBAAMzB,KAAN,2BAAWC,MAAM,8CAAcvD,KAAK6C,gBAApC,IAAoDoB,kBAAoB,SAACzS,GAAD,OAAOsL,GAAoBtL,IAAI0S,KAAK,YAAYE,MAAO,CAAC,CAACU,UAAW9E,KAAKqC,eAAjJ,SACE,kBAAO0C,SAAP,OAEF,mBAAMzB,KAAN,6BAAetD,KAAKiD,kBAApB,aACI,mBAAQvM,KAAK,UAAUmO,SAAS,SAAhC,oCAVQ,qB,GApNrCrD,a,0ECDZwD,I,YAAAA,aACAC,G,KAAAA,OAqSQC,G,4MAhSXjI,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,EACbC,QAAS,CAELC,KAAM,KACNC,UAAW,KACXC,QAAS,KACTC,WAAY,IAEhBlP,KAAM,I,EAMVmP,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,eACP6S,UAAW,OACXC,MAAM,UAEV,CACI9S,MAAO,2BACP6S,UAAW,mBACXE,OAAQ,SAAClO,EAAMmO,GAAP,OAAkB,+BAAQA,EAAOC,QAAYD,EAAOC,QAAQC,SAAnB,QAErD,CACIlT,MAAO,KACP6S,UAAW,KACXC,MAAM,UAEV,CACI9S,MAAO,eACP6S,UAAW,QAEf,CACI7S,MAAO,eACP6S,UAAW,OACXC,MAAM,Y,EASlBK,Y,sBAAc,sCAAA7H,EAAA,6DACNP,EADM,wBAGsB5F,KAHtB,gBAGHP,EAHG,EAGHA,IAAKT,EAHF,EAGEA,KAAMrD,EAHR,EAGQA,KACL,IAATqD,IAEIX,EAAO,IACN1B,KAAM,cAACiQ,GAAD,CAAiBlI,MAAM,GAAvB,gCAAc,IACzB/I,EAAKsS,SAAQ,SAAArS,GACTyC,EAAK1B,KAAM,cAACiQ,GAAD,CAAwBlI,MAAO9I,EAAKyC,KAApC,SAA2CzC,EAAKmS,UAAnCnS,EAAKyC,UAEjCuH,EAAMH,SAAS,CACXpH,UAGJ2F,GAAyB,QAAS,2BAAQvE,GAfpC,2C,EAuBdyO,S,sBAAW,sCAAA/H,EAAA,6DACHP,EADG,eAEHQ,EAAO,CACP4G,QAASpH,EAAMhB,MAAMoI,QACrBC,SAAUrH,EAAMhB,MAAMqI,SACtB5O,KAAMuH,EAAMhB,MAAMuI,QAAQI,WAC1BF,UAAWzH,EAAMhB,MAAMuI,QAAQE,UAC/BC,QAAS1H,EAAMhB,MAAMuI,QAAQG,SAGjC1H,EAAMH,SAAS,CAACyH,aAAa,IAVtB,SAYyBnN,GAAWqG,GAZpC,gBAYA3G,EAZA,EAYAA,IAAKT,EAZL,EAYKA,KAAMrD,EAZX,EAYWA,KAElBiK,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,EACA4G,EAAMH,SAAS,CAEXsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GAvBvC,4C,EA2BX4O,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQE,UAAY,KACpBF,EAAQG,QAAU,KAClBH,EAAQI,WAAa,GACrB3H,EAAMH,SAAS,CACXuH,QAAS,EACTG,QAASA,IACV,WACCvH,EAAMsI,e,EAKdI,eAAiB,SAACrB,EAAUlQ,GACxB,IAAI6I,EAAK,eAETA,EAAMH,SAAS,CACXwH,SAAUA,EACVD,QAAS,IACV,WACCpH,EAAMsI,e,EAKdK,WAAa,SAACxR,GACV,IAAI6I,EAAK,eACTA,EAAMH,SAAS,CACXuH,QAASjQ,IACV,WACC6I,EAAMsI,e,EAKdM,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACX0H,UACAH,QAAS,IACV,WACCpH,EAAMsI,e,EAKdQ,aAAe,SAAChK,GACZ,IAAIkB,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QACLA,EAAQI,WAAa7I,EACrBkB,EAAMH,SAAS,CACX0H,UACAH,QAAS,IACV,WACCpH,EAAMsI,e,EAIdS,YAAc,WACV,IAAI/I,EAAK,eAETA,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI9G,EAAO,CACP/H,KAAM,EAAKuG,MAAMuI,QAAQI,WACzBF,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,SAEhC7O,KAAM,CACFmQ,OAAQ,MACRxQ,IAAK6B,GACLvB,OAAQ0H,EACRyI,aAAc,OAEdC,QAAS,CACL,eAAgB,sBAGnBhQ,MAAK,SAAUiQ,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI8B,EAAW,4CACXC,EAAO,IAAIC,KAAK,CAACH,EAAIpT,MAAO,CAAC0C,KAAM,uBACvC,GAAItE,OAAOS,UAAU2U,iBACjB3U,UAAU4U,WAAWH,EAAMD,OACxB,CACH,IAAIK,EAAO7I,SAASC,cAAc,KAClC4I,EAAKjQ,KAAOrF,OAAOuV,IAAIC,gBAAgBN,GACvCI,EAAKG,SAAWR,EAChBK,EAAKI,QACL1V,OAAOuV,IAAII,gBAAgBL,EAAKjQ,UAGvCO,OAAM,SAAUoP,GACbnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7BlJ,GAAyB,QAAS,2BAAQ,wD,kEAWpD2D,KAAKqG,cAELrG,KAAK6F,cAEL7F,KAAKuG,a,+BAGG,IAIFyB,EAJC,SAEoEhI,KAAK/C,MAAvEkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAAYC,EAFnD,EAEmDA,QAAS9O,EAF5D,EAE4DA,KAC5DgP,EAAqBF,EAArBE,UAAUC,EAAWH,EAAXG,QAOf,OAJIqC,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAWrQ,IAAOsQ,IAE1B,CAAC,KAAK,MAGlB,cAAC,KAAD,CAAezS,MAAM,2BAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,4BAAjB,SACI,oBAAQxG,MAAOyI,EAAQI,WAAYzF,UAAU,aAAa+H,YAAU,EAAC1H,SAAUR,KAAK+G,aAC5EoB,YAAY,6CADpB,SAEKzR,MAGT,mBAAM4M,KAAN,CAAWC,MAAM,4BAAjB,SACI,cAACyB,GAAD,CAAajI,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACI,cAAC8B,EAAA,EAAD,IADJ,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACI,cAAC4B,GAAA,EAAD,IADJ,oBAIJ,mBAAMhF,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKgH,YAAvD,UACI,cAACuB,GAAA,EAAD,IADJ,yBAMZ,oBAAKxF,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAAS4L,OAAO,KAAKnF,UAAQ,EAACrB,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EAC5FuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,yB,GAxR/BpF,a,0JCJZyD,I,YAAAA,QAybQ+D,G,4MAtbb/L,MAAQ,CACNgM,cAAa,EAEb1D,aAAa,EACb2D,cAAc,GACdC,gBAAgB,GAChBC,YAAY,GACZC,KAAM,CACJC,UAAU,KACVC,kBAAkB,KAClBC,UAAW,KACXC,eAAe,EACfC,UAAU,EACVC,YAAY,GAEdC,SAAU,CAAC,CACTC,MAAM,EACNC,KAAM,EACNC,OAAQ,KACRN,eAAgB,EAChBO,gBAAiB,M,EAOrBnE,YAAc,WACZ,EAAKC,QAAU,CACb,CACE5S,MAAO,eACP+S,OAAQ,SAAClO,EAAMmO,EAAO2D,GAAd,OAAyBA,EAAM,GACvC7D,MAAM,UAER,CACE9S,MAAO,eACP6S,UAAW,SACXE,OAAO,SAAClJ,GAAD,OAAaA,GAAQ,EAAKE,MAAMmM,aACvCpD,MAAM,UAER,CACE9S,MAAO,2BACP6S,UAAW,OACXC,MAAM,SACNC,OAAQ,SAAClO,EAAMmO,EAAQ2D,GACrB,OAAO,qBAAQ9M,MAAOhF,EAAMsL,UAAU,EAAO7C,SAAU,SAAChP,GAAD,OAAO,EAAKyY,aAAazY,EAAEqY,IAA3E,UACL,cAAC,GAAD,CAAQ9M,MAAO,EAAf,0BACA,cAAC,GAAD,CAAQA,MAAO,EAAf,+BAIN,CACE7J,MAAO,2BACP6S,UAAW,kBACXmE,UAAU,EACVjE,OAAQ,SAAClO,EAAMmO,EAAQ2D,GACrB,OAAO,mBAAOnT,KAAK,OAAOqG,MAAOhF,EAAM0M,UAAW,GAAIpB,UAAU,EAAO7C,SAAU,SAAChP,GAAD,OAAO,EAAK2Y,YAAY3Y,EAAG0U,EAAQ2D,EAAO,wBAG/H,CACE3W,MAAO,6CACP6S,UAAW,iBACXC,MAAM,QACNC,OAAQ,SAAClO,EAAMmO,EAAQ2D,GACrB,OAAO,oBAAa9M,MAAOhF,EAAMoI,UAAU,uBAAuBiK,SAAS,EAAO3K,IAAK,EAAG4K,OAAQ,SAAAtN,GAAK,OAAIA,EAAM1I,QAAQ,YAAa,KAAKmM,SAAU,SAAChP,GAAD,OAAO,EAAK2Y,YAAY3Y,EAAG0U,EAAQ2D,EAAO,uBAGnM,CACE3W,MAAO,eACP8S,MAAM,SACNC,OAAQ,SAAClO,EAAMmO,EAAO2D,GAAd,OACN,EAAK5M,MAAM2M,SAASlV,OAAS,EAC3B,oBAAYxB,MAAM,4BAAQoX,UAAW,kBAAM,EAAKC,WAAWV,IAA3D,SACE,cAACW,GAAA,EAAD,MAEA,oBAAShO,UAAU,OAAOtJ,MAAM,4EAAhC,SACF,cAACuX,GAAA,EAAD,U,EASVC,YAAc,WAAO,IAAD,EACW,EAAKzN,MAA7B2M,EADa,EACbA,SAASR,EADI,EACJA,YACVnV,EAAO,CACT4V,MAAMD,EAASA,EAASlV,OAAO,GAAGmV,MAAM,EACxCC,KAAM,EACNC,OAAOX,EACPK,eAAgB,EAChBO,gBAAiB,IAEnBJ,EAAWA,EAASe,OAAO1W,GAC3B,EAAK6J,SAAS,CAAC8L,c,EAOjBW,WAAa,SAACV,GACZ,IAAM5L,EAAK,eACP2L,EAAW3L,EAAMhB,MAAM2M,SACJ,IAApBA,EAASlV,OACV2H,GAAyB,QAAS,2BAAQ,uHAE1CuN,EAAWA,EAASgB,QAAO,SAAC3W,EAAMd,GAAP,OAAeA,IAAQ0W,KAClD5L,EAAMH,SAAS,CAAE8L,aAAW,WAC1B3L,EAAM4M,iB,EAYZV,YAAc,SAAC3Y,EAAG0U,EAAQ2D,EAAOiB,GAC/B,IAAM7M,EAAK,eACL2L,EAAa3L,EAAMhB,MAAnB2M,SACN,GAAI,mBAAqBkB,EAAM,CAG7B,IAAIrB,EAAiBjY,EACU,kBAApBiY,IACTA,EAAiBA,EAAepV,QAAQ,YAAY,KAGlD,KAAOoV,IACTA,EAAiB,GAGhBG,EAASC,GAAOJ,iBAAmBA,IACpCG,EAASC,GAAOJ,eAAiBA,GAEnCG,EAASC,GAAOJ,eAAiBA,EACjCxL,EAAMH,SAAS,CAAE8L,aAAW,WAC1B3L,EAAM4M,oBAIRjB,EAASC,GAAOiB,GAAUtZ,EAAEoD,OAAOmI,MAAO1I,QAAQ,iBAAkB,IACpE4J,EAAMH,SAAS,CAAE8L,c,EASrBK,aAAe,SAAClN,EAAM8M,GACpB,IAAI5L,EAAK,eACH2L,EAAa,EAAK3M,MAAlB2M,SACFA,EAASC,GAAOC,OAAS/M,IAC3B6M,EAASC,GAAOC,KAAO/M,EACvBkB,EAAMH,SAAS,CAAC8L,aAAU,WACxB3L,EAAM4M,iB,EAQZE,kB,sBAAoB,sCAAAvM,EAAA,6DACdP,EADc,wBAGc5D,KAHd,gBAGXvC,EAHW,EAGXA,IAAKT,EAHM,EAGNA,KAAMrD,EAHA,EAGAA,KACL,IAATqD,GACEX,EAAO,GACX1C,EAAKsS,SAAQ,SAAArS,GACXyC,EAAK1B,KAAM,cAAC,GAAD,CAAsB+H,MAAO9I,EAAKnC,GAAlC,SAAuCmC,EAAK+W,iBAA/B/W,EAAKnC,QAE/BmM,EAAMH,SAAS,CACboL,cAAexS,KAGjB2F,GAAyB,QAAS,2BAAQvE,GAb1B,2C,EAoBpBmT,oB,sBAAsB,sCAAAzM,EAAA,6DAChBP,EADgB,wBAGY3D,KAHZ,gBAGbxC,EAHa,EAGbA,IAAKT,EAHQ,EAGRA,KAAMrD,EAHE,EAGFA,KACL,IAATqD,GACEX,EAAO,GACX1C,EAAKsS,SAAQ,SAAArS,GACXyC,EAAK1B,KAAM,cAAC,GAAD,CAAsB+H,MAAO9I,EAAKnC,GAAlC,SAAuCmC,EAAKiX,KAA/BjX,EAAKnC,QAE/BmM,EAAMH,SAAS,CACbqL,gBAAiBzS,KAGnB2F,GAAyB,QAAS,2BAAQvE,GAbxB,2C,EAsBtBqT,mBAAqB,SAACpO,EAAM+N,GAC1B,IAAI7M,EAAK,eACHoL,EAAS,EAAKpM,MAAdoM,KACNA,EAAKyB,GAAS/N,EACdkB,EAAMH,SAAS,CAACuL,U,EAGlB+B,aAAe,WACb,EAAKtN,SAAS,CAACmL,cAAc,K,EAG/BoC,cAAgB,WACL,eACHvN,SAAS,CACbmL,cAAc,K,EASlB9T,aAAe,SAACC,GACd,OAAOA,GAAWA,EAAUC,O,EAQ9BiW,gBAAkB,SAAC7F,EAAMqB,GACvB,IAAM7I,EAAK,eACLoL,EAASpL,EAAMhB,MAAfoM,KACNA,EAAKG,UAAY/D,EACjBxH,EAAMH,SAAS,CAACuL,U,EAMlBwB,UAAY,WACV,IAAI5M,EAAK,eADO,EAEQA,EAAMhB,MAAxB2M,EAFU,EAEVA,SAASP,EAFC,EAEDA,KACXI,EAAiB,EACjBC,EAAY,EACZC,EAAc,EAClBC,EAAStD,SAAQ,SAAArS,GACZ,IAAMA,EAAK6V,KACZJ,GAAazV,EAAKwV,eAElBE,GAAe1V,EAAKwV,eAEtBA,GAAkBxV,EAAKwV,kBAEzBJ,EAAKI,eAAiBA,EACtBJ,EAAKK,UAAYA,EACjBL,EAAKM,YAAcA,EACnB1L,EAAMH,SAAS,CAACuL,U,EAMlBkC,Y,sBAAc,4CAAA/M,EAAA,yDACNP,EADM,iBAEYA,EAAMhB,MAAxB2M,EAFM,EAENA,UAASP,EAFH,EAEGA,MACLG,UAHE,uBAIVnN,GAAyB,UAAW,eAAM,8CAJhC,6BAQPgN,EAAKC,UARE,uBASVjN,GAAyB,UAAW,eAAM,8CAThC,6BAYPgN,EAAKE,kBAZE,wBAaVlN,GAAyB,UAAW,eAAM,8CAbhC,2BAgBJwN,EAAQ,EAhBJ,aAgBOA,EAAQD,EAASlV,QAhBxB,qBAiBNT,EAAO2V,EAASC,IACXG,gBAlBC,wBAmBR3N,GAAyB,UAAW,eAAZ,4BAAwBpI,EAAK4V,MAA7B,qDAnBhB,gCAsBP5V,EAAKwV,gBAAkB,GAtBhB,wBAuBRpN,GAAyB,UAAW,eAAZ,8CAA2BpI,EAAK4V,MAAhC,gIAvBhB,2BAgBgCA,IAhBhC,+BA2BR2B,EAAQ,CACVlC,UAAWD,EAAKC,UAChBE,UAAYH,EAAKG,UAAWiC,OAAO,cACnClC,kBAAmBF,EAAKE,kBACxBK,SAAUA,GA/BA,UAiCcnP,GAAiB+Q,GAjC/B,iBAiCL1T,EAjCK,EAiCLA,IACM,IAlCD,EAiCAT,MAEV4G,EAAMyN,YACNzN,EAAMgC,MAAM0L,cACZtP,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMmN,gBAEN/O,GAAyB,QAAS,2BAAQvE,GAxChC,4C,EA+Cd4T,UAAY,WAeV,EAAK5N,SAAS,CAACuL,KAdF,CACXC,UAAU,KACNC,kBAAkB,KAClBC,UAAW,KACXC,eAAe,EACfC,UAAU,EACVC,YAAY,GAQEC,SANJ,CAAC,CACfC,MAAM,EACNC,KAAM,EACNL,eAAgB,EAChBO,gBAAiB,Q,kEAWnBhK,KAAK6F,cACL7F,KAAKC,MAAM2L,MAAM5L,MACjBA,KAAK+K,oBACL/K,KAAKiL,sBACL,IAAMxX,EAAO8D,EAAY9D,KAEzB,IAAKA,IAASA,EAAKA,KAEjB,OAAO,cAAC,IAAD,CAAUoY,GAAG,WAEtB7L,KAAKlC,SAAS,CAACsL,YAAY3V,EAAKA,KAAKA,S,+BAI7B,IAAD,SACyEuM,KAAK/C,MAA9EgM,EADA,EACAA,aAAaI,EADb,EACaA,KAAM9D,EADnB,EACmBA,YAAYqE,EAD/B,EAC+BA,SAASV,EADxC,EACwCA,cAAcC,EADtD,EACsDA,gBAC7D,OACI,mBACIjW,MAAM,2BACN+L,MAAM,MACN0B,QAASsI,EACT6C,OAAO,eACPC,cAAc,EACdlL,SAAU,kBAAM,EAAKuK,gBACrBxK,KAAMZ,KAAKuL,YAPf,SAQE,0BAASpL,UAAU,qBAAnB,UACE,oBAAKA,UAAU,iBAAf,SACE,oBAAK4C,KAAM,EAAGG,OAAQ,GAAtB,SACE,oBAAS1G,UAAU,OAAOtJ,MAAM,sBAAhC,SACE,cAAC8Y,GAAA,EAAD,CAAc5D,QAASpI,KAAK0K,oBAIlC,oBAAKvK,UAAU,gBAAf,SACE,oBAAK4C,KAAM,GAAIG,OAAQ,EAAvB,wCAIF,oBAAK/C,UAAU,mBAAf,SACE,qBAAK4C,KAAM,EAAGG,OAAQ,GAAtB,UACE,sBAAM/C,UAAU,cAAhB,4CAA0C,oBAAYpD,MAAOsM,EAAKG,UAAWrU,aAAc6K,KAAK7K,aAAcqL,SAAUR,KAAKsL,gBAAiBjI,UAAU,EAAOoI,OAAQ,aAActD,YAAY,kCAGrM,qBAAK8D,OAAQ,CAAC,GAAI,IAAlB,UACE,oBAAK9L,UAAU,aAAa4C,KAAM,EAAlC,SACE,gCAAK,sBAAM5C,UAAU,cAAhB,4CAA2CjM,EAAamV,EAAOA,EAAKI,eAAP,GAAlE,cAEF,oBAAKtJ,UAAU,aAAa4C,KAAM,EAAlC,SACE,gCAAK,sBAAM5C,UAAU,cAAhB,4CAA2CjM,EAAamV,EAAOA,EAAKK,UAAP,GAAlE,cAEF,oBAAKvJ,UAAU,aAAa4C,KAAM,EAAlC,SACE,gCAAK,sBAAM5C,UAAU,cAAhB,4CAA2CjM,EAAamV,EAAOA,EAAKM,YAAP,GAAlE,cAEF,oBAAKxJ,UAAU,aAAa4C,KAAM,EAAlC,SACE,gCACE,sBAAM5C,UAAU,cAAhB,4CACA,oBAAQpD,MAAOsM,EAAKC,UAAWnJ,UAAU,iBAAiBkD,UAAU,EAAO7C,SAAU,SAAChP,GAAD,OAAO,EAAK2Z,mBAAmB3Z,EAAE,cAAtH,SACG0X,SAIP,oBAAK/I,UAAU,aAAa4C,KAAM,EAAlC,SACE,gCACE,sBAAM5C,UAAU,cAAhB,4CACA,oBAAQpD,MAAOsM,EAAKE,kBAAmBpJ,UAAU,iBAAiBkD,UAAU,EAAO7C,SAAU,SAAChP,GAAD,OAAO,EAAK2Z,mBAAmB3Z,EAAE,sBAA9H,SACG2X,YAKT,6BACE,oBAAKpG,KAAM,GAAX,SACE,oBAAOnG,KAAK,SAASuD,UAAU,cAAcqI,OAAO,QAAQnF,UAAQ,EAACqF,YAAY,EAAO1G,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAamB,GAAS,WAG/J,6BACE,qBAAMhN,KAAK,QAAQrI,OAAO,EAAO2X,OAAQ,qBAAzC,UACE,mBAAM5I,KAAN,wLACA,mBAAMA,KAAN,kFACA,mBAAMA,KAAN,kIACA,mBAAMA,KAAN,oL,GA7aM9B,aCFhB2K,GAAe,CACnB,OAAU,MACV,QAAW,OACX,WAAc,SACd,aAAgB,SAChB,UAAa,SACb,SAAY,SAGRC,GAAoB,CACxB,QAAW,OACX,WAAc,SACd,aAAgB,OAChB,UAAa,OACb,SAAY,SAGRC,GAAkB,CACtB,OAAU,MACV,QAAW,OACX,WAAc,SACd,aAAgB,OAChB,UAAa,OACb,SAAY,SAGRC,GAAa,CACjB,WAAc,QAGVC,GAAc,CAClB,SAAW,SAGPC,GAAa,CACjB,cAAiB,SAuLJC,G,4MAjLbxP,MAAQ,CAENoM,KAAM,KAEN9D,aAAa,EACbmH,SAAU,EACVzD,cAAa,G,EAMfpD,YAAc,WACZ,EAAKC,QAAU,CACb,CACE5S,MAAO,eACP6S,UAAW,KACXC,MAAM,UAER,CACE9S,MAAO,eACP+S,OAAO,kBAAQ,EAAKhJ,MAAMoM,KAAS,EAAKpM,MAAMoM,KAAKU,OAApB,KAC/B/D,MAAM,UAER,CACE9S,MAAO,2BACP8S,MAAM,SACNC,OAAQ,SAAClO,EAAMmO,GACb,OAAoB,IAAhBA,EAAO4D,KACF,eACkB,IAAhB5D,EAAO4D,KACT,eAEA,iBAIb,CACE5W,MAAO,2BACP6S,UAAW,mBAEb,CACE7S,MAAO,6CACP6S,UAAW,iBACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIlD,oB,EAS7ClD,S,sBAAW,oCAAA/H,EAAA,6DACLC,EAAO,CACTiO,QAAS,EAAKzP,MAAMyP,SAGtB,EAAK5O,SAAS,CAACyH,YAAa9I,OALnB,SAOuBjC,GAAqBiE,GAP5C,gBAOF3G,EAPE,EAOFA,IAAKT,EAPH,EAOGA,KAAMrD,EAPT,EAOSA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EACF,EAAKyG,SAAS,CACZuL,KAAMrV,IAGRqI,GAAyB,QAAS,2BAAQvE,GAfnC,4C,EAmBXsT,aAAe,WACb,EAAKtN,SAAS,CAACmL,cAAc,K,EAG/B2D,YAAc,WACZxa,OAAOyM,SAASgO,KAAKC,UAAY1a,OAAOyM,SAASkO,eAAe,eAAeD,UAC/E1a,OAAO4a,QACP5a,OAAOoF,SAASyV,U,EAGlB5B,cAAgB,SAAC6B,GACf,IAAIjP,EAAK,eACTA,EAAMH,SAAS,CACb4O,QAASQ,EACTjE,cAAc,IACd,WAEAhL,EAAMsI,e,kEAURvG,KAAK6F,cAEL,IAAM5H,EAAQ+B,KACd/B,EAAMgC,MAAM2L,MAAM3N,GAClBA,EAAMH,SAAS,CAACuL,KAAK,S,+BAGb,IAAD,SAC2CrJ,KAAK/C,MAAhDyP,EADA,EACAA,QAASrD,EADT,EACSA,KAAM9D,EADf,EACeA,YAAY0D,EAD3B,EAC2BA,aAClC,OACI,mBACI/V,MAAM,2BACN+L,MAAM,MACN0B,QAASsI,EACTrI,KAAM,kBAAM,EAAKgM,eACjB/L,SAAU,kBAAM,EAAKuK,gBACrB+B,WAAW,eACXrB,OAAO,eAPX,SAQE,0BAAS3L,UAAU,qBAAqBrO,GAAG,cAA3C,UACE,oBAAKsO,MAAO+L,GAAZ,SACE,qBAAKpJ,KAAM,GAAIG,OAAQ,EAAvB,UACImG,GAAOA,EAAKG,UAAcnU,IAAOgU,EAAKG,WAAWiC,OAAO,8BAAlC,IAD1B,gCAIF,oBAAKrL,MAAOgM,GAAZ,SACE,qBAAKrJ,KAAM,EAAGG,OAAQ,GAAtB,UACE,sBAAM9C,MAAOkM,GAAb,4CAAsCI,OAG1C,oBAAKtM,MAAOiM,GAAZ,SACE,qBAAKtJ,KAAM,EAAGG,OAAQ,GAAtB,UACE,sBAAM9C,MAAOkM,GAAb,4CAAuCjD,EAAShU,IAAOgU,EAAKG,WAAWiC,OAAO,8BAAlC,SAGhD,qBAAKQ,OAAQ,CAAC,GAAI,IAAlB,UACE,oBAAKlJ,KAAM,EAAX,SACE,gCAAK,sBAAM3C,MAAOkM,GAAb,4CAAsCpY,EAAamV,EAAOA,EAAKI,eAAP,GAA7D,cAEF,oBAAK1G,KAAM,EAAX,SACE,gCAAK,sBAAM3C,MAAOkM,GAAb,4CAAsCpY,EAAamV,EAAOA,EAAKK,UAAP,GAA7D,cAEF,oBAAK3G,KAAM,EAAX,SACE,gCAAK,sBAAM3C,MAAOkM,GAAb,4CAAsCpY,EAAamV,EAAOA,EAAKM,YAAP,GAA7D,cAEF,oBAAK5G,KAAM,EAAX,SACE,gCAAK,sBAAM3C,MAAOkM,GAAb,4CAAuCjD,GAAOA,EAAK+D,gBAAoB/D,EAAK+D,gBAAgBpC,gBAAzB,SAE1E,oBAAKjI,KAAM,EAAX,SACE,gCAAK,sBAAM3C,MAAOkM,GAAb,4CAAuCjD,GAAOA,EAAKgE,kBAAsBhE,EAAKgE,kBAAkBnC,IAA3B,YAG9E,6BACE,oBAAKnI,KAAM,GAAX,SACE,oBAAOnG,KAAK,SAASwD,MAAOoM,GAAYhE,OAAO,KAAKnF,UAAQ,EAACqF,YAAY,EAAO1G,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAaY,EAAUA,EAAKO,SAAV,WAGnJ,+BACE,oBAAKxJ,MAAOmM,GAAaxJ,KAAM,EAA/B,SACE,gCAAK,sBAAM3C,MAAOkM,GAAb,sCAAsCjD,EAASA,EAAKU,OAAT,SAElD,oBAAK3J,MAAOmM,GAAaxJ,KAAM,EAA/B,SACE,gCAAK,sBAAM3C,MAAOkM,GAAb,4CAAuCjD,GAAOA,EAAKiE,WAAejY,IAAOgU,EAAKiE,YAAY7B,OAAO,uCAAnC,SAErE,oBAAKrL,MAAOmM,GAAaxJ,KAAM,EAA/B,SACE,gCAAK,sBAAM3C,MAAOkM,GAAb,wDAAyCjD,GAAOA,EAAKkE,WAAelY,IAAOgU,EAAKkE,YAAY9B,OAAO,uCAAnC,SAEvE,oBAAKrL,MAAOmM,GAAaxJ,KAAM,EAA/B,SACE,gCAAK,sBAAM3C,MAAOkM,GAAb,4CAAsCjX,MAASoW,OAAO,wD,GAzKlDjK,a,UClClByD,G,KAAAA,OAskBQuI,G,4MAlkBXvQ,MAAQ,CAEJoM,KAAM,KAENoE,QAAS,KAETlI,aAAa,EACbmH,SAAU,EACVzD,cAAc,EACdC,cAAc,GACdC,gBAAgB,GAChBC,YAAY,I,EAMhBvD,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,eACP+S,OAAQ,SAAClO,EAAMmO,EAAO2D,GAAd,OAAyBA,EAAM,GACvC7D,MAAM,UAEV,CACI9S,MAAO,eACP6S,UAAW,SACXC,MAAM,SACNC,OAAO,SAAClJ,GAAD,OAAaA,IAAU,EAAKE,MAAMwQ,SAAY,EAAKxQ,MAAMwQ,QAAQ1D,OAAW,EAAK9M,MAAMwQ,QAAQ1D,OAAvB,MAEnF,CACI7W,MAAO,2BACP6S,UAAW,OACXC,MAAM,SACNC,OAAQ,SAAClO,EAAMmO,EAAQ2D,GACnB,OAAO,qBAAQ9M,MAAOhF,EAAMsL,UAAU,EAAO7C,SAAU,SAAChP,GAAD,OAAO,EAAKyY,aAAazY,EAAEqY,IAA3E,UACH,cAAC,GAAD,CAAQ9M,MAAO,EAAf,0BACA,cAAC,GAAD,CAAQA,MAAO,EAAf,+BAIZ,CACI7J,MAAO,2BACP6S,UAAW,kBACXmE,UAAU,EACVjE,OAAQ,SAAClO,EAAMmO,EAAQ2D,GACnB,OAAO,mBAAOnT,KAAK,OAAOqG,MAAOhF,EAAM0M,UAAW,GAAIpB,UAAU,EAAO7C,SAAU,SAAChP,GAAD,OAAO,EAAK2Y,YAAY3Y,EAAG0U,EAAQ2D,EAAO,wBAGnI,CACI3W,MAAO,6CACP6S,UAAW,iBACXC,MAAM,QACNC,OAAQ,SAAClO,EAAMmO,EAAQ2D,GACnB,OAAO,oBAAa9M,MAAOhF,EAAMoI,UAAU,uBAAuBiK,SAAS,EAAO3K,IAAK,EAAG4K,OAAQ,SAAAtN,GAAK,OAAIA,EAAM1I,QAAQ,YAAa,KAAKmM,SAAU,SAAChP,GAAD,OAAO,EAAK2Y,YAAY3Y,EAAG0U,EAAQ2D,EAAO,uBAGvM,CACI3W,MAAO,eACP8S,MAAM,SACNC,OAAQ,SAAClO,EAAMmO,EAAO2D,GAClB,IAAI4D,EAAU,EAAKxQ,MAAMwQ,QAEnBC,GADUD,GAAYA,EAAQ7D,SAAgB6D,EAAQ7D,SAAb,IAChBlV,OAAS,EACpC,oBAAYxB,MAAM,4BAAQoX,UAAW,kBAAM,EAAKC,WAAWV,IAA3D,SACI,cAACW,GAAA,EAAD,MAEJ,oBAAShO,UAAU,OAAOtJ,MAAM,4EAAhC,SACA,cAACuX,GAAA,EAAD,MAEEkD,EAAc,oBAAYza,MAAM,wCAAUoX,UAAW,kBAAM,EAAKsD,UAAU/D,IAA5D,SAChB,cAACgE,GAAA,EAAD,MAEJ,OAAO,oCAAOF,EAAP,SAA4BD,EAA5B,W,EAUvBnH,S,sBAAW,oCAAA/H,EAAA,6DACHC,EAAO,CACPiO,QAAS,EAAKzP,MAAMyP,SAGxB,EAAK5O,SAAS,CAACyH,YAAa9I,OALrB,SAOyBjC,GAAqBiE,GAP9C,gBAOA3G,EAPA,EAOAA,IAAKT,EAPL,EAOKA,KAAMrD,EAPX,EAOWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EACA,EAAKyG,SAAS,CACVuL,KAAMrV,EACNyZ,QAAS9Y,EAAUX,KAGvBqI,GAAyB,QAAS,2BAAQvE,GAhBvC,4C,EAoBXsT,aAAe,WACX,EAAKtN,SAAS,CAACmL,cAAc,K,EAGjCoC,cAAgB,SAAC6B,GACb,IAAIjP,EAAK,eACTA,EAAMH,SAAS,CACX4O,QAASQ,EACTjE,cAAc,IAChB,WAEEhL,EAAMsI,e,EAOdmE,YAAc,WACV,IAAMzM,EAAK,eACPwP,EAAUxP,EAAMhB,MAAMwQ,QACpBrE,EAAcnL,EAAMhB,MAAMmM,YAC5BQ,EAAY6D,GAAYA,EAAQ7D,SAAgB6D,EAAQ7D,SAAb,GAC3C3V,EAAO,CACPnC,GAAI8X,EAASA,EAASlV,OAAO,GAAG5C,GAAG,EACnCgY,KAAM,EACNC,OAAOX,EACPK,eAAgB,EAChBO,gBAAiB,IAErBJ,EAAWA,EAASe,OAAO1W,GAC3BwZ,EAAQ7D,SAAWA,EACnB,EAAK9L,SAAS,CAAC2P,a,EAOnBlD,WAAa,SAACV,GACV,IAAM5L,EAAK,eACNwP,EAAWxP,EAAMhB,MAAjBwQ,QACD7D,EAAY6D,GAAYA,EAAQ7D,SAAgB6D,EAAQ7D,SAAb,GAC/C,GAAuB,IAApBA,EAASlV,OACR2H,GAAyB,QAAS,2BAAQ,0HACzC,CACD,IAAMyR,EAAenZ,EAAUiV,EAASC,OACxBiE,IAAiBA,EAAapB,UAAcoB,EAAapB,QAErEzO,EAAM8P,sBAAsBD,IAE5BlE,EAAWA,EAASgB,QAAO,SAAC3W,EAAMd,GAAP,OAAeA,IAAQ0W,KAClD4D,EAAQ7D,SAAWA,EACnB3L,EAAMH,SAAS,CAAE2P,YAAU,WACvBxP,EAAM4M,kB,EAUtB+C,UAAY,SAAC/D,GACT,IAAM5L,EAAK,eACNwP,EAAWxP,EAAMhB,MAAjBwQ,QACD7D,EAAY6D,GAAYA,EAAQ7D,SAAgB6D,EAAQ7D,SAAb,GACzCoE,EAAarZ,EAAUiV,EAASC,OACtBmE,IAAeA,EAAWtB,UAAcsB,EAAWtB,QAG/DzO,EAAMgQ,qBAAqBD,GAG3B/P,EAAMiQ,mBAAmBF,I,EAUjC7Y,aAAe,SAACC,GACZ,OAAOA,GAAWA,EAAUC,O,EAQhCiW,gBAAkB,SAAC7F,EAAMqB,GACrB,IAAM7I,EAAK,eACLwP,EAAYxP,EAAMhB,MAAlBwQ,QACNA,EAAQjE,UAAY/D,EACpBxH,EAAMH,SAAS,CAAC2P,a,EAQpBxD,aAAe,SAAClN,EAAM8M,GAClB,IAAM5L,EAAK,eACPwP,EAAUxP,EAAMhB,MAAMwQ,QACtB7D,EAAY6D,GAAYA,EAAQ7D,SAAgB6D,EAAQ7D,SAAb,GAC3CA,EAASC,GAAOC,OAAS/M,IACzB6M,EAASC,GAAOC,KAAO/M,EACvB0Q,EAAQ7D,SAAWA,EACnB3L,EAAMH,SAAS,CAAC2P,YAAS,WACrBxP,EAAM4M,iB,EAYlBV,YAAc,SAAC3Y,EAAG0U,EAAQ2D,EAAOiB,GAC7B,IAAM7M,EAAK,eACPwP,EAAUxP,EAAMhB,MAAMwQ,QACtB7D,EAAY6D,GAAYA,EAAQ7D,SAAgB6D,EAAQ7D,SAAb,GAC/C,GAAI,mBAAqBkB,EAAM,CAG3B,IAAIrB,EAAiBjY,EACU,kBAApBiY,IACPA,EAAiBA,EAAepV,QAAQ,YAAY,KAGpD,KAAOoV,IACPA,EAAiB,GAGlBG,EAASC,GAAOJ,iBAAmBA,IAClCG,EAASC,GAAOJ,eAAiBA,GAErCG,EAASC,GAAOJ,eAAiBA,EACjCgE,EAAQ7D,SAAWA,EACnB3L,EAAMH,SAAS,CAAE2P,YAAU,WACvBxP,EAAM4M,oBAIVjB,EAASC,GAAOiB,GAAUtZ,EAAEoD,OAAOmI,MAAO1I,QAAQ,iBAAkB,IACpEoZ,EAAQ7D,SAAWA,EACnB3L,EAAMH,SAAS,CAAE2P,a,EAQzB1C,kB,sBAAoB,sCAAAvM,EAAA,6DACVP,EADU,wBAGgB5D,KAHhB,gBAGTvC,EAHS,EAGTA,IAAKT,EAHI,EAGJA,KAAMrD,EAHF,EAGEA,KACL,IAATqD,GACIX,EAAO,GACX1C,EAAKsS,SAAQ,SAAArS,GACTyC,EAAK1B,KAAM,cAAC,GAAD,CAAsB+H,MAAO9I,EAAKnC,GAAlC,SAAuCmC,EAAK+W,iBAA/B/W,EAAKnC,QAEjCmM,EAAMH,SAAS,CACXoL,cAAexS,KAGnB2F,GAAyB,QAAS,2BAAQvE,GAb9B,2C,EAoBpBmT,oB,sBAAsB,sCAAAzM,EAAA,6DACZP,EADY,wBAGc3D,KAHd,gBAGXxC,EAHW,EAGXA,IAAKT,EAHM,EAGNA,KAAMrD,EAHA,EAGAA,KACL,IAATqD,GACIX,EAAO,GACX1C,EAAKsS,SAAQ,SAAArS,GACTyC,EAAK1B,KAAM,cAAC,GAAD,CAAsB+H,MAAO9I,EAAKnC,GAAlC,SAAuCmC,EAAKiX,KAA/BjX,EAAKnC,QAEjCmM,EAAMH,SAAS,CACXqL,gBAAiBzS,KAGrB2F,GAAyB,QAAS,2BAAQvE,GAb5B,2C,EAsBtBqT,mBAAqB,SAACpO,EAAM+N,GACxB,IAAI7M,EAAK,eACHwP,EAAY,EAAKxQ,MAAjBwQ,QACNA,EAAQ3C,GAAS/N,EACjBkB,EAAMH,SAAS,CAAC2P,a,EAQpBM,sB,uCAAwB,WAAOhR,GAAP,mBAAAyB,EAAA,6DAChBC,EAAO,CACP3M,GAAIiL,EAAMjL,GACV4a,QAAS3P,EAAM2P,SAHC,SAKM1R,GAAsByD,GAL5B,gBAKb3G,EALa,EAKbA,IACM,IANO,EAKRT,MAERgF,GAAyB,UAAW,2BAAQ,4BAC5C,EAAKkK,WACL,EAAKtG,MAAM0L,eAEXtP,GAAyB,QAAS,2BAAQvE,GAX1B,2C,wDAoBxBoW,mB,uCAAqB,WAAOnR,GAAP,yBAAAyB,EAAA,yDACbzB,EAAMiN,gBADO,uBAEb3N,GAAyB,UAAW,eAAZ,kCAFX,+BAKdU,EAAM0M,gBAAkB,GALV,uBAMbpN,GAAyB,UAAW,eAAZ,6GANX,iCASX4B,EATW,eAUXyO,EAAUzO,EAAMhB,MAAMyP,QACxBjO,EAAO,CACPiO,QAASA,EACT5C,KAAM/M,EAAM+M,KACZL,eAAgB1M,EAAM0M,eACtBO,gBAAiBjN,EAAMiN,iBAfV,UAiBSlP,GAAsB2D,GAjB/B,iBAiBV3G,EAjBU,EAiBVA,IAAKT,EAjBK,EAiBLA,KACZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,oDAC5C4B,EAAMsI,WACNtI,EAAMgC,MAAM0L,eAEZtP,GAAyB,QAAS,2BAAQvE,GAxB7B,4C,wDAiCrBmW,qB,uCAAuB,WAAOlR,GAAP,uBAAAyB,EAAA,yDACfzB,EAAMiN,gBADS,uBAEf3N,GAAyB,UAAW,eAAZ,kCAFT,+BAKhBU,EAAM0M,gBAAkB,GALR,uBAMfpN,GAAyB,UAAW,eAAZ,6GANT,iCASb4B,EATa,eAUfQ,EAAO,CACP3M,GAAIiL,EAAMjL,GACV4a,QAAS3P,EAAM2P,QACf5C,KAAM/M,EAAM+M,KACZL,eAAgB1M,EAAM0M,eACtBO,gBAAiBjN,EAAMiN,iBAfR,UAiBOjP,GAAsB0D,GAjB7B,iBAiBZ3G,EAjBY,EAiBZA,IAAKT,EAjBO,EAiBPA,KACZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,oDAC5C4B,EAAMsI,WACNtI,EAAMgC,MAAM0L,eAEZtP,GAAyB,QAAS,2BAAQvE,GAxB3B,4C,wDAgCvB+S,UAAY,WACR,IAAM5M,EAAK,eACPwP,EAAUxP,EAAMhB,MAAMwQ,QACtB7D,EAAY6D,GAAYA,EAAQ7D,SAAgB6D,EAAQ7D,SAAb,GAC3CH,EAAiB,EACjBC,EAAY,EACZC,EAAc,EAClBC,EAAStD,SAAQ,SAAArS,GACV,IAAMA,EAAK6V,KACVJ,GAAazV,EAAKwV,eAElBE,GAAe1V,EAAKwV,eAExBA,GAAkBxV,EAAKwV,kBAE3BgE,EAAQhE,eAAiBA,EACzBgE,EAAQ/D,UAAYA,EACpB+D,EAAQ9D,YAAcA,EACtB1L,EAAMH,SAAS,CAAC2P,a,EAOpBU,W,sBAAa,8CAAA3P,EAAA,yDACHP,EADG,iBAEWA,EAAMhB,MAAtBoM,EAFK,EAELA,MAAKoE,EAFA,EAEAA,SACIjE,UAHJ,uBAILnN,GAAyB,UAAW,eAAM,8CAJrC,6BAOJoR,EAAQnE,UAPJ,uBAQLjN,GAAyB,UAAW,eAAM,8CARrC,6BAWJoR,EAAQlE,kBAXJ,wBAYLlN,GAAyB,UAAW,eAAM,8CAZrC,8BAeHoP,EAAS,aACT2C,EAAU/Y,IAAOgU,EAAKG,UAAUiC,GAChC4C,EAAUhZ,IAAOoY,EAAQjE,UAAUiC,GACpC2C,EAAQE,OAAOD,IAAchF,EAAKC,YAAcmE,EAAQnE,WAAeD,EAAKE,oBAAsBkE,EAAQlE,kBAlBtG,wBAoBCiC,EAAQ,CACVkB,QAASrD,EAAKqD,QACdpD,UAAWmE,EAAQnE,UACnBE,UAAW6E,EAAQ5C,OAAO,cAC1BlC,kBAAmBkE,EAAQlE,mBAxB1B,UA0BqB7O,GAAkB8Q,GA1BvC,iBA0BE1T,EA1BF,EA0BEA,IACM,IA3BR,EA0BOT,MAERgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMgC,MAAM0L,eAEZtP,GAAyB,QAAS,2BAAQvE,GA/BzC,wBAkCLuE,GAAyB,UAAW,2BAAQ,4NAlCvC,4C,kEA2CX2D,KAAK6F,cAEH,IAAM5H,EAAQ+B,KACd/B,EAAMgC,MAAM2L,MAAM3N,GAClBA,EAAM8M,oBACN9M,EAAMgN,sBACN,IAAMxX,EAAO8D,EAAY9D,KAEzB,IAAKA,IAASA,EAAKA,KAEf,OAAO,cAAC,IAAD,CAAUoY,GAAG,WAExB5N,EAAMH,SAAS,CACXuL,KAAK,KACLoE,QAAQ,KACRrE,YAAY3V,EAAKA,KAAKA,S,+BAIpB,IAAD,SACmFuM,KAAK/C,MAAtFoM,EADF,EACEA,KAAKqD,EADP,EACOA,QAASe,EADhB,EACgBA,QAASlI,EADzB,EACyBA,YAAY0D,EADrC,EACqCA,aAAaC,EADlD,EACkDA,cAAcC,EADhE,EACgEA,gBACrE,OACI,mBACIjW,MAAM,2BACN+L,MAAM,MACN6M,OAAO,eACPnL,QAASsI,EACT8C,cAAc,EACdlL,SAAU,kBAAM,EAAKuK,gBACrBxK,KAAMZ,KAAKmO,WAPf,SAQI,0BAAShO,UAAU,qBAAnB,UACI,oBAAKA,UAAU,iBAAf,SACI,oBAAK4C,KAAM,EAAGG,OAAQ,GAAtB,SACI,oBAAS1G,UAAU,OAAOtJ,MAAM,sBAAhC,SACI,cAAC8Y,GAAA,EAAD,CAAc5D,QAASpI,KAAK0K,oBAIxC,oBAAKvK,UAAU,gBAAf,SACI,qBAAK4C,KAAM,GAAIG,OAAQ,EAAvB,UACImG,GAAOA,EAAKG,UAAcnU,IAAOgU,EAAKG,WAAWiC,OAAO,8BAAlC,IAD1B,gCAIJ,oBAAKtL,UAAU,qBAAf,SACI,qBAAK4C,KAAM,EAAGG,OAAQ,GAAtB,UACI,sBAAM/C,UAAU,cAAhB,4CAA2CuM,OAGnD,oBAAKvM,UAAU,mBAAf,SACI,qBAAK4C,KAAM,EAAGG,OAAQ,GAAtB,UACI,sBAAM/C,UAAU,cAAhB,4CAA0C,oBAAYpD,MAAQ0Q,GAAUA,EAAQjE,UAAenU,IAAOoY,EAAQjE,WAApB,KAAgCrU,aAAc6K,KAAK7K,aAAcqL,SAAUR,KAAKsL,gBAAiBjI,UAAU,EAAOoI,OAAQ,aAActD,YAAY,kCAGtP,qBAAK8D,OAAQ,CAAC,GAAI,IAAlB,UACI,oBAAK9L,UAAU,aAAa4C,KAAM,EAAlC,SACI,gCAAK,sBAAM5C,UAAU,cAAhB,4CAA2CjM,EAAauZ,EAAUA,EAAQhE,eAAV,GAArE,cAEJ,oBAAKtJ,UAAU,aAAa4C,KAAM,EAAlC,SACI,gCAAK,sBAAM5C,UAAU,cAAhB,4CAA2CjM,EAAauZ,EAAUA,EAAQ/D,UAAV,GAArE,cAEJ,oBAAKvJ,UAAU,aAAa4C,KAAM,EAAlC,SACI,gCAAK,sBAAM5C,UAAU,cAAhB,4CAA2CjM,EAAauZ,EAAUA,EAAQ9D,YAAV,GAArE,cAEJ,oBAAKxJ,UAAU,aAAa4C,KAAM,EAAlC,SACI,gCACI,sBAAM5C,UAAU,cAAhB,4CACA,oBAAQpD,MAAQ0Q,GAAUA,EAAQnE,UAAemE,EAAQnE,UAAb,KAAwBnJ,UAAU,iBAAiBkD,UAAU,EAAO7C,SAAU,SAAChP,GAAD,OAAO,EAAK2Z,mBAAmB3Z,EAAE,cAA3J,SACK0X,SAIb,oBAAK/I,UAAU,aAAa4C,KAAM,EAAlC,SACI,gCACI,sBAAM5C,UAAU,cAAhB,4CACA,oBAAQpD,MAAQ0Q,GAAUA,EAAQlE,kBAAuBkE,EAAQlE,kBAAb,KAAgCpJ,UAAU,iBAAiBkD,UAAU,EAAO7C,SAAU,SAAChP,GAAD,OAAO,EAAK2Z,mBAAmB3Z,EAAE,sBAA3K,SACK2X,YAKjB,6BACI,oBAAKpG,KAAM,GAAX,SACI,oBAAOnG,KAAK,SAASuD,UAAU,cAAcqI,OAAO,KAAKnF,UAAQ,EAACqF,YAAY,EAAO1G,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAagF,EAAaA,EAAQ7D,SAAb,WAG/J,+BACI,oBAAKzJ,UAAU,aAAa4C,KAAM,EAAlC,SACI,gCAAK,sBAAM5C,UAAU,cAAhB,sCAA2CkJ,GAAOA,EAAKU,OAAWV,EAAKU,OAAT,SAEvE,oBAAK5J,UAAU,aAAa4C,KAAM,EAAlC,SACI,gCAAK,sBAAM5C,UAAU,cAAhB,4CAA4CkJ,GAAOA,EAAKiE,WAAejY,IAAOgU,EAAKiE,YAAY7B,OAAO,uCAAnC,SAE5E,oBAAKtL,UAAU,aAAa4C,KAAM,EAAlC,SACI,gCAAK,sBAAM5C,UAAU,cAAhB,wDAA8CkJ,GAAOA,EAAKkE,WAAelY,IAAOgU,EAAKkE,YAAY9B,OAAO,uCAAnC,SAE9E,oBAAKtL,UAAU,aAAa4C,KAAM,EAAlC,SACE,gCAAK,sBAAM5C,UAAU,cAAhB,4CAA2C9K,MAASoW,OAAO,wD,GA1jBtEjK,aCEbwD,G,KAAAA,YACAC,G,KAAAA,OAmeQsJ,G,4MA9dXC,cAAgB5M,IAAMC,Y,EACtB4M,eAAiB7M,IAAMC,Y,EACvB6M,aAAe9M,IAAMC,Y,EAGrB5E,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,EACbC,QAAS,CACLE,UAAW,KACXC,QAAS,KACT2D,UAAW,IAEfqF,UAAW,I,EAMf9I,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,qBACP6S,UAAW,UACXC,MAAM,UAEV,CACI9S,MAAO,2BACP6S,UAAW,YACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIjD,aAE3C,CACIxW,MAAO,2BACP6S,UAAW,cACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIhD,eAE3C,CACIzW,MAAO,2BACP6S,UAAW,kCACXC,MAAM,SACNC,OAAQ,SAAClJ,EAAO4P,GAAR,OACN,+BAAQA,EAAIS,gBAAoBT,EAAIS,gBAAgBpC,gBAAxB,QAGlC,CACI9X,MAAO,eACP6S,UAAW,wBACXE,OAAQ,SAAClJ,EAAO4P,GAAR,OACN,+BAAQA,EAAIU,kBAA0BV,EAAIU,kBAAkBnC,IAA5B,QAGtC,CACIhY,MAAO,2BACP6S,UAAW,YACXC,MAAM,UAEV,CACI9S,MAAO,2BACP6S,UAAW,iBACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIlD,kBAE3C,CACIvW,MAAO,2BACP6S,UAAW,aACXC,MAAM,UAEV,CACI9S,MAAO,eACP8S,MAAM,SACNC,OAAQ,SAAClJ,EAAO4P,GAAR,OACN,gCACE,mBAAQjW,KAAK,UAAU0R,QAAS,kBAAM,EAAKwG,cAAcjC,IAAMkC,MAAM,SAC7Dzb,KAAM,cAAC0b,GAAA,EAAD,MAFhB,OAIE,mBAAQpY,KAAK,UAAU0R,QAAS,kBAAM,EAAK2G,cAAcpC,IAAMkC,MAAM,SAC7Dzb,KAAM,cAAC4b,GAAA,EAAD,MALhB,OAOE,mBAAQtY,KAAK,SAAS0R,QAAS,kBAAM,EAAK6G,aAAatC,IAAMkC,MAAM,SAC3Dzb,KAAM,cAAC8b,GAAA,EAAD,a,EAW9B3I,S,sBAAW,oCAAA/H,EAAA,6DACHC,EAAO,CACP6K,UAAW,EAAKrM,MAAMuI,QAAQ8D,UAC9BjE,QAAS,EAAKpI,MAAMoI,QACpBC,SAAU,EAAKrI,MAAMqI,SACrBI,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,SAGhC,EAAK7H,SAAS,CAACyH,YAAa9I,OATrB,SAWyBlC,GAAmBkE,GAX5C,gBAWA3G,EAXA,EAWAA,IAAKT,EAXL,EAWKA,KAAMrD,EAXX,EAWWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EACA,EAAKyG,SAAS,CAEVsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GAtBvC,4C,EA6BX4O,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQE,UAAY,KACpBF,EAAQG,QAAU,KAClBH,EAAQ8D,UAAY,KACpBrL,EAAMH,SAAS,CACXuH,QAAS,EACTG,QAASA,IACV,WACCvH,EAAMsI,e,EAMdI,eAAiB,SAACrB,EAAUlQ,GACxB,IAAI6I,EAAK,eAETA,EAAMH,SAAS,CACXuH,QAAS,EACTC,SAAUA,IACX,WACCrH,EAAMsI,e,EAKdK,WAAa,SAACxR,GACV,IAAI6I,EAAK,eACTA,EAAMH,SAAS,CACXuH,QAASjQ,IACV,WACC6I,EAAMsI,e,EAOd4I,U,sBAAY,wCAAA3Q,EAAA,6DACJP,EADI,wBAGwB5D,KAHxB,gBAGDvC,EAHC,EAGDA,IAAKT,EAHJ,EAGIA,KAAMrD,EAHV,EAGUA,KACL,IAATqD,GACIX,EAAO,GACX1C,EAAKsS,SAAQ,SAAArS,GACTyC,EAAK1B,KAAM,cAAC,GAAD,CAAsB+H,MAAO9I,EAAKnC,GAAlC,SAAuCmC,EAAK+W,iBAA/B/W,EAAKnC,SAE7Bsd,EAAW,IACNpa,KAAK,cAAC,GAAD,CAAiB+H,MAAM,GAAvB,+BAAY,OAC1BqS,EAASpa,KAAK0B,GACduH,EAAMH,SAAS,CACX6Q,UAAWS,KAGf/S,GAAyB,QAAS,2BAAQvE,GAhBtC,2C,EAqBZ+O,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACX0H,UACAH,QAAS,IACV,WACCpH,EAAMsI,e,EAKdQ,aAAe,SAAChK,GACZ,IAAIkB,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQ8D,UAAYvM,EACpBkB,EAAMH,SAAS,CACX0H,UACAH,QAAS,IACV,WACCpH,EAAMsI,e,EAOd8I,eAAiB,WACF,eAELZ,eAAepD,iB,EAMzBuD,cAAgB,SAAC7R,GACF,eAELyR,cAAcnD,cAActO,EAAM2P,U,EAO5CqC,cAAgB,SAAChS,GACF,eAEL2R,aAAarD,cAActO,EAAM2P,U,EAG3C4C,kBAAoB,SAACvL,GACjB,EAAKyK,cAAgBzK,G,EAGzBwL,mBAAqB,SAACxL,GAClB,EAAK0K,eAAiB1K,G,EAG1ByL,iBAAmB,SAACzL,GAChB,EAAK2K,aAAe3K,G,EAMxBkL,aAAe,SAAChb,GACZ,IAAIgK,EAAK,eACT,IAAMwR,QAAQ,CACVvc,MAAO,2BACPwc,QAAQ,yDAAD,OAAczb,EAAKyY,QAAnB,2GACP9L,KAAK,WAAD,4BAAE,kCAAApC,EAAA,6DAEFP,EAAMH,SAAS,CAACyH,aAAa,IACzB9G,EAAO,CAACiO,QAASzY,EAAKyY,SAHxB,SAIwB/R,GAAkB8D,GAJ1C,gBAIK3G,EAJL,EAIKA,IAAKT,EAJV,EAIUA,KAEZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMsI,YAENlK,GAAyB,QAAS,2BAAQvE,GAX5C,2CAAF,kDAAC,M,EAoBb6X,gBAAkB,WACd,IAAI1R,EAAK,eAETA,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI9G,EAAO,CACP6K,UAAW,EAAKrM,MAAMuI,QAAQ8D,UAC9B5D,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,SAEhCtT,QAAQC,IAAImM,GACZ3H,KAAM,CACFmQ,OAAQ,MACRxQ,IAAKmE,GACL7D,OAAQ0H,EACRyI,aAAc,OAEdC,QAAS,CACL,eAAgB,sBAGnBhQ,MAAK,SAAUiQ,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI8B,EAAW,4CACXC,EAAO,IAAIC,KAAK,CAACH,EAAIpT,MAAO,CAAC0C,KAAM,uBACvC,GAAItE,OAAOS,UAAU2U,iBACjB3U,UAAU4U,WAAWH,EAAMD,OACxB,CACH,IAAIK,EAAO7I,SAASC,cAAc,KAClC4I,EAAKjQ,KAAOrF,OAAOuV,IAAIC,gBAAgBN,GACvCI,EAAKG,SAAWR,EAChBK,EAAKI,QACL1V,OAAOuV,IAAII,gBAAgBL,EAAKjQ,UAGvCO,OAAM,SAAUoP,GACb/U,QAAQC,IAAI8U,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7BlJ,GAAyB,QAAS,2BAAQ,oE,EAOtDuT,gBAAkB,WACd,IAAI3R,EAAK,eAETA,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI9G,EAAO,CACP6K,UAAW,EAAKrM,MAAMuI,QAAQ8D,UAC9B5D,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,SAEhC7O,KAAM,CACFmQ,OAAQ,MACRxQ,IAAKoE,GACL9D,OAAQ0H,EACRyI,aAAc,OAEdC,QAAS,CACL,eAAgB,sBAGnBhQ,MAAK,SAAUiQ,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI8B,EAAW,4CACXC,EAAO,IAAIC,KAAK,CAACH,EAAIpT,MAAO,CAAC0C,KAAM,uBACvC,GAAItE,OAAOS,UAAU2U,iBACjB3U,UAAU4U,WAAWH,EAAMD,OACxB,CACH,IAAIK,EAAO7I,SAASC,cAAc,KAClC4I,EAAKjQ,KAAOrF,OAAOuV,IAAIC,gBAAgBN,GACvCI,EAAKG,SAAWR,EAChBK,EAAKI,QACL1V,OAAOuV,IAAII,gBAAgBL,EAAKjQ,UAGvCO,OAAM,SAAUoP,GACb/U,QAAQC,IAAI8U,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7BlJ,GAAyB,QAAS,2BAAQ,gF,EAOtDwT,uBAAyB,WACrB,EAAKtJ,Y,EAMTuJ,qBAAuB,WACnB,EAAKvJ,Y,kEAQPvG,KAAK6P,uBAA0B7P,KAAK6P,uBAAuBvO,KAAKtB,MAChEA,KAAK8P,qBAAwB9P,KAAK8P,qBAAqBxO,KAAKtB,MAE5DA,KAAK6F,cACL7F,KAAKmP,YAELnP,KAAKuG,a,+BAGG,IAIFyB,EAJC,SAE0EhI,KAAK/C,MAA7EkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAAaoJ,EAFpD,EAEoDA,UAAWnJ,EAF/D,EAE+DA,QAC/DE,EAAiCF,EAAjCE,UAAWC,EAAsBH,EAAtBG,QAAS2D,EAAa9D,EAAb8D,UAOzB,OAJItB,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAYrQ,IAAOsQ,IAE3B,CAAC,KAAM,MAGnB,cAAC,KAAD,CAAezS,MAAM,2BAArB,SACI,oCACI,cAAC,GAAD,CAAa0Y,MAAO5L,KAAKuP,mBAAmBjO,KAAKtB,MAAO2L,YAAa3L,KAAK6P,yBAC1E,cAAC,GAAD,CAAYjE,MAAO5L,KAAKsP,kBAAkBhO,KAAKtB,QAC/C,cAAC,GAAD,CAAW4L,MAAO5L,KAAKwP,iBAAiBlO,KAAKtB,MAAO2L,YAAa3L,KAAK8P,uBACtE,oBAAK/M,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,4BAAjB,SACI,oBAAQnD,MAAO,CAACnB,MAAO,SAAUlC,MAAOuM,EAAWpB,YAAU,EACrD1H,SAAUR,KAAK+G,aAAcoB,YAAY,6CADjD,SAEKwG,MAGT,mBAAMrL,KAAN,CAAWC,MAAM,4BAAjB,SACI,cAAC,GAAD,CAAaxG,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACI,cAAC8B,EAAA,EAAD,IADJ,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACI,cAAC4B,GAAA,EAAD,IADJ,oBAIJ,mBAAMhF,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKqP,eAAvD,UACI,cAACrD,GAAA,EAAD,IADJ,oBAIJ,mBAAM1I,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK2P,gBAAvD,UACI,cAACpH,GAAA,EAAD,IADJ,oBAIJ,mBAAMjF,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK4P,gBAAvD,UACI,cAACrH,GAAA,EAAD,IADJ,yBAMZ,oBAAKxF,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAAS4L,OAAO,UAAUnF,UAAQ,EAACrB,QAASuD,EAAaO,QAAS9F,KAAK8F,QAC5E2C,WAAYtD,EACZuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EACVsD,iBAAiB,EACjBC,MAAOzD,EACP0D,iBAAiB,EACjBC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,yB,GAtdxBpF,aCqHXuO,G,4MAnIXC,QAAUpO,IAAMC,Y,EAEhB5E,MAAQ,CACJgT,KAAM,GACNhH,cAAa,G,EAMjBmC,aAAe,WACX,EAAKtN,SAAS,CAACmL,cAAc,K,EAOjCoC,cAAgB,SAAC6B,GACb,IAAIjP,EAAK,eACT5L,QAAQC,IAAI,MAAM4a,GAClBjP,EAAMH,SAAS,CACXmS,KAAM/C,EACNjE,cAAc,IAChB,WAEMiE,GAAQA,EAAIpb,GAGZmM,EAAM+R,QAAQ5a,QAAQ8a,eAAehD,GAFrCjP,EAAM+R,QAAQ5a,QAAQ8a,eAAe,CAAC,MAAQ,KAAM,QAAU,W,EAU1EC,aAAe,WACX,IAAMlS,EAAK,eACLgS,EAAOhS,EAAMhB,MAAMgT,KACzBhS,EAAM+R,QAAQ5a,QAAQqN,eAAe,CAAC,QAAS,YAAYtL,MAAK,SAAA4F,GACxDkT,EAAKne,IAKLiL,EAAMjL,GAAKme,EAAKne,GAChBmM,EAAMmS,gBAAgBrT,IAJtBkB,EAAMoS,cAActT,MAMzB/E,OAAM,SAAAxG,GAAC,OAAIa,QAAQC,IAAI,+DAAad,O,EAQ3C6e,cAAgB,SAACtT,GACb,IAAMkB,EAAK,eACX,IAAMwR,QAAQ,CACVvc,MAAO,0DACP0N,KAAK,WAAD,4BAAE,8BAAApC,EAAA,sEACwBtC,GAAWa,GADnC,gBACKjF,EADL,EACKA,IACM,IAFX,EACUT,MAERgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMgC,MAAM0L,cACZ1N,EAAMmN,gBAEN/O,GAAyB,QAAS,2BAAQvE,GAP5C,2CAAF,kDAAC,GAUL+I,SAZU,WAaN,OAAO,M,EAKnBuP,gBAAkB,SAACrT,GACf,IAAMkB,EAAK,eACX,IAAMwR,QAAQ,CACVvc,MAAO,4EACP0N,KAAK,WAAD,4BAAE,8BAAApC,EAAA,sEACwBrC,GAAWY,GADnC,gBACKjF,EADL,EACKA,IACM,IAFX,EACUT,MAERgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMgC,MAAM0L,cACZ1N,EAAMmN,gBAEN/O,GAAyB,QAAS,2BAAQvE,GAP5C,2CAAF,kDAAC,GAUL+I,SAZU,WAaN,OAAO,M,kEAWfb,KAAK6C,eAAiB,CAClBC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAGT/C,KACRC,MAAM2L,MADE5L,Q,+BAKR,IAAD,EACuBA,KAAK/C,MAA1BgT,EADF,EACEA,KAAKhH,EADP,EACOA,aACZ,OACI,mBAAO/V,MAAQ+c,GAASA,EAAKne,GAAa,iCAAR,iCAAiB6O,QAASsI,EAAc8C,cAAc,EAAOD,OAAO,eAAKlL,KAAMZ,KAAKmQ,aAActP,SAAUb,KAAKoL,aAAnJ,SACI,iDAAUpL,KAAK6C,gBAAf,IAA+BkB,IAAK/D,KAAKgQ,QAAzC,UACI,mBAAM1M,KAAN,2BAAWC,MAAM,4BAAWvD,KAAK6C,gBAAjC,IAAiDsB,aAAc8L,EAAK/c,MAAO+Q,kBAAoB,SAACzS,GAAD,OAAOsL,GAAoBtL,IAAI0S,KAAK,QAAQE,MAAO,CAAC,CAACC,UAAU,EAAMpM,QAAS,oDAAa,CAACwH,IAAK,EAAGxH,QAAS,qDAAmB,CAACqM,IAAK,GAAIrM,QAAS,sDAAlP,SACI,mBAAOkQ,YAAY,sCAEvB,mBAAM7E,KAAN,2BAAWC,MAAM,sBAAUvD,KAAK6C,gBAAhC,IAAgDsB,aAAc8L,EAAKP,QAASzL,kBAAoB,SAACzS,GAAD,OAAOsL,GAAoBtL,IAAI0S,KAAK,UAAUE,MAAO,CAAC,CAACC,UAAU,EAAMpM,QAAS,oDAAa,CAACqM,IAAK,IAAKrM,QAAS,uDAAjN,SACI,kBAAOsM,SAAP,CAAgBC,WAAS,EAAC2D,YAAY,mDAAW1D,UAAW,IAAKC,SAAU,CAACC,QAAS,EAAGC,QAAS,kB,GA5HlGpD,aCEhBwD,G,KAAAA,YAsSQsL,G,4MAjSXC,YAAc3O,IAAMC,Y,EAEpB5E,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,EACbC,QAAS,CACLE,UAAW,KACXC,QAAS,KACTzS,MAAO,O,EAOf2S,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,eACP6S,UAAW,SAEf,CACI7S,MAAO,qBACP6S,UAAW,UAEf,CACI7S,MAAO,2BACP6S,UAAW,cAEf,CACI7S,MAAO,2BACP6S,UAAW,cAEf,CACI7S,MAAO,eACP8S,MAAM,SACNC,OAAQ,SAAClO,EAAMmO,GAAP,OACJ,gCACI,mBAAQxP,KAAK,UAAU0R,QAAS,kBAAM,EAAKoI,gBAAgBtK,IAAS2I,MAAM,SAASzb,KAAM,cAAC4b,GAAA,EAAD,MAD7F,OAGI,mBAAQtY,KAAK,SAAS0R,QAAS,kBAAM,EAAKqI,eAAevK,IAAS2I,MAAM,SAASzb,KAAM,cAAC8b,GAAA,EAAD,a,EAW3G3I,S,sBAAW,oCAAA/H,EAAA,6DACHC,EAAO,CACPvL,MAAO,EAAK+J,MAAMuI,QAAQtS,MAC1BmS,QAAS,EAAKpI,MAAMoI,QACpBC,SAAU,EAAKrI,MAAMqI,SACrB1N,OAAQ,EAAKqF,MAAMuI,QAAQ5N,OAC3B8N,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,SAGhC,EAAK7H,SAAS,CAACyH,aAAa,IAVrB,SAYyBtJ,GAAYwC,GAZrC,gBAYA3G,EAZA,EAYAA,IAAKT,EAZL,EAYKA,KAAMrD,EAZX,EAYWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EACA,EAAKyG,SAAS,CAEVsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GAvBvC,4C,EA8BX4O,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQtB,KAAO,KACfsB,EAAQ5N,OAAS,KACjBqG,EAAMH,SAAS,CACXuH,QAAS,EACTG,QAASA,IACV,WACCvH,EAAMsI,e,EAKdI,eAAiB,SAACrB,EAAUlQ,GAExB,EAAK0I,SAAS,CACVuH,QAAS,EACTC,SAAUA,IACX,WACCtF,KAAKuG,e,EAKbK,WAAa,SAACxR,GACV,EAAK0I,SAAS,CACVuH,QAASjQ,IACV,WACC4K,KAAKuG,e,EAKbM,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACXuH,QAAS,EACTG,YACD,WACCvH,EAAMsI,e,EASdmK,iBAAmB,SAACC,GAChB,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MACvByI,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQtS,MAAQ6J,EAChBkB,EAAMH,SAAS,CACXuH,QAAS,EACTG,a,EAORoL,eAAiB,WACb,EAAKL,YAAYlF,cAAc,K,EAMnCmF,gB,uCAAkB,WAAOzT,GAAP,yBAAAyB,EAAA,6DACVP,EADU,eAEVQ,EAAO,CACP3M,GAAIiL,EAAMjL,IAHA,SAMkBkK,GAAQyC,GAN1B,gBAMP3G,EANO,EAMPA,IAAKT,EANE,EAMFA,KAAMrD,EANJ,EAMIA,KACL,IAATqD,EACA4G,EAAMsS,YAAYlF,cAAcrX,GAEhCqI,GAAyB,QAAS,2BAAQvE,GAVhC,2C,wDAkBlB2Y,eAAiB,SAACxc,GACd,IAAIgK,EAAK,eACT,IAAMwR,QAAQ,CACVvc,MAAO,2BACPwc,QAAQ,8CAAD,OAAazb,EAAKf,MAAlB,mCACPia,WAAY,qBACZrB,OAAQ,qBACRlL,KAAK,WAAD,4BAAE,kCAAApC,EAAA,6DAEFP,EAAMH,SAAS,CAACyH,aAAa,IACzB9G,EAAO,CAAE3M,GAAImC,EAAKnC,IAHpB,SAIwBsK,GAAWqC,GAJnC,gBAIK3G,EAJL,EAIKA,IAAKT,EAJV,EAIUA,KAEZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMsI,YAENlK,GAAyB,QAAS,2BAAQvE,GAX5C,2CAAF,kDAAC,M,EAiBb+Y,gBAAkB,SAAC9M,GACf,EAAKwM,YAAcxM,G,EAGvB+M,wBAAyB,WACrB,EAAKvK,Y,kEASPvG,KAAK6F,cACL7F,KAAK8Q,wBAA2B9Q,KAAK8Q,wBAAwBxP,KAAKtB,MAElEA,KAAKuG,a,+BAIG,IAIFyB,EAJC,SAE+DhI,KAAK/C,MAAlEkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAAaC,EAFpD,EAEoDA,QACpDE,EAA6BF,EAA7BE,UAAWC,EAAkBH,EAAlBG,QAASzS,EAASsS,EAATtS,MAOzB,OAJI8U,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAYrQ,IAAOsQ,IAE3B,CAAC,KAAM,MAGnB,cAAC,KAAD,CAAezS,MAAM,qBAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,gBAAjB,SACI,mBAAO7M,KAAK,OAAOqG,MAAO7J,EAAOsN,SAAUR,KAAK0Q,iBACzCvI,YAAY,qCAEvB,mBAAM7E,KAAN,CAAWC,MAAM,4BAAjB,SACI,cAAC,GAAD,CAAaxG,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACI,cAAC8B,EAAA,EAAD,IADJ,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACI,cAAC4B,GAAA,EAAD,IADJ,oBAIJ,mBAAMhF,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK4Q,eAAvD,UACI,cAAC5E,GAAA,EAAD,IADJ,yBAMZ,oBAAKjJ,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAAS4L,OAAO,KAAKnF,UAAQ,EAACrB,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EAC5FuD,WAAY,CACRtT,QAASiQ,EACTsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,gBAG9B,cAAC,GAAD,CAAUgF,MAAO5L,KAAK6Q,gBAAgBvP,KAAKtB,MAAO2L,YAAa3L,KAAK8Q,mC,GA3RrEtP,a,gDC0IJuP,G,4MA5Ibf,QAAUpO,IAAMC,Y,EAEhB5E,MAAQ,CACN+T,KAAM,GACN/H,cAAc,G,EAMhBmC,aAAe,WACb,EAAKtN,SAAS,CAACmL,cAAc,K,EAO/BoC,cAAgB,SAAC6B,GACf,IAAIjP,EAAK,eACTA,EAAMH,SAAS,CACbkT,KAAM9D,EACNjE,cAAc,IACb,WAEIiE,GAAQA,EAAIpb,GAGfmM,EAAM+R,QAAQ5a,QAAQ8a,eAAehD,GAFrCjP,EAAM+R,QAAQ5a,QAAQ8a,eAAe,CAAC,KAAQ,KAAM,SAAY,KAAK,OAAS,Q,EAUpFC,aAAe,WACb,IAAMlS,EAAK,eACL+S,EAAO/S,EAAMhB,MAAM+T,KACzB/S,EAAM+R,QAAQ5a,QAAQqN,eAAe,CAAC,OAAQ,WAAW,WAAWtL,MAAK,SAAA4F,GACnEiU,EAAKlf,IAKPiL,EAAMjL,GAAKkf,EAAKlf,GAChBmM,EAAMgT,gBAAgBlU,IAJtBkB,EAAMiT,cAAcnU,GAMtB1K,QAAQC,IAAI,MAAMyK,MACjB/E,OAAM,SAAAxG,GAAC,OAAIa,QAAQC,IAAI,+DAAad,O,EAQzC0f,cAAgB,SAACnU,GACf,IAAMkB,EAAK,eACX,IAAMwR,QAAQ,CACVvc,MAAO,0DACP0N,KAAK,WAAD,4BAAE,8BAAApC,EAAA,sEACsB/E,GAAesD,GADrC,gBACGjF,EADH,EACGA,IACM,IAFT,EACQT,MAEVgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMgC,MAAM0L,cACZ1N,EAAMmN,gBAEN/O,GAAyB,QAAS,2BAAQvE,GAPxC,2CAAF,kDAAC,GAUL+I,SAZU,WAaN,OAAO,M,EAUjBoQ,gBAAkB,SAAClU,GACjB,IAAMkB,EAAK,eACX,IAAMwR,QAAQ,CACVvc,MAAO,4EACP0N,KAAK,WAAD,4BAAE,8BAAApC,EAAA,sEACsB9E,GAAeqD,GADrC,gBACGjF,EADH,EACGA,IACM,IAFT,EACQT,MAEVgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMgC,MAAM0L,cACZ1N,EAAMmN,gBAEN/O,GAAyB,QAAS,2BAAQvE,GAPxC,2CAAF,kDAAC,GAUL+I,SAZU,WAaN,OAAO,M,kEAUfb,KAAK6C,eAAiB,CACpBC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAGP/C,KACRC,MAAM2L,MADE5L,Q,+BAIN,IAAD,EACqBA,KAAK/C,MAA1B+T,EADA,EACAA,KAAK/H,EADL,EACKA,aACZ,OACE,mBAAO/V,MAAQ8d,GAASA,EAAKlf,GAAa,iCAAR,iCAAiB6O,QAASsI,EAAc8C,cAAc,EAAOD,OAAO,eAAKlL,KAAMZ,KAAKmQ,aAActP,SAAUb,KAAKoL,aAAnJ,SACE,iDAAUpL,KAAK6C,gBAAf,IAA+BkB,IAAK/D,KAAKgQ,QAAzC,UACE,mBAAM1M,KAAN,2BAAWC,MAAM,kCAAYvD,KAAK6C,gBAAlC,IAAkDsB,aAAc6M,EAAK9M,KAAMD,kBAAoB,SAACzS,GAAD,OAAOsL,GAAoBtL,IAAI0S,KAAK,OAAOE,MAAO,CAAC,CAACC,UAAU,EAAMpM,QAAS,8CAAW,CAACwH,IAAK,EAAGxH,QAAS,qDAAkB,CAACqM,IAAK,GAAIrM,QAAS,sDAA9O,SACE,mBAAOkQ,YAAY,kDAErB,mBAAM7E,KAAN,2BAAWC,MAAM,kCAAYvD,KAAK6C,gBAAlC,IAAkDsB,aAAc6M,EAAKG,SAAUlN,kBAAoB,SAACzS,GAAD,OAAOsL,GAAoBtL,IAAI0S,KAAK,WAAWE,MAAO,CAAC,CAACC,UAAU,EAAMpM,QAAS,oDAAa,CAACwH,IAAK,EAAGxH,QAAS,qDAAkB,CAACqM,IAAK,GAAIrM,QAAS,sDAAxP,SACE,kBAAOsM,SAAP,CAAgBG,SAAU,CAACC,QAAS,EAAGC,QAAS,GAAIJ,WAAS,EAACC,UAAW,GAAI0D,YAAY,wDAE3F,mBAAM7E,KAAN,2BAAWC,MAAO,gEAAgB,oBAASrQ,MAAM,mGAAf,SAAkC,cAACke,GAAA,EAAD,UAAiDpR,KAAK6C,gBAA1H,IAA0IsB,aAAc6M,EAAKpZ,QAAU,EAAGsM,KAAK,SAASE,MAAO,CAAC,CAACC,UAAU,EAAMpM,QAAS,2DAA1N,SACE,oBAAOoZ,MAAP,WACE,oBAAOtU,MAAO,EAAd,0BACA,oBAAOA,MAAO,EAAd,0C,GApIayE,aC0QZ8P,G,4MAtQbC,YAAc3P,IAAMC,Y,EAElB5E,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,EACbC,QAAS,CACLtB,KAAM,KACNtM,OAAQ,O,EAOhBiO,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,2BACP6S,UAAW,OACXC,MAAM,UAEV,CACI9S,MAAO,eACP8S,MAAM,SACNC,OAAQ,SAAClO,EAAMmO,GACX,OAAsB,IAAlBA,EAAOtO,OACA,oBAAK4Z,MAAM,UAAX,gCACkB,IAAlBtL,EAAOtO,OACP,oBAAK4Z,MAAM,QAAX,gCAEA,oBAAKA,MAAM,UAAX,4BAInB,CACIte,MAAO,qBACP6S,UAAW,SACXC,MAAM,UAEV,CACI9S,MAAO,2BACP6S,UAAW,aACXC,MAAM,SAEV,CACI9S,MAAO,eACP8S,MAAM,SACNC,OAAQ,SAAClO,EAAMmO,GAAP,OACJ,gCACI,mBAAQxP,KAAK,UAAU0R,QAAS,kBAAM,EAAKoI,gBAAgBtK,IAAS2I,MAAM,SAASzb,KAAM,cAAC4b,GAAA,EAAD,MAD7F,OAGI,mBAAQtY,KAAK,SAAU0R,QAAS,kBAAM,EAAKqJ,qBAAqBvL,IAAS2I,MAAM,SAASzb,KAAM,cAAC8b,GAAA,EAAD,a,EAWlH3I,S,sBAAW,oCAAA/H,EAAA,6DACHC,EAAO,CACPyF,KAAM,EAAKjH,MAAMuI,QAAQtB,KACzBmB,QAAS,EAAKpI,MAAMoI,QACpBC,SAAU,EAAKrI,MAAMqI,SACrB1N,OAAQ,EAAKqF,MAAMuI,QAAQ5N,QAG/B,EAAKkG,SAAS,CAACyH,aAAa,IARrB,SAUyB3L,GAAgB6E,GAVzC,gBAUA3G,EAVA,EAUAA,IAAKT,EAVL,EAUKA,KAAMrD,EAVX,EAUWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EACA,EAAKyG,SAAS,CAEVsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GArBvC,4C,EA4BX4O,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQtB,KAAO,KACfsB,EAAQ5N,OAAS,KACjBqG,EAAMH,SAAS,CACXuH,QAAS,EACTG,QAASA,IACV,WACCvH,EAAMsI,e,EAKdI,eAAiB,SAACrB,EAAUlQ,GAExB,EAAK0I,SAAS,CACVuH,QAAS,EACTC,SAAUA,IACX,WACCtF,KAAKuG,e,EAKbK,WAAa,SAACxR,GACV,EAAK0I,SAAS,CACVuH,QAASjQ,IACV,WACC4K,KAAKuG,e,EAObqK,eAAiB,WACf,EAAKW,YAAYlG,cAAc,K,EAMjCmF,gBAAkB,SAACzT,GACjB,EAAKwU,YAAYlG,cAActO,I,EAGjC2U,gBAAkB,SAAC3N,GACjB,EAAKwN,YAAcxN,G,EAGrB4N,wBAAyB,WACvB,EAAKpL,Y,EAMPkL,qBAAuB,SAACxd,GACpB,IAAIgK,EAAK,eACL2T,EAAO,GAEPA,EADA3d,EAAK4d,WAAa,EACd,gBAAO5d,EAAKiQ,KAAZ,2DAA2BjQ,EAAK4d,WAAhC,0JAEA,8CAAY5d,EAAKiQ,KAAjB,wCAER,IAAMuL,QAAQ,CACVvc,MAAO,2BACPwc,QAASkC,EACTzE,WAAY,qBACZrB,OAAQ,qBACRlL,KAAK,WAAD,4BAAE,kCAAApC,EAAA,6DAEFP,EAAMH,SAAS,CAACyH,aAAa,IACzB9G,EAAO,CAAE3M,GAAImC,EAAKnC,IAHpB,SAIwB6H,GAAe8E,GAJvC,gBAIK3G,EAJL,EAIKA,IAAKT,EAJV,EAIUA,KAEZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMsI,YAENlK,GAAyB,QAAS,2BAAQvE,GAX5C,2CAAF,kDAAC,M,EAqBbga,gBAAkB,SAACnB,GACf,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MACvByI,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQtB,KAAOnH,EACfkB,EAAMH,SAAS,CACXuH,QAAS,EACTG,a,kEAUNxF,KAAK6F,cACL7F,KAAK2R,wBAA2B3R,KAAK2R,wBAAwBrQ,KAAKtB,MAElEA,KAAKuG,a,+BAIG,IAAD,SAE8DvG,KAAK/C,MAAjEkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAAYC,EAFnD,EAEmDA,QACxD,OACI,cAAC,KAAD,CAAetS,MAAM,2BAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,sBAAjB,SACI,mBAAO7M,KAAK,OAAOqG,MAAOyI,EAAQtB,KAAM1D,SAAUR,KAAK8R,gBAChD3J,YAAY,2CAEvB,mBAAM7E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACE,cAAC8B,EAAA,EAAD,IADF,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACE,cAAC4B,GAAA,EAAD,IADF,oBAIJ,mBAAMhF,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK4Q,eAAvD,UACE,cAAC5E,GAAA,EAAD,IADF,yBAMZ,oBAAKjJ,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAAS4L,OAAO,KAAKnF,UAAQ,EAACrB,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EAC5FuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,gBAGhC,cAAC,GAAD,CAAcgF,MAAO5L,KAAK0R,gBAAgBpQ,KAAKtB,MAAO2L,YAAa3L,KAAK2R,mC,GAhQnEnQ,a,ICChBwD,G,KAAAA,YACAC,G,KAAAA,OA0VQ8M,G,kDAtVX,WAAY9R,GAAQ,IAAD,uBACf,cAAMA,IAwCV4F,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,eACP+S,OAAQ,SAAClJ,EAAO4P,GAAR,OACN,+BAAQA,EAAIqF,SAAarF,EAAIqF,SAASjI,OAAjB,QAG3B,CACI7W,MAAO,2BACP+S,OAAQ,SAAClJ,EAAO4P,GAAR,OACN,+BAAQA,EAAIqF,SAAarF,EAAIqF,SAAS9N,KAAjB,QAG3B,CACIhR,MAAO,eACP6S,UAAW,SAEf,CACE7S,MAAO,eACP+S,OAAQ,SAAClJ,EAAO4P,GACd,IAAMsF,EAAqB,OAAdtF,EAAIpJ,MAAiB,GAAMoJ,EAAIpJ,MAAOhP,MAAM,KACzD,OAAI0d,EAAKvd,OAAS,EACTud,EAAKC,IAAI,EAAKC,WAEd,KAIb,CACIjf,MAAO,2BACP6S,UAAW,cAEf,CACI7S,MAAO,2BACP6S,UAAW,cAEf,CACI7S,MAAO,eACP+S,OAAQ,SAAClO,EAAMmO,GAAP,OACJ,gCACI,mBAAQxP,KAAK,UAAU0R,QAAS,kBAAM,EAAKnI,MAAMmS,QAAQpd,KAAK,iCAAkCkR,IAAS2I,MAAM,SAASzb,KAAM,cAAC4b,GAAA,EAAD,MADlI,OAGI,mBAAQtY,KAAK,SAAUmY,MAAM,SAASzG,QAAS,kBAAM,EAAKiK,kBAAkBnM,IAAS9S,KAAM,cAAC8b,GAAA,EAAD,aApF5F,EA2FrBiD,UAAY,SAAAjH,GACV,IAAIoH,EAAS,EAAKrV,MAAMsV,SAClBC,EACJ,oBAAKhB,MAAOc,EAAO9S,KAAKiT,MAAoB,GAAdjT,KAAKkT,WAAnC,SACGxH,IAGL,OAAQ,sBAAgB9K,MAAO,CAAEuS,QAAS,gBAAlC,SAAqDH,GAA1CtH,IAlGA,EA0GnB3E,SA1GmB,sBA0GR,oCAAA/H,EAAA,6DACHC,EAAO,CACP,QAAW,EAAKxB,MAAMoI,QACtB,MAAS,EAAKpI,MAAMuI,QAAQoN,MAC5B,WAAa,EAAK3V,MAAMuI,QAAQqN,WAChC,UAAa,EAAK5V,MAAMuI,QAAQE,UAChC,QAAW,EAAKzI,MAAMuI,QAAQG,QAC9B,SAAY,EAAK1I,MAAMqI,UAG3B,EAAKxH,SAAS,CAACyH,aAAa,IAVrB,SdpDaxO,EcgEyB0H,EdhEfjI,GAAK,GAAD,OAAI0B,GAAJ,sBAAoCnB,EAAQ,OcoDvE,gBAYAe,EAZA,EAYAA,IAAKT,EAZL,EAYKA,KAAMrD,EAZX,EAYWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EACA,EAAKyG,SAAS,CAEVsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GAvBvC,kCdpDa,IAAAf,IcoDb,OA1GQ,EAwIrB+b,aAxIqB,sBAwIN,sCAAAtU,EAAA,6DACTP,EADS,wBAGmBpE,KAHnB,gBAGN/B,EAHM,EAGNA,IAAKT,EAHC,EAGDA,KAAMrD,EAHL,EAGKA,KACL,IAATqD,IACE0b,EAAY,IACN/d,KAAK,cAAC,GAAD,CAAiB+H,MAAM,GAAvB,+BAAY,OAC3B/I,EAAKsS,SAAQ,SAAArS,GACX8e,EAAU/d,KAAM,cAAC,GAAD,CAAsB+H,MAAO9I,EAAKnC,GAAlC,SAAuCmC,EAAKiQ,MAA/BjQ,EAAKnC,QAEpCmM,EAAMH,SAAS,CACbiV,eAGF1W,GAAyB,QAAS,2BAAQvE,GAd/B,2CAxIM,EA8JnB4O,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQE,UAAY,KACpBF,EAAQG,QAAU,KAClBH,EAAQoN,MAAQ,KAChBpN,EAAQtB,KAAO,KACfjG,EAAMH,SAAS,CACXuH,QAAS,EACTG,QAASA,IACV,WACCvH,EAAMsI,eA1KK,EA+KnBI,eAAiB,SAACrB,EAAUlQ,GAExB,EAAK0I,SAAS,CACVuH,QAAS,EACTC,SAAUA,IACX,WACCtF,KAAKuG,eArLM,EA0LnBK,WAAa,SAACxR,GACV,EAAK0I,SAAS,CACVuH,QAASjQ,IACV,WACC4K,KAAKuG,eA9LM,EAmMnBM,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACXuH,QAAS,EACTG,YACD,WACCvH,EAAMsI,eAlNK,EA2NnByM,iBAAmB,SAACrC,GAChB,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MACvByI,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQoN,MAAQ7V,EAChBkB,EAAMH,SAAS,CACXuH,QAAS,EACTG,aAlOW,EAuOrByN,cAAgB,SAAClW,GACf,IAAIkB,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQqN,WAAa9V,EACrBkB,EAAMH,SAAS,CACb0H,UACAH,QAAS,IACR,WACDpH,EAAMsI,eA/OW,EAsPnB8L,kBAAoB,SAACpe,GACjB,IAAIgK,EAAK,eACT,IAAMwR,QAAQ,CACVvc,MAAO,2BACPwc,QAAQ,8CAAD,OAAazb,EAAK2e,MAAlB,6BACPhS,KAAK,WAAD,4BAAE,kCAAApC,EAAA,6DAEFP,EAAMH,SAAS,CAACyH,aAAa,IACzB9G,EAAO,CAAE3M,GAAImC,EAAKnC,IAHpB,SdvMSiF,Ec2M2B0H,Ed3MjBjI,GAAK,GAAD,OAAI0B,GAAJ,6BAA2CnB,EAAQ,UcuM1E,gBAIKe,EAJL,EAIKA,IAAKT,EAJV,EAIUA,KAEZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMsI,YAENlK,GAAyB,QAAS,2BAAQvE,GAX5C,iCdvMS,IAAAf,IcuMT,OAAF,kDAAC,MAzPT,IAAIkH,EAAK,eAEHiV,EClBP,SAAyBhP,EAAMiP,GAClC,IAAMC,EAAM,IAAIle,OAAJ,eAAmBgP,EAAnB,kBACNzP,EAAI0e,EAAIE,OAAO,GAAGC,MAAMF,GAC9B,OAAS,MAAL3e,EAAkB8e,mBAAmB9e,EAAE,IACpC,KDcY+e,CAAiB,SAASvT,EAAMzI,SAAS0b,QACpDjW,EAAQ,CAEVkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,EACbgN,SAAS,CAAC,UAAU,MAAM,UAAU,SAAS,OAAO,OAAO,QAAQ,OAAO,OAAO,WAAW,UAC5FQ,UAAW,IAjBE,OAoBb9V,EAAMuI,QADF0N,EACY,CACdxN,UAAW,KACXC,QAAS,KACTiN,MAAOM,EACPL,WAAY,MAGE,CACdnN,UAAW,KACXC,QAAS,KACTiN,MAAO,KACPC,WAAY,MAGlB5U,EAAMhB,MAAQA,EAlCG,E,gEAkRf+C,KAAK6F,cAEL7F,KAAKuG,WAELvG,KAAK8S,iB,+BAGC,IAIF9K,EAJC,SAEwEhI,KAAK/C,MAA3EkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAAYC,EAFnD,EAEmDA,QAAQuN,EAF3D,EAE2DA,UAC3DrN,EAAsCF,EAAtCE,UAAUC,EAA4BH,EAA5BG,QAAQiN,EAAoBpN,EAApBoN,MAAMC,EAAcrN,EAAdqN,WAO7B,OAJI7K,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAWrQ,IAAOsQ,IAE1B,CAAC,KAAK,MAGlB,cAAC,KAAD,CAAezS,MAAM,2BAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,gBAAjB,SACI,mBAAO7M,KAAK,OAAOqG,MAAO6V,EAAOpS,SAAUR,KAAKgT,iBACzC7K,YAAY,qCAEvB,mBAAM7E,KAAN,CAAWC,MAAM,gBAAjB,SACE,oBAAQ2E,YAAU,EAACC,YAAY,6CAAU/H,MAAO,CAACnB,MAAO,SAAUlC,MAAO8V,EAAYrS,SAAUR,KAAKiT,cAApG,SACGF,MAGL,mBAAMzP,KAAN,CAAWC,MAAM,4BAAjB,SACI,cAAC,GAAD,CAAaxG,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACE,cAAC8B,EAAA,EAAD,IADF,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACE,cAAC4B,GAAA,EAAD,IADF,oBAIJ,mBAAMhF,KAAN,UACI,mBAAQ5M,KAAK,UAAUmO,SAAS,SAAhC,SACI,eAAC,IAAD,CAAMgH,GAAG,iCAAT,UAA0C,cAACG,GAAA,EAAD,IAA1C,2BAKhB,oBAAKjJ,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAAS4L,OAAO,KAAKxG,QAASuD,EAAalC,UAAQ,EAACyC,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EAC5FuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,yB,GA9U1BpF,a,+BEwGTiS,G,4MA5GXC,UAAY9R,IAAMC,Y,EAElB5E,MAAQ,CACNF,MAAO,I,EAOT4W,WAAa,SAACzG,GACD,eACLpP,SAAS,CACbf,MAAOmQ,K,EAKX0G,aAAe,SAAC7W,GACZ,EAAKe,SAAS,CACVf,W,EAKR8W,a,uCAAe,WAAOpW,GAAP,iBAAAe,EAAA,sEACU,EAAKsV,OAAOrW,GADtB,gBACJzJ,EADI,EACJA,KACFD,EAAcC,GAIf,EAAK0f,UAAUte,QAAQ2e,SAAStW,EAAKyG,KAAM,YAF3C,EAAKwP,UAAUte,QAAQ2e,SAAStW,EAAKyG,KAAMlQ,EAAK0T,MAJzC,2C,wDAWfoM,OAAS,SAACrW,GACN,OAAO,IAAI9G,SACP,SAACC,EAASC,GACN,IAAImd,EAAM,IAAIC,MACVtW,EAAS,IAAIC,WACjBD,EAAOI,cAAcN,GACrBE,EAAOE,OAAS,SAAUrM,GACtBwiB,EAAI5W,IAAM4C,KAAKnL,QAEnBmf,EAAInW,OAAS,WACT,IAAIY,EAAO,CACPyV,SAAUzW,EAAKyG,KACfiQ,QAASH,EAAI5W,KAEjBtG,KAAMI,KAAKyB,GAAmB8F,GAAMtH,MAAK,SAAAC,GACrC,IAAMpD,EAAOoD,EAASpD,KACJ,IAAdA,EAAKqD,KACLT,EAAQ,CAAC5C,KAAM,CAAC0T,KAAM1T,EAAKA,SAE3BqI,GAAyB,QAAS,2BAAQrI,EAAK8D,KAC/ClB,EAAQ,CAAC5C,KAAM,CAAC0T,KAAM,UAG3B1P,OAAM,SAAAN,GACL2E,GAAyB,QAAS,iCAAS3E,EAAMO,SACjDpB,EAAOa,W,EAU3B0c,OAAS,WACL,OAAO,OAAS,EAAKnX,MAAMF,OAAS,KAAQ,EAAKE,MAAMF,MAAOsX,Q,EAOlEC,SAAW,WACP,OAAO,EAAKrX,MAAMF,O,kEAQNiD,KACRC,MAAM2L,MADE5L,Q,+BAIN,IAAD,OACEjD,EAASiD,KAAK/C,MAAdF,MACP,OACI,cAAC,KAAD,CACIgH,IAAK/D,KAAK0T,UACV3W,MAAOA,EACPwX,SAAS,EACTnU,MAAO,CAACoU,OAAO,OAAOC,UAAU,OAAOC,SAAS,QAChDZ,OAAQ,SAACrW,GAAD,OAAU,EAAKoW,aAAapW,IACpC+C,SAAU,SAAAzD,GAAK,OAAI,EAAK6W,aAAa7W,U,GAvG7ByE,aCCjByD,I,YAAAA,QAwTQ0P,G,4MAnTX3E,QAAUpO,IAAMC,Y,EAChB+S,YAAchT,IAAMC,Y,EAEpB5E,MAAQ,CACJsV,SAAS,CAAC,UAAU,MAAM,UAAU,SAAS,OAAO,OAAO,QAAQ,OAAO,OAAO,WAAW,UAC5FN,KAAM,GACN4C,cAAc,EACdC,WAAY,GACZC,KAAM,GAENC,UAAU,EACVljB,GAAI,GACJihB,UAAW,I,EAOfkC,YAAc,SAAAC,GACV,IAAMjD,EAAO,EAAKhV,MAAMgV,KAAKrH,QAAO,SAAAM,GAAG,OAAIA,IAAQgK,KACnD,EAAKpX,SAAS,CAAEmU,U,EAMpBkD,UAAY,WACC,eACQlY,MAAMgV,KAEdvd,OAAS,GACd,EAAKoJ,SAAS,CAAE+W,cAAc,IAAQ,kBAAM,EAAKO,MAAMC,Y,EAI/DC,kBAAoB,SAAA9jB,GAChB,EAAKsM,SAAS,CAAEgX,WAAYtjB,EAAEoD,OAAOmI,S,EAMzCwY,mBAAqB,WAAO,IAChBT,EAAe,EAAK7X,MAApB6X,WACF7C,EAAS,EAAKhV,MAAdgV,KACF6C,IAA4C,IAA9B7C,EAAKuD,QAAQV,KAC3B7C,EAAI,uBAAOA,GAAP,CAAa6C,KAErB,EAAKhX,SAAS,CACVmU,OACA4C,cAAc,EACdC,WAAY,M,EAKpBW,OAAS,SAAAvK,GACL,IAAIoH,EAAS,EAAKrV,MAAMsV,SAClBC,EACF,oBACI/R,UAAQ,EACR+Q,MAAOc,EAAO9S,KAAKiT,MAAoB,GAAdjT,KAAKkT,WAC9BgD,QAAS,SAAAlkB,GACLA,EAAEmkB,iBACF,EAAKV,YAAY/J,IALzB,SAQKA,IAGT,OAAQ,sBAAgB9K,MAAO,CAAEuS,QAAS,gBAAlC,SAAqDH,GAA1CtH,I,EAQvB0K,OAAS,WACP,IAAI3X,EAAK,eADI,EAEcA,EAAMhB,MAA5BgV,EAFQ,EAERA,KAAM+C,EAFE,EAEFA,SAAUljB,EAFR,EAEQA,GAErB,IAAmC,IAA/BmM,EAAM2W,YAAYR,SAAtB,CAKA,IAAMyB,EAAS5X,EAAM2W,YAAYN,WACjCrW,EAAM+R,QAAQ5a,QAAQqN,eAAe,CAAC,QAAS,eAAetL,MAAK,SAAA4F,GAEjE,IAAI+Y,EAAW,KAEXA,EADA7D,EAAKvd,OAAS,EACHud,EAAKtf,KAAK,KACC,IAAhBsf,EAAKvd,OACAud,EAAK,GAEL,KAEf,IAAIxT,EAAO,CACTmU,MAAO7V,EAAM6V,MACbrP,MAAOuS,EACPpG,QAASmG,EACThD,WAAY9V,EAAM8V,YAEhBmC,GAEAvW,EAAK3M,GAAKA,EACVmM,EAAMlE,YAAY0E,IAGlBR,EAAMnE,YAAY2E,MAErBzG,OAAM,SAAAxG,GAAC,OAAIa,QAAQC,IAAI,yDAAYd,WA7BlC6K,GAAyB,QAAS,2BAAQ,iE,EAiChDtC,Y,uCAAc,WAAOyR,GAAP,iBAAAhN,EAAA,sEACgBzE,GAAYyR,GAD5B,gBACH1T,EADG,EACHA,IACM,IAFH,EACET,KAERgF,GAAyB,UAAW,2BAAQ,wCAE5CA,GAAyB,QAAS,2BAAQvE,GALpC,2C,wDAUdgC,Y,uCAAc,WAAO0R,GAAP,iBAAAhN,EAAA,sEACgB1E,GAAY0R,GAD5B,gBACH1T,EADG,EACHA,IACM,IAFH,EACET,KAERgF,GAAyB,UAAW,2BAAQ,wCAE5CA,GAAyB,QAAS,2BAAQvE,GALpC,2C,wDAcdqX,U,uCAAY,WAAOrd,GAAP,yBAAA0M,EAAA,6DACJP,EADI,eAEJQ,EAAO,CACT3M,GAAIA,GAHE,SAMsBkI,GAASyE,GAN/B,gBAMH3G,EANG,EAMHA,IAAKT,EANF,EAMEA,KAAMrD,EANR,EAMQA,KACL,IAATqD,EACF4G,EAAMH,SAAS,CACTmU,KAAoB,OAAfje,EAAKuP,MAAiB,GAAMvP,EAAKuP,MAAOhP,MAAM,KACnDwgB,KAAM/gB,EACNghB,UAAS,EACTljB,GAAIA,IACN,WACFmM,EAAM+R,QAAQ5a,QAAQ8a,eAAelc,GACrCiK,EAAM2W,YAAYjB,WAAW3f,EAAK0b,YAGlCrT,GAAyB,QAAS,2BAAQvE,GAlBpC,2C,wDAyBZgb,a,sBAAe,sCAAAtU,EAAA,6DACPP,EADO,wBAGqBpE,KAHrB,gBAGJ/B,EAHI,EAGJA,IAAKT,EAHD,EAGCA,KAAMrD,EAHP,EAGOA,KACL,IAATqD,GACI0b,EAAY,GAChB/e,EAAKsS,SAAQ,SAAArS,GACT8e,EAAU/d,KAAM,cAAC,GAAD,CAAsB+H,MAAO9I,EAAKnC,GAAlC,SAAuCmC,EAAKiQ,MAA/BjQ,EAAKnC,QAEtCmM,EAAMH,SAAS,CACXiV,eAGJ1W,GAAyB,QAAS,2BAAQvE,GAbnC,2C,EAqBfie,gBAAkB,SAAChS,GACjB,EAAK6Q,YAAc7Q,G,kEAOjB,IAAI9F,EAAQ+B,KAEZ/B,EAAM6U,eAEN,IAAIkD,EAAQ/X,EAAMgC,MAAMzI,SAASyF,MAEjC,GAAI+Y,EACA/X,EAAMkR,UAAU6G,EAAMlkB,QACnB,CAELkO,KAAKlC,SAAS,CACVkX,UAAS,EACTD,KAHO,CAACrF,QAAQ,OAIlB,WACAzR,EAAM+R,QAAQ5a,QAAQ8a,eAAe,CAAC,MAAQ,KAAM,WAAa,OACjEjS,EAAM2W,YAAYjB,WAAW,QAGjC3T,KAAK6C,eAAiB,CAClBC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEvB/C,KAAKiD,iBAAmB,CACpBD,WAAY,CAACD,KAAM,GAAIG,OAAQ,M,+BAK7B,IAAD,SAEoDlD,KAAK/C,MAAtDgV,EAFH,EAEGA,KAAM4C,EAFT,EAESA,aAAcC,EAFvB,EAEuBA,WAAWC,EAFlC,EAEkCA,KAAKhC,EAFvC,EAEuCA,UACtCkD,EAAWhE,EAAKC,IAAIlS,KAAKyV,QAC/B,OACI,cAAC,KAAD,CAAeviB,MAAM,2BAArB,SACI,0BAASiN,UAAU,oBAAnB,UACI,sBAAKA,UAAU,SAAf,UACI,uFACA,uCACI,4BACI,gGAEJ,4BACI,wLAEJ,4BACI,oIAEJ,4BACI,wVAIZ,oBAAK4C,KAAM,GAAI5C,UAAU,yBAAzB,SACI,iDAAUH,KAAK6C,gBAAf,IAA+BkB,IAAK/D,KAAKgQ,QAAS7P,UAAU,iBAA5D,UACE,mBAAMmD,KAAN,6BAAetD,KAAKiD,kBAApB,IAAsC7C,MAAO,CAAC,UAAY,SAA1D,SACE,mBAAQyE,SAAS,SAASnO,KAAK,UAAU0R,QAASpI,KAAK4V,OAAvD,6BAEA,mBAAMtS,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,IAA+CqB,KAAK,QAAQC,aAAc4Q,EAAKnC,MAAO3O,kBAAoB,SAACzS,GAAD,OAAOsL,GAAoBtL,IAAI4S,MAAO,CAAE,CAACC,UAAU,EAAMpM,QAAS,kCAAU,CAACqM,IAAK,GAAIrM,QAAS,uDAAzM,SACE,mBAAOvB,KAAK,OAAO0J,MAAO,CAACnB,MAAM,aAEnC,mBAAMqE,KAAN,2BAAWC,MAAM,4BAAWvD,KAAK6C,gBAAjC,IAAiDqB,KAAK,aAAaC,aAAc4Q,EAAKlC,WAAYzO,MAAO,CAAC,CAACC,UAAU,EAAMpM,QAAS,+CAApI,SACE,oBAAQmI,MAAO,CAACnB,MAAM,QAASiJ,YAAU,EACjCC,YAAY,6CADpB,SAEG4K,OAGL,oBAAMzP,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,cACI,qBAAKzC,MAAO,CAAE8V,aAAc,IAA5B,SACKD,IAEJpB,GACG,mBACI9Q,IAAK,SAAAqR,GAAK,OAAI,EAAKA,MAAQA,GAC3B1e,KAAK,OACLkG,KAAK,QACLwD,MAAO,CAAEnB,MAAO,IAChBlC,MAAO+X,EACPtU,SAAUR,KAAKsV,kBACfa,OAAQnW,KAAKuV,mBACba,aAAcpW,KAAKuV,sBAGzBV,GACE,qBAAKzM,QAASpI,KAAKmV,UAAnB,UACE,cAACnJ,GAAA,EAAD,IADF,kBAKR,mBAAM1I,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,aACI,cAAC,GAAD,CAAgB+I,MAAO5L,KAAK+V,gBAAgBzU,KAAKtB,0B,GA/R1DwB,aCWR6U,G,uKAZT,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,0BAA0BC,UAAWxE,GAAWyE,OAAK,IADrE,IAEI,cAAC,IAAD,CAAOF,KAAK,iCAAiCC,UAAW5B,KACxD,cAAC,IAAD,CAAO2B,KAAK,iCAAiCC,UAAW5B,KACxD,cAAC,IAAD,CAAU9I,GAAG,mC,GATPrK,aCGbwD,G,KAAAA,YAmQQyR,G,4MA/PXxZ,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,EACbC,QAAS,CACLE,UAAW,KACXC,QAAS,KACTiN,MAAO,O,EAOf/M,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,eACP6S,UAAW,UAEf,CACI7S,MAAO,eACP6S,UAAW,SAEf,CACI7S,MAAO,2BACP6S,UAAW,cAEf,CACI7S,MAAO,2BACP6S,UAAW,cAEf,CACI7S,MAAO,eACP+S,OAAQ,SAAClO,EAAMmO,GAAP,OACJ,gCACI,mBAAQxP,KAAK,UAAU0R,QAAS,kBAAM,EAAKnI,MAAMmS,QAAQpd,KAAK,gCAAiCkR,IAAS2I,MAAM,SAASzb,KAAM,cAAC4b,GAAA,EAAD,MADjI,OAGI,mBAAQtY,KAAK,SAAS0R,QAAS,kBAAM,EAAKsO,eAAexQ,IAAU2I,MAAM,SAASzb,KAAM,cAAC8b,GAAA,EAAD,a,EAW5G3I,S,sBAAW,oCAAA/H,EAAA,6DACHC,EAAO,CACPmU,MAAO,EAAK3V,MAAMuI,QAAQoN,MAC1BvN,QAAS,EAAKpI,MAAMoI,QACpBC,SAAU,EAAKrI,MAAMqI,SACrBI,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,SAGhC,EAAK7H,SAAS,CAACyH,aAAa,IATrB,SAWyB3M,GAAY6F,GAXrC,gBAWA3G,EAXA,EAWAA,IAAKT,EAXL,EAWKA,KAAMrD,EAXX,EAWWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EACA,EAAKyG,SAAS,CAEVsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GAtBvC,4C,EA6BX4e,eAAiB,SAACziB,GACd,IAAIgK,EAAK,eACT,IAAMwR,QAAQ,CACVvc,MAAO,2BACPwc,QAAQ,8CAAD,OAAazb,EAAK2e,MAAlB,6BACPhS,KAAK,WAAD,4BAAE,kCAAApC,EAAA,6DAEFP,EAAMH,SAAS,CAACyH,aAAa,IACzB9G,EAAO,CAAE3M,GAAImC,EAAKnC,IAHpB,SAIwBgH,GAAW2F,GAJnC,gBAIK3G,EAJL,EAIKA,IAAKT,EAJV,EAIUA,KAEZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMsI,YAENlK,GAAyB,QAAS,2BAAQvE,GAX5C,2CAAF,kDAAC,M,EAoBb4O,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAASvH,EAAMhB,MAAMuI,QACzBA,EAAQE,UAAY,KACpBF,EAAQG,QAAU,KAClBH,EAAQoN,MAAQ,KAChB3U,EAAMH,SAAS,CACXuH,QAAS,EACTG,QAASA,IACV,WACCvH,EAAMsI,e,EAKdI,eAAiB,SAACrB,EAAUlQ,GAExB,EAAK0I,SAAS,CACVuH,QAAS,EACTC,SAAUA,IACX,WACCtF,KAAKuG,e,EAKbK,WAAa,SAACxR,GACV,EAAK0I,SAAS,CACVuH,QAASjQ,IACV,WACC4K,KAAKuG,e,EAKbM,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACXuH,QAAS,EACTG,YACD,WACCvH,EAAMsI,e,EASdyM,iBAAmB,SAACrC,GAChB,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MACvByI,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQoN,MAAQ7V,EAChBkB,EAAMH,SAAS,CACXuH,QAAS,EACTG,a,mEAUJxF,KAAK6F,gB,0CAQL7F,KAAKuG,a,+BAIC,IAIFyB,EAJC,SAE8DhI,KAAK/C,MAAjEkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAAYC,EAFnD,EAEmDA,QACnDE,EAA2BF,EAA3BE,UAAUC,EAAiBH,EAAjBG,QAAQiN,EAASpN,EAAToN,MAOvB,OAJI5K,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAWrQ,IAAOsQ,IAE1B,CAAC,KAAK,MAGlB,cAAC,KAAD,CAAezS,MAAM,2BAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,gBAAjB,SACI,mBAAO7M,KAAK,OAAOqG,MAAO6V,EAAOpS,SAAUR,KAAKgT,iBACzC7K,YAAY,qCAEvB,mBAAM7E,KAAN,CAAWC,MAAM,4BAAjB,SACI,cAAC,GAAD,CAAaxG,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACI,cAAC8B,EAAA,EAAD,IADJ,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACI,cAAC4B,GAAA,EAAD,IADJ,oBAIJ,mBAAMhF,KAAN,UACI,mBAAQ5M,KAAK,UAAUmO,SAAS,SAAhC,SACI,eAAC,IAAD,CAAMgH,GAAG,iCAAT,UAA0C,cAACG,GAAA,EAAD,IAA1C,2BAKhB,oBAAKjJ,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAAS4L,OAAO,KAAKnF,UAAQ,EAACrB,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EAC5FuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,yB,GAvP/BpF,aCsQJmV,I,mNAnQX3G,QAAUpO,IAAMC,Y,EAChB+S,YAAchT,IAAMC,Y,EAEpB5E,MAAQ,CACJsV,SAAS,CAAC,UAAU,MAAM,UAAU,SAAS,OAAO,OAAO,QAAQ,OAAO,OAAO,WAAW,UAC5FN,KAAM,GACN4C,cAAc,EACdC,WAAY,GACZC,KAAM,GAENC,UAAU,EACVljB,GAAI,I,EAORmjB,YAAc,SAAAC,GACV,IAAMjD,EAAO,EAAKhV,MAAMgV,KAAKrH,QAAO,SAAAM,GAAG,OAAIA,IAAQgK,KACnD,EAAKpX,SAAS,CAAEmU,U,EAMpBkD,UAAY,WACC,eACQlY,MAAMgV,KAEdvd,OAAS,GACd,EAAKoJ,SAAS,CAAE+W,cAAc,IAAQ,kBAAM,EAAKO,MAAMC,Y,EAI/DC,kBAAoB,SAAA9jB,GAChB,EAAKsM,SAAS,CAAEgX,WAAYtjB,EAAEoD,OAAOmI,S,EAMzCwY,mBAAqB,WAAO,IAChBT,EAAe,EAAK7X,MAApB6X,WACF7C,EAAS,EAAKhV,MAAdgV,KACF6C,IAA4C,IAA9B7C,EAAKuD,QAAQV,KAC3B7C,EAAI,uBAAOA,GAAP,CAAa6C,KAErB,EAAKhX,SAAS,CACVmU,OACA4C,cAAc,EACdC,WAAY,M,EAKpBW,OAAS,SAAAvK,GACL,IAAIoH,EAAS,EAAKrV,MAAMsV,SAClBC,EACF,oBACI/R,UAAQ,EACR+Q,MAAOc,EAAO9S,KAAKiT,MAAoB,GAAdjT,KAAKkT,WAC9BgD,QAAS,SAAAlkB,GACLA,EAAEmkB,iBACF,EAAKV,YAAY/J,IALzB,SAQKA,IAGT,OAAQ,sBAAgB9K,MAAO,CAAEuS,QAAS,gBAAlC,SAAqDH,GAA1CtH,I,EAQvB0K,OAAS,WACL,IAAM3X,EAAK,eADA,EAEgBA,EAAMhB,MAA5BgV,EAFM,EAENA,KAAM+C,EAFA,EAEAA,SAAUljB,EAFV,EAEUA,GAErB,IAAmC,IAA/BmM,EAAM2W,YAAYR,SAAtB,CAKA,IAAMyB,EAAS5X,EAAM2W,YAAYN,WACjCrW,EAAM+R,QAAQ5a,QAAQqN,eAAe,CAAC,UAAUtL,MAAM,SAAA4F,GAElD,IAAI+Y,EAAW,KAEXA,EADA7D,EAAKvd,OAAS,EACHud,EAAKtf,KAAK,KACC,IAAhBsf,EAAKvd,OACAud,EAAK,GAEL,KAEf,IAAIxT,EAAO,CACPmU,MAAO7V,EAAM6V,MACbrP,MAAOuS,EACPpG,QAASmG,GAETb,GAEAvW,EAAK3M,GAAKA,EACVmM,EAAM2Y,WAAWnY,IAGjBR,EAAM4Y,WAAWpY,WA1BrBpC,GAAyB,QAAS,2BAAQ,iE,EAgClDua,W,uCAAa,WAAOpL,GAAP,iBAAAhN,EAAA,sEACiBxF,GAASwS,GAD1B,gBACF1T,EADE,EACFA,IACM,IAFJ,EACGT,KAERgF,GAAyB,UAAW,2BAAQ,wCAE5CA,GAAyB,QAAS,2BAAQvE,GALrC,2C,wDAUb+e,W,uCAAa,WAAOrL,GAAP,iBAAAhN,EAAA,sEACiB3F,GAAY2S,GAD7B,gBACF1T,EADE,EACFA,IACM,IAFJ,EACGT,KAERgF,GAAyB,UAAW,2BAAQ,wCAE5CA,GAAyB,QAAS,2BAAQvE,GALrC,2C,wDAcbqX,U,uCAAY,WAAOrd,GAAP,yBAAA0M,EAAA,6DACFP,EADE,eAEJQ,EAAO,CACP3M,GAAIA,GAHA,SAMwBiH,GAAQ0F,GANhC,gBAMD3G,EANC,EAMDA,IAAKT,EANJ,EAMIA,KAAMrD,EANV,EAMUA,KACL,IAATqD,EACA4G,EAAMH,SAAS,CACXmU,KAAqB,OAAfje,EAAKuP,MAAiB,GAAMvP,EAAKuP,MAAOhP,MAAM,KACpDwgB,KAAM/gB,EACNghB,UAAS,EACTljB,GAAIA,IACN,WACEmM,EAAM+R,QAAQ5a,QAAQ8a,eAAelc,GACrCiK,EAAM2W,YAAYjB,WAAW3f,EAAK0b,YAGtCrT,GAAyB,QAAS,2BAAQvE,GAlBtC,2C,wDA0BZie,gBAAkB,SAAChS,GACf,EAAK6Q,YAAc7Q,G,kEAOnB,IAAI9F,EAAQ+B,KAER8W,EAAO7Y,EAAMgC,MAAMzI,SAASyF,MAChC,GAAI6Z,EACA7Y,EAAMkR,UAAU2H,EAAKhlB,QAClB,CAEHmM,EAAMH,SAAS,CACXkX,WAAW8B,EACX/B,KAHO,CAACrF,QAAQ,OAIlB,WACEzR,EAAM+R,QAAQ5a,QAAQ8a,eAAe,CAAC,MAAQ,OAC9CjS,EAAM2W,YAAYjB,WAAW,QAGrC3T,KAAK6C,eAAiB,CAClBC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEvB/C,KAAKiD,iBAAmB,CACpBD,WAAY,CAACD,KAAM,GAAIG,OAAQ,M,+BAK7B,IAAD,SAC2ClD,KAAK/C,MAA7CgV,EADH,EACGA,KAAM4C,EADT,EACSA,aAAcC,EADvB,EACuBA,WAAWC,EADlC,EACkCA,KACjCkB,EAAWhE,EAAKC,IAAIlS,KAAKyV,QAC/B,OACI,cAAC,KAAD,CAAeviB,MAAM,2BAArB,SACI,0BAASiN,UAAU,mBAAnB,UACI,sBAAKA,UAAU,SAAf,UACI,uFACA,uCACI,4BACI,gGAEJ,4BACI,wLAEJ,4BACI,wVAIZ,oBAAK4C,KAAM,GAAI5C,UAAU,wBAAzB,SACI,iDAAUH,KAAK6C,gBAAf,IAA+BkB,IAAK/D,KAAKgQ,QAAS7P,UAAU,iBAA5D,UACI,mBAAMmD,KAAN,6BAAetD,KAAKiD,kBAApB,IAAsC7C,MAAO,CAAC,UAAY,SAA1D,SACI,mBAAQyE,SAAS,SAASnO,KAAK,UAAU0R,QAASpI,KAAK4V,OAAvD,6BAEJ,mBAAMtS,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,IAA+CqB,KAAK,QAAQC,aAAc4Q,EAAKnC,MAAO3O,kBAAoB,SAACzS,GAAD,OAAOsL,GAAoBtL,IAAI4S,MAAO,CAAE,CAACC,UAAU,EAAMpM,QAAS,kCAAU,CAACqM,IAAK,GAAIrM,QAAS,uDAAzM,SACI,mBAAOvB,KAAK,OAAO0J,MAAO,CAACnB,MAAM,aAErC,oBAAMqE,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,cACI,qBAAKzC,MAAO,CAAE8V,aAAc,IAA5B,SACKD,IAEJpB,GACG,mBACI9Q,IAAK,SAAAqR,GAAK,OAAI,EAAKA,MAAQA,GAC3B1e,KAAK,OACLkG,KAAK,QACLwD,MAAO,CAAEnB,MAAO,IAChBlC,MAAO+X,EACPtU,SAAUR,KAAKsV,kBACfa,OAAQnW,KAAKuV,mBACba,aAAcpW,KAAKuV,sBAGzBV,GACE,qBAAKzM,QAASpI,KAAKmV,UAAnB,UACI,cAACnJ,GAAA,EAAD,IADJ,mBAKR,mBAAM1I,KAAN,2BAAWC,MAAM,gBAASvD,KAAK6C,gBAA/B,aACI,cAAC,GAAD,CAAgB+I,MAAO5L,KAAK+V,gBAAgBzU,KAAKtB,0B,GA5P1DwB,cCYRuV,G,uKAZT,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOT,KAAK,yBAAyBC,UAAWS,GAAUR,OAAK,IADnE,IAEI,cAAC,IAAD,CAAOF,KAAK,iCAAiCC,UAAWI,KACxD,cAAC,IAAD,CAAOL,KAAK,gCAAgCC,UAAWI,KACvD,cAAC,IAAD,CAAU9K,GAAG,kC,GATRrK,a,6BC6bJyV,G,4MAvbXjH,QAAUpO,IAAMC,Y,EAEhB5E,MAAQ,CACJsI,aAAa,EACbJ,MAAM,GACN+R,QAAQ,GACR1R,QAAS,CACLC,KAAM,IAEV0R,aAAa,EAEbC,SAAU,CACNtlB,GAAI,GACJulB,SAAU,GACVC,YAAa,K,EAQrB/Q,S,sBAAW,wCAAA/H,EAAA,6DACHP,EADG,eAEHuH,EAAUvH,EAAMhB,MAAMuI,QACtB/G,EAAO,CACPgH,KAAMD,EAAQC,MAGlBxH,EAAMH,SAAS,CAACyH,aAAa,IAPtB,SASyBtL,GAAYwE,GATrC,gBASA3G,EATA,EASAA,IAAKT,EATL,EASKA,KAAMrD,EATX,EASWA,KAElBiK,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,EAEA4G,EAAMH,SAAS,CAACqH,MAAOnR,IAAM,WACzBiK,EAAMsZ,eAGVlb,GAAyB,QAAS,2BAAQvE,GAlBvC,4C,EAsBXyf,UAAY,WACR,IAAIC,GAAa,EAEbC,EAAU,IAAI1kB,KAAK,EAAK2kB,oBACxBC,EAAUF,EAAQzkB,cAClB4kB,EAAWH,EAAQI,WACnBC,EAASL,EAAQM,UACjBC,EAAY,IAAIjlB,KAAK,EAAKkK,MAAMuI,QAAQC,MACxCwS,EAAYD,EAAUhlB,cACtBklB,EAAaF,EAAUH,WAEvBL,EADAG,IAAYM,GAAaL,IAAaM,EAY1C,IALA,IAAIC,EAAWF,EAAY,MAD3BC,EAAaF,EAAUH,WAAW,GACW,GAAI,IAAIK,EAAYA,GAAc,IAE3EhB,EAAU,GACVkB,EAAY,GACZ7D,EAAU,EACN7hB,EAAI,EAAEA,EAAI,EAAKuK,MAAMkI,MAAMzQ,OAAOhC,IAAI,CAC1C,IAAMuB,EAAO,EAAKgJ,MAAMkI,MAAMzS,GACxB2lB,EAAU3lB,EAAI,EAMpB,GALe,IAAZ2lB,IAECD,EAAY,GACZ7D,KAEa,IAAdtgB,EAAK6V,KAAW,CAIf,IAAMwO,EAAUH,GAAalkB,EAAKskB,OAAO,GAAK,IAAItkB,EAAKskB,OAAQtkB,EAAKskB,QAClD,IAAftkB,EAAK8I,OAGc,IAAfya,GAAuBM,IAAW7jB,EAAKskB,OACtCH,EAAUpjB,KAAK,oBAAYoT,QAAS,EAAKoQ,QAASC,UAASxkB,EAAKnC,GAAI4mB,WAAUJ,EAASnY,UAAU,QAAlF,SAA2FlM,EAAKskB,QAAvF7lB,IAExB0lB,EAAUpjB,KAAK,oBAAYoT,QAAS,EAAKoQ,QAASC,UAASxkB,EAAKnC,GAAI4mB,WAAUJ,EAA/D,SAAyErkB,EAAKskB,QAArE7lB,IAI5B0lB,EAAUpjB,KAAK,oBAAYoT,QAAS,EAAKoQ,QAASrY,UAAU,YAAYsY,UAASxkB,EAAKnC,GAAI4mB,WAAUJ,EAASK,aAAY1kB,EAAK8I,MAA/G,SAAuH9I,EAAKskB,QAAnH7lB,SAI5B0lB,EAAUpjB,KAAK,sBAAStC,IAEb,IAAZ2lB,GACCnB,EAAQliB,KAAK,6BAAmBojB,GAAV7D,IAG9B,EAAKzW,SAAS,CACVoZ,a,EAQRQ,iBAAmB,WACf,IAAIjS,EAAO,IAAI1S,KAEX6lB,EAAOnT,EAAKzS,cACZ6lB,EAAQpT,EAAKoS,WAAa,EAC1BiB,EAAUrT,EAAKsS,UAQnB,OAPIc,GAAS,GAAKA,GAAS,IACvBA,EAAQ,IAAMA,GAEdC,GAAW,GAAKA,GAAW,IAC3BA,EAAU,IAAMA,GAEFF,EAVD,IAUqBC,EAVrB,IAU0CC,G,EAK/DjS,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QACP,KAAfsB,GAAoD,OAA/BiS,KAAKC,UAAUlS,IAAuD,SAA/BiS,KAAKC,UAAUlS,GAC3EtB,EAAQC,KAAO,EAAKiS,mBAEpBlS,EAAQC,KAAOA,EAAKgG,OAAO,cAE/BxN,EAAMH,SAAS,CACX0H,YACF,WACEvH,EAAMsI,e,EAUd0S,iBAAmB,SAACC,EAAYC,GAER,OAAhBD,QAAwBvhB,IAAcuhB,GAA+B,KAAhBA,IACrDA,EAAc,IAAInmB,MAEtBmmB,EAAYE,SAASF,EAAYrB,WAAasB,GAC9C,IAAIE,EAAKH,EAAYI,UAEjBC,GADJF,EAAK,IAAItmB,KAAKsmB,IACHrmB,cACPf,EAAIonB,EAAGxB,WAAa,EACpB2B,EAAIH,EAAGtB,UAIX,OAHG9lB,GAAK,IAAGA,EAAI,IAAMA,GAClBunB,GAAK,IAAGA,EAAI,IAAKA,GACRD,EAAI,IAAMtnB,EAAI,O,EAQ9BwnB,YAAc,SAAC3P,GACX,IAAI7L,EAAK,eAELuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQC,KAAOxH,EAAMgb,iBAAiB,IAAIlmB,KAAKyS,EAAQC,MAAMqE,GAC7D7L,EAAMH,SAAS,CAAC0H,YAAS,WACrBvH,EAAMsI,e,EAQdiS,QAAU,SAAChnB,GACP,IAAMyM,EAAK,eAGPnM,EAAMN,EAAEkoB,cAAcC,aAAa,WAEnCxmB,EAAO3B,EAAEkoB,cAAcC,aAAa,YAN3B,EAOiB1b,EAAMhB,MAAlBma,GAPL,EAORD,YAPQ,EAOKC,UAElB,IADc,GACF,IAARtlB,GAAoB,OAAPA,EAAY,CACzB,IAAM2Z,EAAS,aACTgM,EAAUpiB,MAASoW,OAAOA,GAC1BmO,EAAYvkB,IAAOlC,EAAIsY,GAC7B,GAAIpW,IAAOukB,GAAWC,SAASpC,GAG3B,YADApb,GAAyB,UAAW,eAAM,kFAI9C+a,EAASC,SAAWlkB,EACpBikB,EAASE,YAAc,KACvBF,EAAStlB,GAAK,SACX,CAEH,IAAIiL,EAASvL,EAAEkoB,cAAcC,aAAa,cAC1CvC,EAASE,YAAcva,EACvBqa,EAASC,SAAWlkB,EACpBikB,EAAStlB,GAAKA,EAElBmM,EAAMH,SAAS,CACXqZ,YAtBU,KAuBVC,SAASA,IACX,WACEnZ,EAAM+R,QAAQ5a,QAAQ8a,eAAekH,O,EAO7C0C,gBAAkB,WACL,eAEHhc,SAAS,CACXqZ,aAFc,K,EAStB4C,iBAAmB,WACf,IAAI9b,EAAK,eACL8W,EAAO9W,EAAMhB,MAAMma,SACvBnZ,EAAM+R,QAAQ5a,QAAQqN,eAAe,CAAC,gBAAgBtL,MAAM,SAAA4F,GAExDgY,EAAKuC,YAAcva,EAAMua,YACT,OAAZvC,EAAKjjB,GAELmM,EAAM+b,kBAAkBjF,GAGxB9W,EAAMgc,kBAAkBlF,O,EAUpCiF,kB,uCAAoB,WAAOjF,GAAP,uBAAAvW,EAAA,6DACZP,EADY,eAEZQ,EAAO,CACP2H,SAAU2O,EAAKuC,YACf4C,SAAUnF,EAAKsC,UAGnBpZ,EAAMH,SAAS,CAACyH,aAAa,IAPb,SAQUrL,GAAWuE,GARrB,gBAQT3G,EARS,EAQTA,IAAKT,EARI,EAQJA,KAEZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAM6b,kBACN7b,EAAM+R,QAAQ5a,QAAQ+kB,cACtBlc,EAAMsI,YAENlK,GAAyB,QAAS,2BAAQvE,GAjB9B,4C,wDAqBpBmiB,kB,uCAAoB,WAAOlF,GAAP,uBAAAvW,EAAA,6DACZP,EADY,eAEZQ,EAAO,CACP3M,GAAIijB,EAAKjjB,GACTsU,SAAS2O,EAAKuC,YACd4C,SAAUnF,EAAKsC,UAGnBpZ,EAAMH,SAAS,CAACyH,aAAa,IARb,SASUpL,GAAWsE,GATrB,gBAST3G,EATS,EASTA,IAAKT,EATI,EASJA,KAEZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAM6b,kBACN7b,EAAM+R,QAAQ5a,QAAQ+kB,cACtBlc,EAAMsI,YAENlK,GAAyB,QAAS,2BAAQvE,GAlB9B,4C,wDA0BpBsiB,iB,uCAAmB,WAAO5oB,GAAP,yBAAAgN,EAAA,6DACXP,EADW,eAEXmZ,EAAWnZ,EAAMhB,MAAMma,SACvB3Y,EAAO,CACP3M,GAAIslB,EAAStlB,IAGjBmM,EAAMH,SAAS,CAACyH,aAAa,IAPd,SAQWnL,GAAWqE,GARtB,gBAQR3G,EARQ,EAQRA,IAAKT,EARG,EAQHA,KAEZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAM6b,kBACN7b,EAAM+R,QAAQ5a,QAAQ+kB,cACtBlc,EAAMsI,YAENlK,GAAyB,QAAS,2BAAQvE,GAjB/B,4C,wHA0Bf,IAAI0N,EAAUxF,KAAK/C,MAAMuI,QACzBA,EAAQC,KAAOzF,KAAK0X,mBACpB1X,KAAKlC,SAAS,CACV0H,YAEJxF,KAAK6C,eAAiB,CAClBC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEvB/C,KAAKiD,iBAAmB,CACpBD,WAAY,CAACD,KAAM,GAAIG,OAAQ,IAGnClD,KAAKuG,a,+BAIC,IAGFyB,EAHC,SACwChI,KAAK/C,MAA3Cka,EADF,EACEA,YAAaC,EADf,EACeA,SAAU7R,EADzB,EACyBA,YACvBE,EAAQzF,KAAK/C,MAAMuI,QAAnBC,KAGHuC,EADAvC,EACYpQ,IAAOoQ,GAEP,KAEhB,IAAMyR,EAAUlX,KAAK/C,MAAMia,QAC3B,OACI,cAAC,KAAD,CAAehkB,MAAM,2BAArB,SACI,0BAASiN,UAAU,cAAnB,UACI,mBACIjN,MAAM,2BACN+L,MAAM,MACN0B,SAAyB,IAAhBwW,EACTrL,OAAO,eACPlL,KAAMZ,KAAK+Z,iBACXlZ,SAAUb,KAAK8Z,gBANnB,SAOI,iDAAU9Z,KAAK6C,gBAAf,IAA+BkB,IAAK/D,KAAKgQ,QAAzC,UACI,mBAAM1M,KAAN,2BAAWC,MAAM,4BAAWvD,KAAK6C,gBAAjC,aACI,mBAAOW,UAAU,EAAMzG,MAAOqa,EAASC,cAE3C,mBAAM/T,KAAN,2BAAWC,MAAM,iCAAQW,KAAK,eAAkBlE,KAAK6C,gBAArD,IAAqEsB,aAAciT,EAASE,YAAalT,MAAO,CAAC,CAACC,UAAU,EAAMpM,QAAS,8CAAW,CAACwH,IAAK,EAAGxH,QAAS,qDAAmB,CAACqM,IAAK,GAAIrM,QAAS,sDAA9M,SACI,kBAAOsM,SAAP,CAAgBE,UAAW,GAAID,WAAS,EAACE,SAAU,CAACC,QAAS,EAAGC,QAAS,GAAIuD,YAAY,oDAGvFiP,EAAStlB,IACX,mBAAMwR,KAAN,6BAAetD,KAAKiD,kBAApB,aACI,oBACI/P,MAAM,0DACNoX,UAAWtK,KAAKoa,iBAChBtO,OAAO,eACPqB,WAAW,eAJf,SAMI,mBAAQzW,KAAK,OAAb,iDAMpB,6BACI,oBAAKqM,KAAM,GAAI5C,UAAU,UAAzB,SACI,oBAAM8H,OAAO,SAAb,SACI,mBAAM3E,KAAN,CAAWC,MAAM,4BAAjB,SACI,oBAAYxG,MAAOiL,EAAWqS,OAAO,QAAQ7Z,SAAUR,KAAK6G,uBAK5E,6BACI,qBAAK9D,KAAM,GAAX,UACI,qBACI3C,MAAO,CAACka,MAAO,OAAOrb,MAAO,MAAMC,OAAQ,OAAOqb,UAAW,OAAOC,WAAY,OAAOC,OAAQ,WADnG,SAEI,sBAAMrS,QAAS,kBAAM,EAAKqR,aAAa,IAAvC,SAA2C,cAACiB,GAAA,EAAD,CAActa,MAAO,CAACoR,MAAM,cAE3E,qBACIpR,MAAO,CAACka,MAAO,OAAOrb,MAAO,MAAMC,OAAQ,OAAOqb,UAAW,SAASC,WAAY,OAAOG,SAAU,OAAOnJ,MAAM,QADpH,SAEK/L,IAEL,qBACIrF,MAAO,CAACka,MAAO,QAAQrb,MAAO,MAAMC,OAAQ,OAAOqb,UAAW,QAAQC,WAAY,OAAOC,OAAQ,WADrG,SAEI,sBAAMrS,QAAS,kBAAM,EAAKqR,YAAY,IAAtC,SAA2C,cAACmB,GAAA,EAAD,CAAexa,MAAO,CAACoR,MAAM,mBAIpF,6BACI,oBAAKzO,KAAM,GAAX,UACqB,IAAhBwC,EAAuB,uBACxB,wBAAOzT,GAAG,YAAY0iB,OAAO,MAAMqG,YAAY,IAAIC,YAAY,IAA/D,UACI,gCACA,+BACI,oDACA,oDACA,oDACA,oDACA,oDACA,oDACA,yDAGJ,gCACC5D,oB,GA7ad1V,a,UCDZwD,G,KAAAA,YAiOQ+V,G,4MA5NX9d,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,EACbC,QAAS,CACLE,UAAW,KACXC,QAAS,O,EAOjBE,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,2BACP6S,UAAW,eAEf,CACI7S,MAAO,2BACP6S,UAAW,OAEf,CACI7S,MAAO,2BACP6S,UAAW,cAEf,CACI7S,MAAO,eACP+S,OAAQ,SAAClO,EAAMmO,GAAP,OACJ,sBAAMkC,QAAS,kBAAM,EAAK4S,aAAa9U,IAAvC,SACI,cAAC+U,GAAA,EAAD,U,EAWpB1U,S,sBAAW,oCAAA/H,EAAA,6DACHC,EAAO,CACP4G,QAAS,EAAKpI,MAAMoI,QACpBC,SAAU,EAAKrI,MAAMqI,SACrBI,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,SAGhC,EAAK7H,SAAS,CAACyH,aAAa,IARrB,SAUyBhK,GAAgBkD,GAVzC,gBAUA3G,EAVA,EAUAA,IAAKT,EAVL,EAUKA,KAAMrD,EAVX,EAUWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EACA,EAAKyG,SAAS,CAEVsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GArBvC,4C,EAyBX4O,WAAa,WAET,IAAMzI,EAAK,eACPuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQE,UAAY,KACpBF,EAAQG,QAAU,KAClB1H,EAAMH,SAAS,CACXuH,QAAS,EACTG,QAASA,IACV,WACCvH,EAAMsI,e,EAKdI,eAAiB,SAACrB,EAAUlQ,GAExB,EAAK0I,SAAS,CACVuH,QAAS,EACTC,SAAUA,IACX,WACCtF,KAAKuG,e,EAKbK,WAAa,SAACxR,GACV,EAAK0I,SAAS,CACVuH,QAASjQ,IACV,WACC4K,KAAKuG,e,EAKbM,aAAe,SAACpB,EAAMqB,GAClB,IAAM7I,EAAK,eACNuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACXuH,QAAS,EACTG,YACD,WACCvH,EAAMsI,e,EAIdyU,aAAe,SAACrO,GACZ,IAAI1O,EAAK,eAETA,EAAMH,SAAS,CAACyH,aAAa,IAC7BzO,KAAM,CACFmQ,OAAQ,MACRxQ,IAAK+E,GAAiB,gBAAgBmR,EAAIuO,YAC1ChU,aAAc,OAEdC,QAAS,CACL,eAAgB,sBAGnBhQ,MAAK,SAAUiQ,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI8B,EAAWsF,EAAIuO,YAAY,OAC3B5T,EAAO,IAAIC,KAAK,CAACH,EAAIpT,OACzB,GAAI5B,OAAOS,UAAU2U,iBACjB3U,UAAU4U,WAAWH,EAAMD,OACxB,CACH,IAAIK,EAAO7I,SAASC,cAAc,KAClC4I,EAAKjQ,KAAOrF,OAAOuV,IAAIC,gBAAgBN,GACvCI,EAAKG,SAAWR,EAChBK,EAAKI,QACL1V,OAAOuV,IAAII,gBAAgBL,EAAKjQ,UAGvCO,OAAM,SAAUoP,GACbnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7BlJ,GAAyB,QAAS,2BAAQ,yDAAY+K,O,kEAWhEpH,KAAK6F,cAEL7F,KAAKuG,a,+BAGG,IAIFyB,EAJC,SAE8DhI,KAAK/C,MAAjEkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAAYC,EAFnD,EAEmDA,QACnDE,EAAqBF,EAArBE,UAAUC,EAAWH,EAAXG,QAOf,OAJIqC,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAWrQ,IAAOsQ,IAE1B,CAAC,KAAK,MAGlB,cAAC,KAAD,CAAezS,MAAM,2BAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,4BAAjB,SACI,cAAC,GAAD,CAAaxG,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACE,cAAC8B,EAAA,EAAD,IADF,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACE,cAAC4B,GAAA,EAAD,IADF,yBAMZ,oBAAKvF,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAASyG,UAAQ,EAACmF,OAAO,MAAMxG,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EAC7FuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,yB,GApNjCpF,a,gDCHVwD,G,KAAAA,YACCmW,G,KAAAA,QA8aOC,G,4MA1aXne,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,EAEb8V,eAAe,EACf7V,QAAS,CACLE,UAAW,KACXC,QAAS,KACTuO,SAAU,O,EAOlBoH,WAAa,WACT,IAAIrd,EAAK,eACTA,EAAMsd,aAAe,CACjBrX,KAAM,OACNsX,UAAU,EACVC,OAAQriB,GACRpF,KAAM,SAAAyJ,GAAI,MAAK,CAGXie,IAAKje,EAAKie,MAEdC,SAAU,SAAAle,GAAS,IACPie,EAAiBje,EAAjBie,IAAKtkB,EAAYqG,EAAZrG,SAETA,GAAY,IAAMA,EAASC,MAE3B4G,EAAM3E,WAAW,CAAC,IAAMoiB,KAGhClb,SAjBiB,SAiBRob,GAAM,MAEiBA,EAAKne,KAAzB7F,EAFG,EAEHA,OAAQR,EAFL,EAEKA,SACD,SAAXQ,GAAgC,UAAXA,IACjB,IAAMR,EAASC,MACfgF,GAAyB,UAAW,2BAAZ,UAAuBuf,EAAKne,KAAKyG,KAAjC,iCACxBjG,EAAMsI,YAENlK,GAAyB,QAAS,2BAAV,UAAqBuf,EAAKne,KAAKyG,KAA/B,wCAAmE9M,EAASU,U,EAUxH+N,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,qBACP6S,UAAW,YAEf,CACI7S,MAAO,qBACP6S,UAAW,UAEf,CACI7S,MAAO,eACP+S,OAAQ,SAAClO,EAAMmO,GACX,MAAsB,MAAlBA,EAAOtO,OACA,qBACkB,MAAlBsO,EAAOtO,OACP,qBAEA,iBAInB,CACI1E,MAAO,eACP6S,UAAW,QAEf,CACI7S,MAAO,eACP+S,OAAQ,SAAClO,EAAMmO,GAAP,OACJ,gCACI,mBAAQxP,KAAK,UAAU0R,QAAS,kBAAM,EAAK4S,aAAa9U,IAAS2I,MAAM,SAASzb,KAAM,cAAC6nB,GAAA,EAAD,MAD1F,OAGI,mBAAQvkB,KAAK,UAAU0R,QAAS,kBAAM,EAAKyT,iBAAiB3V,IAAS2I,MAAM,SAASzb,KAAM,cAAC4b,GAAA,EAAD,MAH9F,OAKI,mBAAQtY,KAAK,SAAS0R,QAAS,kBAAM,EAAK0T,iBAAiB5V,IAAS2I,MAAM,SAASzb,KAAM,cAAC8b,GAAA,EAAD,a,EAW7G3I,S,sBAAW,oCAAA/H,EAAA,6DACHC,EAAO,CACP4G,QAAS,EAAKpI,MAAMoI,QACpBC,SAAU,EAAKrI,MAAMqI,SACrBI,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,QAC5BuO,SAAU,EAAKjX,MAAMuI,QAAQ0O,UAGjC,EAAKpW,SAAS,CAACyH,aAAa,IATrB,SAWyBlM,GAAYoF,GAXrC,gBAWA3G,EAXA,EAWAA,IAAKT,EAXL,EAWKA,KAAMrD,EAXX,EAWWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EACA,EAAKyG,SAAS,CAEVsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GAtBvC,4C,EA6BX4O,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQE,UAAY,KACpBF,EAAQG,QAAU,KAClBH,EAAQ0O,SAAW,KACnBjW,EAAMH,SAAS,CACXuH,QAAS,EACTG,QAASA,IACV,WACCvH,EAAMsI,e,EASdI,eAAiB,SAACrB,EAAUlQ,GAExB,EAAK0I,SAAS,CACVuH,QAAS,EACTC,SAAUA,IACX,WACCtF,KAAKuG,e,EAKbK,WAAa,SAACxR,GACV,EAAK0I,SAAS,CACVuH,QAASjQ,IACV,WACC4K,KAAKuG,e,EAKbM,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACXuH,QAAS,EACTG,YACD,WACCvH,EAAMsI,e,EAQdwV,qBAAuB,SAACpL,GACpB,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MACvByI,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQ0O,SAAWnX,EACnBkB,EAAMH,SAAS,CACXuH,QAAS,EACTG,a,EAORwW,mBAAqB,WACR,eAEHle,SAAS,CACXud,eAFgB,K,EASxBY,iBAAmB,WACN,eAEHne,SAAS,CACXud,eAFgB,K,EASxB/hB,W,uCAAa,WAAOmF,GAAP,mBAAAD,EAAA,6DAET,EAAKV,SAAS,CAACyH,aAAa,IAFnB,SAIiBjM,GAAWmF,GAJ5B,gBAIF3G,EAJE,EAIFA,IAAKT,EAJH,EAIGA,KAEZ,EAAKyG,SAAS,CAACyH,aAAa,IACf,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C,EAAKkK,YAELlK,GAAyB,QAAS,2BAAQvE,GAXrC,2C,wDAkBbgkB,iBAAmB,SAAC7nB,GAChB,IAAIgK,EAAK,eACT,IAAMwR,QAAQ,CACVvc,MAAO,2BACPwc,QAAQ,yCAAD,OAAazb,EAAKigB,SAAlB,8BACPtT,KAAM,WACF,IAAInC,EAAO,CAAE3M,GAAImC,EAAKnC,IACtBmM,EAAM3E,WAAWmF,O,EAS7Buc,aAAe,SAACrO,GACZ,IAAI1O,EAAK,eAETA,EAAMH,SAAS,CAACyH,aAAa,IAC7BzO,KAAM,CACFmQ,OAAQ,MACRxQ,IAAK+C,GAAqBmT,EAAI7a,GAC9BoV,aAAc,OAEdC,QAAS,CACL,eAAgB,sBAGnBhQ,MAAK,SAAUiQ,GACZ/U,QAAQC,IAAI8U,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI8B,EAAWsF,EAAIuH,SACf5M,EAAO,IAAIC,KAAK,CAACH,EAAIpT,OACzB,GAAI5B,OAAOS,UAAU2U,iBACjB3U,UAAU4U,WAAWH,EAAMD,OACxB,CACH,IAAIK,EAAO7I,SAASC,cAAc,KAClC4I,EAAKjQ,KAAOrF,OAAOuV,IAAIC,gBAAgBN,GACvCI,EAAKG,SAAWR,EAChBK,EAAKI,QACL1V,OAAOuV,IAAII,gBAAgBL,EAAKjQ,UAGvCO,OAAM,SAAUoP,GACbnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7BlJ,GAAyB,QAAS,2BAAQ,uCAAS+K,O,EAQ/DyU,iBAAmB,SAAC5nB,GAChB,IAAMgK,EAAK,eACPhG,EAAU,GACVikB,EAAa,KACG,MAAhBjoB,EAAK2D,QAGLskB,EAAa,EACbjkB,EAAO,8EAAmBhE,EAAKigB,SAAxB,sCAGPgI,EAAa,EACbjkB,EAAO,8EAAmBhE,EAAKigB,SAAxB,qCAEX,IAAMzE,QAAQ,CACVvc,MAAO,2BACPwc,QAASzX,EACT2I,KAAK,WAAD,4BAAE,kCAAApC,EAAA,6DACEC,EAAO,CAAE3M,GAAImC,EAAKnC,GAAI8F,OAAQskB,GAElCje,EAAMH,SAAS,CAACyH,aAAa,IAH3B,SAKwBhM,GAASkF,GALjC,gBAKK3G,EALL,EAKKA,IAAKT,EALV,EAKUA,KAEZ4G,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C4B,EAAMsI,YAENlK,GAAyB,QAAS,2BAAQvE,GAZ5C,2CAAF,kDAAC,M,kEAyBXkI,KAAKsb,aAELtb,KAAK6F,cAEL7F,KAAKuG,a,+BAIG,IAIFyB,EAJC,SAE6EhI,KAAK/C,MAAhFkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAAYC,EAFnD,EAEmDA,QAAS6V,EAF5D,EAE4DA,cAC5D3V,EAAqBF,EAArBE,UAAUC,EAAWH,EAAXG,QAOf,OAJIqC,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAWrQ,IAAOsQ,IAE1B,CAAC,KAAK,MAGlB,cAAC,KAAD,CAAezS,MAAM,2BAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,sBAAjB,SACI,mBAAO7M,KAAK,OAAOqG,MAAOyI,EAAQ0O,SAAU1T,SAAUR,KAAK+b,qBACpD5T,YAAY,2CAEvB,mBAAM7E,KAAN,CAAWC,MAAM,4BAAjB,SACI,cAAC,GAAD,CAAaxG,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACE,cAAC8B,EAAA,EAAD,IADF,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACE,cAAC4B,GAAA,EAAD,IADF,oBAIJ,mBAAMhF,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKic,iBAAvD,UACI,cAACE,GAAA,EAAD,IADJ,yBAMZ,oBAAKpZ,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAAS4L,OAAO,KAAKnF,UAAQ,EAACrB,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EAC5FuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,gBAG9B,mBACI1T,MAAM,2BACNyN,SAA2B,IAAlB0a,EACTza,KAAMZ,KAAKgc,mBACXnb,SAAUb,KAAKgc,mBAJnB,SAKI,eAACb,GAAD,6BAAanb,KAAKub,cAAlB,cACI,mBAAGpb,UAAU,uBAAb,SACI,oBAAMzJ,KAAK,YAEf,mBAAGyJ,UAAU,kBAAb,wGACA,mBAAGA,UAAU,kBAAb,uO,GAhaRqB,a,uCCCbwD,G,KAAAA,YA4bQoX,G,4MAvbXnf,MAAQ,CACJuI,QAAS,CACLE,UAAW,KACXC,QAAS,KACTuO,SAAU,MAGd/O,MAAO,GAEPkX,SAAU,EAEV9W,aAAa,EAEbD,SAAU,GAEV+V,eAAe,EACfiB,gBAAgB,EAChBC,aAAc,GACdC,SAAU,I,EAQdjW,S,sBAAW,oCAAA/H,EAAA,6DACHC,EAAO,CACP/H,KAAM,EACN2O,QAAS,SAAW,EAAKpI,MAAMof,SAAW,EAAI,EAAKpf,MAAMof,SACzD/W,SAAU,EAAKrI,MAAMqI,SACrBI,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,QAC5BuO,SAAU,EAAKjX,MAAMuI,QAAQ0O,UAGjC,EAAKpW,SAAS,CAACyH,aAAa,IAVrB,SAYyBtM,GAAewF,GAZxC,gBAYA3G,EAZA,EAYAA,IAAKT,EAZL,EAYKA,KAAMrD,EAZX,EAYWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EAEA,EAAKkgB,UAAUvjB,IAEf,EAAK8J,SAAS,CAACue,SAAU,SACzBhgB,GAAyB,QAAS,2BAAQvE,IApBvC,4C,EA4BXyf,UAAY,SAACvjB,GAAU,IAAD,EACM,EAAKiJ,MAAxBkI,EADa,EACbA,MAAOkX,EADM,EACNA,SAURlX,EAREpR,EAAcC,EAAKyS,MAQb,OANa,IAAjBzS,EAAKyoB,QACGzoB,EAAKyS,KAEJtB,EAAOwF,OAAO3W,EAAKyS,MAQhC4V,EADAroB,EAAKyoB,UAAYzoB,EAAK0oB,UACX,OAEA1oB,EAAKyoB,QAAU,EAG9B,EAAK3e,SAAS,CACVqH,MAAOA,EACPkX,SAAUA,K,EAKlBxV,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACXue,SAAU,EACV7W,YACD,WACCvH,EAAMsI,e,EAOdG,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQE,UAAY,KACpBF,EAAQG,QAAU,KAClBH,EAAQ0O,SAAW,KACnBjW,EAAMH,SAAS,CACXue,SAAU,EACV7W,QAASA,IACV,WACCvH,EAAMsI,e,EAQdwV,qBAAuB,SAACpL,GACpB,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MACvByI,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQ0O,SAAWnX,EACnBkB,EAAMH,SAAS,CACXue,SAAU,EACV7W,a,EAORsW,iBAAmB,SAACtqB,GAChB,IAAIyM,EAAK,eAELnM,EAAMN,EAAEkoB,cAAcC,aAAa,WACvC,IAAMlK,QAAQ,CACVvc,MAAO,2BACPwc,QAAQ,mCAAD,OAAY5d,EAAZ,8BACP8O,KAAM,WACF,IAAInC,EAAO,CAAE3M,GAAIA,GACjBmM,EAAM9E,cAAcsF,O,EAShCke,oB,uCAAsB,WAAOnrB,GAAP,6BAAAgN,EAAA,6DACdP,EADc,eAGdb,EAAO5L,EAAEkoB,cAAcC,aAAa,YACpC7nB,EAAMN,EAAEkoB,cAAcC,aAAa,WACnCiD,GAAO,EALO,SAOZ9lB,KAAMjD,IAAIuJ,GACXjG,MAAK,SAASC,GACXwlB,GAAO,KAEV5kB,OAAM,SAAS6kB,GACZD,GAAO,KAZG,WAcd,IAASA,EAdK,wBAeVne,EAAO,CACP0C,WAAY2b,SAAShrB,IAGzBmM,EAAMH,SAAS,CAACyH,aAAa,IAnBf,UAoBO7M,GAAY+F,GApBnB,QAoBR5J,EApBQ,OAsBdoJ,EAAMH,SAAS,CAACyH,aAAa,IACxBzN,EAAajD,EAAbiD,IACQ,IADKjD,EAARwC,OAEArD,EAAOuD,EAAY9D,MACpBA,KAAK0N,WAAa/D,EACvBpJ,EAAKP,KAAKspB,aAAeD,SAAShrB,GAClCyF,EAAY9D,KAAOO,EACnBsD,EAAsBtD,GACtBqI,GAAyB,UAAW,2BAAQ,yCAE5CA,GAAyB,QAAS,2BAAQvE,GAhChC,wBAmCduE,GAAyB,QAAS,2BAAQ,oGAnC5B,4C,wDA4CtBlD,c,uCAAgB,WAAOsF,GAAP,mBAAAD,EAAA,6DAEZ,EAAKV,SAAS,CAACyH,aAAa,IAFhB,SAIcpM,GAAcsF,GAJ5B,gBAIL3G,EAJK,EAILA,IAAKT,EAJA,EAIAA,KAEZ,EAAKyG,SAAS,CAACyH,aAAa,IACf,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C,EAAKkK,YAELlK,GAAyB,QAAS,2BAAQvE,GAXlC,2C,wDAkBhBkkB,mBAAqB,WACR,eAEHle,SAAS,CACXud,eAFgB,EAGhBmB,SAAU,M,EAOlBP,iBAAmB,WACN,eAEHne,SAAS,CACXud,eAFgB,K,EAWxB2B,UAAY,SAACvf,GACT,OAAO,IAAI9G,SAAQ,SAACC,EAASC,GACzB,IAAM8G,EAAS,IAAIC,WACnBD,EAAOI,cAAcN,GACrBE,EAAOE,OAAS,kBAAMjH,EAAQ+G,EAAO9I,SACrC8I,EAAOsf,QAAU,SAAAvlB,GAAK,OAAIb,EAAOa,Q,EAOzC0T,aAAe,kBAAM,EAAKtN,SAAS,CAAEwe,gBAAgB,K,EAOrDY,c,uCAAgB,WAAOzf,GAAP,SAAAe,EAAA,sDAIZ,EAAKV,SAAS,CACVye,aAAc9e,EAAKhH,KAAOgH,EAAK0f,SAC/Bb,gBAAgB,IANR,2C,wDAchB1I,aAAe,SAACgI,GACZ,IAAIY,EAAWZ,EAAKY,SACZ5kB,EAAWgkB,EAAKne,KAAhB7F,OAEO,cAAXA,GACAvF,QAAQC,IAAIspB,EAAKne,KAAMme,EAAKY,UAEjB,SAAX5kB,GACAyE,GAAyB,UAAW,2BAAZ,UAAuBuf,EAAKne,KAAKyG,KAAjC,iCACxB,EAAKqC,YACa,UAAX3O,GACPyE,GAAyB,QAAS,2BAAV,UAAqBuf,EAAKne,KAAKyG,KAA/B,yBAE5B,EAAKpG,SAAS,CAAE0e,c,EAWpBvN,aAAe,SAACxR,GAEZ,EAAKK,UAAS,SAAAb,GACV,IAAM4M,EAAQ5M,EAAMuf,SAAShH,QAAQ/X,GAE/B2f,EAAcngB,EAAMuf,SAASa,QAEnC,OADAD,EAAYE,OAAOzT,EAAO,GACnB,CACH2S,SAAUY,MAEhB,WACE/qB,QAAQC,IAAI0N,KAAK/C,MAAMuf,c,EAO/Be,aAAe,WACXlrB,QAAQC,IAAI,yC,kEAQZ0N,KAAKuG,a,+BAIC,IAIFyB,EAJC,SAEkGhI,KAAK/C,MAArGuI,EAFF,EAEEA,QAASL,EAFX,EAEWA,MAAOkX,EAFlB,EAEkBA,SAAU9W,EAF5B,EAE4BA,YAAa8V,EAFzC,EAEyCA,cAAeiB,EAFxD,EAEwDA,eAAgBC,EAFxE,EAEwEA,aAAcC,EAFtF,EAEsFA,SACtF9W,EAAsBF,EAAtBE,UAAWC,EAAWH,EAAXG,QAGZqC,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAYrQ,IAAOsQ,IAE3B,CAAC,KAAM,MAEvB,IAAMlS,EAAO8D,EAAY9D,KACnB+pB,EACF,gCACI,cAACrB,GAAA,EAAD,IACA,qBAAKhc,UAAU,kBAAf,uBAGR,OACI,cAAC,KAAD,CAAejN,MAAM,2BAArB,SACI,oCACI,mBACIA,MAAM,2BACNyN,SAA2B,IAAlB0a,EACTza,KAAMZ,KAAKgc,mBACXnb,SAAUb,KAAKgc,mBAJnB,SAKI,oBACIP,OAAQviB,GACRukB,SAAS,eACTld,OAAO,2CACPic,SAAUA,EACVkB,UAAW1d,KAAKkd,cAChB1c,SAAUR,KAAK4T,aACf+H,SAAU3b,KAAKiP,aAPnB,SAQKuN,EAAS9nB,QAAU,EAAI,KAAO8oB,MAGvC,mBAAO7c,QAAS2b,EAAgBqB,OAAQ,KAAM9c,SAAUb,KAAKoL,aAA7D,SACI,qBAAKwS,IAAI,UAAUxd,MAAO,CAAEnB,MAAO,QAAU7B,IAAKmf,MAEtD,6BACI,oBAAKxZ,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,sBAAjB,SACI,mBAAO7M,KAAK,OAAOqG,MAAOyI,EAAQ0O,SAAU1T,SAAUR,KAAK+b,qBACpD5T,YAAY,2CAEvB,mBAAM7E,KAAN,CAAWC,MAAM,4BAAjB,SACI,cAAC,GAAD,CAAaxG,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACE,cAAC8B,EAAA,EAAD,IADF,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACE,cAAC4B,GAAA,EAAD,IADF,oBAIJ,mBAAMhF,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKic,iBAAvD,UACI,cAACE,GAAA,EAAD,IADJ,4BAQI,IAAhB5W,EAAuB,uBACnB,qBAAIpF,UAAU,eAAd,UACc,SAATgF,EAAkBA,EAAM+M,KAAI,SAACje,GAAD,OACrB,qBAAI8O,KAAM,EAAG5C,UAAU,mBAAvB,UACI,sBAAKA,UAAU,QAAf,UACI,mBAAQzJ,KAAK,UAAUmY,MAAM,SAASzb,KAAM,cAAC8b,GAAA,EAAD,IAAmBuJ,UAASxkB,EAAKnC,GAAIsW,QAAS,EAAK0T,iBAAkBlf,KAAK,QAAQ1J,MAAM,iBAEhIO,EAAKA,KAAKspB,eAAiB9oB,EAAKnC,GAC5B,KAEA,mBAAQ4E,KAAK,UAAU0J,MAAO,CAACyd,WAAY,SAAUhP,MAAM,SAASzb,KAAM,cAAC0qB,GAAA,EAAD,IAAmBrF,UAASxkB,EAAKnC,GAAIisB,WAAU9pB,EAAK+pB,OAAQ5V,QAAS,EAAKuU,oBAAqB/f,KAAK,QAAQ1J,MAAM,gCAGxM,mBAAGuE,KAAK,WAAW2Q,QAAS,EAAKmV,aAAcU,IAAI,sBAAsB9d,UAAU,QAAnF,SACI,qBAAK/C,IAAKnJ,EAAK+pB,OAAQJ,IAAK3pB,EAAKigB,SAC5B/T,UAAU,uBAZwBlM,EAAKnC,OAgBxD,oBAAIiR,KAAM,EAAG5C,UAAU,mBAAvB,SACI,mBAAQzJ,KAAK,UAAUmY,MAAM,SAASzb,KAAM,cAAC8qB,GAAA,EAAD,IAAkBthB,KAAK,QAAQ1J,MAAM,uDAG5E,SAAZmpB,EACG,oBAAItZ,KAAM,EAAG5C,UAAU,mBAAvB,SACI,mBAAQzJ,KAAK,UAAU0R,QAASpI,KAAKuG,SAAUsI,MAAM,SAASzb,KAAM,cAAC+qB,GAAA,EAAD,IAAiBvhB,KAAK,QAAQ1J,MAAM,+BAG5G,oBAAI6P,KAAM,EAAG5C,UAAU,mBAAvB,SACI,mBAAQzJ,KAAK,UAAUmY,MAAM,SAASzb,KAAM,cAACya,GAAA,EAAD,IAAkBjR,KAAK,QAAQ1J,MAAM,mE,GA7ajGsO,aCCjBwD,I,YAAAA,aAyPQoZ,G,4MApPXnhB,MAAQ,CACJuI,QAAS,CACLE,UAAW,KACXC,QAAS,KACTuO,SAAU,MAGd/O,MAAO,GAEPkX,SAAU,EAEV9W,aAAa,EAEbD,SAAU,I,EAOdiB,S,sBAAW,oCAAA/H,EAAA,6DACHC,EAAO,CACP/H,KAAM,EACN2O,QAAS,SAAW,EAAKpI,MAAMof,SAAW,EAAI,EAAKpf,MAAMof,SACzD/W,SAAU,EAAKrI,MAAMqI,SACrBI,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,QAC5BuO,SAAU,EAAKjX,MAAMuI,QAAQ0O,UAGjC,EAAKpW,SAAS,CAACyH,aAAa,IAVrB,SAYyBtM,GAAewF,GAZxC,gBAYA3G,EAZA,EAYAA,IAAKT,EAZL,EAYKA,KAAMrD,EAZX,EAYWA,KAElB,EAAK8J,SAAS,CAACyH,aAAa,IACf,IAATlO,EAEA,EAAKkgB,UAAUvjB,IAEf,EAAK8J,SAAS,CAACue,SAAU,SACzBhgB,GAAyB,QAAS,2BAAQvE,IApBvC,4C,EA4BXyf,UAAY,SAACvjB,GAAU,IAAD,EACM,EAAKiJ,MAAxBkI,EADa,EACbA,MAAOkX,EADM,EACNA,SAURlX,EAREpR,EAAcC,EAAKyS,MAQb,OANa,IAAjBzS,EAAKyoB,QACGzoB,EAAKyS,KAEJtB,EAAOwF,OAAO3W,EAAKyS,MAOhC4V,EADAroB,EAAKyoB,UAAYzoB,EAAK0oB,UACX,OAEA1oB,EAAKyoB,QAAU,EAE9B,EAAK3e,SAAS,CACVqH,MAAOA,EACPkX,SAAUA,K,EAKlBxV,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACXue,SAAU,EACV7W,YACD,WACCvH,EAAMsI,e,EAOdG,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQE,UAAY,KACpBF,EAAQG,QAAU,KAClBH,EAAQ0O,SAAW,KACnBjW,EAAMH,SAAS,CACXue,SAAU,EACV7W,QAASA,IACV,WACCvH,EAAMsI,e,EAQdwV,qBAAuB,SAACpL,GACpB,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MACvByI,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQ0O,SAAWnX,EACnBkB,EAAMH,SAAS,CACXue,SAAU,EACV7W,a,EAORsW,iBAAmB,SAACtqB,GAChB,IAAIyM,EAAK,eAELnM,EAAMN,EAAEkoB,cAAcC,aAAa,WACvC,IAAMlK,QAAQ,CACVvc,MAAO,2BACPwc,QAAQ,mCAAD,OAAY5d,EAAZ,8BACP8O,KAAM,WACF,IAAInC,EAAO,CAAE3M,GAAIA,GACjBmM,EAAM9E,cAAcsF,O,EAUhCtF,c,uCAAgB,WAAOsF,GAAP,mBAAAD,EAAA,6DAEZ,EAAKV,SAAS,CAACyH,aAAa,IAFhB,SAIcpM,GAAcsF,GAJ5B,gBAIL3G,EAJK,EAILA,IAAKT,EAJA,EAIAA,KAEZ,EAAKyG,SAAS,CAACyH,aAAa,IACf,IAATlO,GACAgF,GAAyB,UAAW,2BAAQ,4BAC5C,EAAKkK,YAELlK,GAAyB,QAAS,2BAAQvE,GAXlC,2C,wHAoBZkI,KAAKuG,a,+BAIC,IAIFyB,EAJC,SAE2ChI,KAAK/C,MAA9CuI,EAFF,EAEEA,QAASL,EAFX,EAEWA,MAAOkX,EAFlB,EAEkBA,SAAU9W,EAF5B,EAE4BA,YAC5BG,EAAsBF,EAAtBE,UAAWC,EAAWH,EAAXG,QAOhB,OAJIqC,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAYrQ,IAAOsQ,IAE3B,CAAC,KAAM,MAGnB,cAAC,KAAD,CAAezS,MAAM,2BAArB,SACI,oCACI,6BACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,CAAWC,MAAM,sBAAjB,SACI,mBAAO7M,KAAK,OAAOqG,MAAOyI,EAAQ0O,SAAU1T,SAAUR,KAAK+b,qBACpD5T,YAAY,2CAEvB,mBAAM7E,KAAN,CAAWC,MAAM,4BAAjB,SACI,cAAC,GAAD,CAAaxG,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACE,cAAC8B,EAAA,EAAD,IADF,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACE,cAAC4B,GAAA,EAAD,IADF,4BAQI,IAAhB/C,EAAuB,uBACnB,qBAAIpF,UAAU,kBAAd,UACc,SAATgF,EAAkBA,EAAM+M,KAAI,SAACje,GAAD,OACrB,qBAAI8O,KAAM,EAAG5C,UAAU,mBAAvB,UACI,qBAAKA,UAAU,QAAf,SACI,mBAAQzJ,KAAK,UAAUmY,MAAM,SAASzb,KAAM,cAAC8b,GAAA,EAAD,IAAmBuJ,UAASxkB,EAAKnC,GAAIsW,QAAS,EAAK0T,iBAAkBlf,KAAK,QAAQ1J,MAAM,mBAExI,mBAAGuE,KAAK,WAAWwmB,IAAI,sBAAsB9d,UAAU,QAAvD,SACI,qBAAK/C,IAAKnJ,EAAK+pB,OAAQJ,IAAK3pB,EAAKigB,SAC5B/T,UAAU,uBANwBlM,EAAKnC,OAUxD,oBAAIiR,KAAM,EAAG5C,UAAU,mBAAvB,SACI,mBAAQzJ,KAAK,UAAUmY,MAAM,SAASzb,KAAM,cAAC8qB,GAAA,EAAD,IAAkBthB,KAAK,QAAQ1J,MAAM,uDAG5E,SAAZmpB,EACG,oBAAItZ,KAAM,EAAG5C,UAAU,mBAAvB,SACI,mBAAQzJ,KAAK,UAAU0R,QAASpI,KAAKuG,SAAUsI,MAAM,SAASzb,KAAM,cAAC+qB,GAAA,EAAD,IAAiBvhB,KAAK,QAAQ1J,MAAM,+BAG5G,oBAAI6P,KAAM,EAAG5C,UAAU,mBAAvB,SACI,mBAAQzJ,KAAK,UAAUmY,MAAM,SAASzb,KAAM,cAACya,GAAA,EAAD,IAAkBjR,KAAK,QAAQ1J,MAAM,mE,GA1O9FsO,a,6ECgjBZ6c,I,mNAvjBbphB,MAAQ,CAENqhB,kBAAkB,CAChBtc,SAAQ,EACRwH,UAAU,KACV+U,WAAW,CACTC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,QAAS,IAIbC,iBAAiB,CACf5c,SAAQ,EACRwH,UAAU,KACV+U,WAAW,CACTI,QAAS,EACTE,WAAY,IAIhBC,aAAa,CACX9c,SAAQ,EACRwH,UAAU,KACV+U,WAAW,CACTG,IAAK,EACLK,MAAO,EACPC,KAAK,CACHnG,MAAM,GACNkG,MAAM,MAKZE,SAAS,CACPjd,SAAQ,EACRwH,UAAU,KACV+U,WAAW,CACTG,IAAK,EACLK,MAAO,EACPG,MAAM,CACJrG,MAAM,GACNkG,MAAM,MAKZI,UAAU,CACR3V,UAAU,MAGZ4V,WAAW,CACTC,OAAO,CACLC,SAAS,EACTC,OAAQ,OACRC,OAAQ,CAAC,QAAS,SAClBC,gBAAiB,CACf,CACEC,SAAU,SACVC,SAAS,EACTC,YAAa,OACbC,iBAAkB,GAClBtc,MAAO,GACPiO,MAAO,CAAC,UAAW,YAErB,CACEkO,SAAU,OACVlO,MAAO,YAGXsO,KAAM,CACJf,MAAO,CACLgB,MAAO,8BAIb/d,SAAQ,EACRuc,WAAW,CACT9U,eAAe,GACfuW,aAAa,KAIjBC,YAAY,CACVje,SAAQ,EACRuc,WAAW,IAGb2B,kBAAkB,CAChBle,SAAQ,EACRme,gBAAgB,CACdjhB,OAAQ,IACRogB,SAAS,EACTc,UAAW,OACXC,YAAa,aACbC,WAAY,OACZC,UAAW,CACTC,WAAY,UACZ7F,SAAU,CACR,EACA,IAEF8F,SAAU,GAEZ/N,OAAQ,WACN,MAAO,KAGXgO,eAAe,GACfC,oBAAoB,K,EAQxBC,sB,sBAAwB,sCAAApiB,EAAA,6DAChBP,EADgB,gBAElBqgB,EAAoBrgB,EAAMhB,MAAMqhB,mBAClBtc,SAAU,EAC5B/D,EAAMH,SAAS,CAACwgB,sBAJM,SAMU1iB,GAAsB0iB,EAAkB9U,UAAWiC,OAAO,eANpE,gBAMf3T,EANe,EAMfA,IAAKT,EANU,EAMVA,KAAMrD,EANI,EAMJA,KAClBsqB,EAAkBtc,SAAU,EACf,IAAT3K,GACFinB,EAAkBC,WAAavqB,EAC/BiK,EAAMH,SAAS,CAACwgB,wBAEhBrgB,EAAMH,SAAS,CAACwgB,sBAChBjiB,GAAyB,QAAS,2BAAQvE,IAbtB,4C,EAqBxB+oB,qB,sBAAuB,sCAAAriB,EAAA,6DACfP,EADe,gBAEjB2gB,EAAmB3gB,EAAMhB,MAAM2hB,kBAClB5c,SAAU,EAC3B/D,EAAMH,SAAS,CAAC8gB,qBAJK,SAMW/iB,GAAqB+iB,EAAiBpV,UAAWiC,OAAO,eANnE,gBAMd3T,EANc,EAMdA,IAAKT,EANS,EAMTA,KAAMrD,EANG,EAMHA,KAClB4qB,EAAiB5c,SAAU,EACd,IAAT3K,GACFunB,EAAiBL,WAAavqB,EAC9BiK,EAAMH,SAAS,CAAC8gB,uBAEhB3gB,EAAMH,SAAS,CAAC8gB,qBAChBviB,GAAyB,QAAS,2BAAQvE,IAbvB,4C,EAqBvBgpB,iB,sBAAkB,gDAAAtiB,EAAA,6DACVP,EADU,gBAEZ6gB,EAAe7gB,EAAMhB,MAAM6hB,cAClB9c,SAAU,EACvB/D,EAAMH,SAAS,CAACghB,iBAJA,SAMgBpjB,GAAiBojB,EAAatV,UAAWiC,OAAO,eANhE,OAQhB,GARgB,SAMT3T,EANS,EAMTA,IAAKT,EANI,EAMJA,KAAMrD,EANF,EAMEA,KAClB8qB,EAAa9c,SAAU,EACV,IAAT3K,EAAY,CAOd,IAAQlE,KANR2rB,EAAaP,WAAWG,IAAM1qB,EAAK0qB,IACnCI,EAAaP,WAAWQ,MAAQ/qB,EAAK+qB,MAC/BC,EAAOhrB,EAAKgrB,KACdD,EAAQ,GACRlG,EAAQ,GAEGmG,EACbnG,EAAM7jB,KAAK7B,GACX4rB,EAAM/pB,KAAKgqB,EAAK7rB,IAEZb,EAAM,CAACumB,MAAMA,EAAMkG,MAAMA,GAC/BD,EAAaP,WAAWS,KAAO1sB,EAC/B2L,EAAMH,SAAS,CAACghB,sBAEhB7gB,EAAMH,SAAS,CAACghB,iBAChBziB,GAAyB,QAAS,2BAAQvE,GAxB5B,4C,EAgClBipB,a,sBAAe,gDAAAviB,EAAA,6DACPP,EADO,gBAETghB,EAAWhhB,EAAMhB,MAAMgiB,UAClBjd,SAAU,EACnB/D,EAAMH,SAAS,CAACmhB,aAJH,SAMmBtjB,GAAasjB,EAASzV,UAAWiC,OAAO,eAN3D,OAQb,GARa,SAMN3T,EANM,EAMNA,IAAKT,EANC,EAMDA,KAAMrD,EANL,EAMKA,KAClBirB,EAASjd,SAAU,EACN,IAAT3K,EAAY,CAOd,IAAQlE,KANR8rB,EAASV,WAAWG,IAAM1qB,EAAK0qB,IAC/BO,EAASV,WAAWQ,MAAQ/qB,EAAK+qB,MAC3BG,EAAQlrB,EAAKkrB,MACfH,EAAQ,GACRlG,EAAQ,GAEGqG,EACbrG,EAAM7jB,KAAK7B,GACX4rB,EAAM/pB,KAAKkqB,EAAM/rB,IAEb2jB,EAAO,CAAC+B,MAAMA,EAAMkG,MAAMA,GAChCE,EAASV,WAAWW,MAAQpI,EAC5B7Y,EAAMH,SAAS,CAACmhB,kBAEhBhhB,EAAMH,SAAS,CAACmhB,aAChB5iB,GAAyB,QAAS,2BAAQvE,GAxB/B,4C,EAgCfkpB,kB,sBAAoB,8CAAAxiB,EAAA,6DACZP,EADY,iBAEYA,EAAMhB,MAA/BgjB,EAFa,EAEbA,YAAYd,EAFC,EAEDA,UACjBc,EAAYje,SAAU,EACtB/D,EAAMH,SAAS,CAACmiB,gBAJE,SAMcnkB,GAAkBqjB,EAAU3V,UAAWiC,OAAO,eAN5D,OAQlB,GARkB,SAMX3T,EANW,EAMXA,IAAKT,EANM,EAMNA,KAAMrD,EANA,EAMAA,KAClBisB,EAAYje,SAAU,EACT,IAAT3K,EAAY,CAEd,IADI4pB,EAAQ,GACHvuB,EAAI,EAAGA,EAAI,GAAKA,EAAIsB,EAAKU,OAAQhC,IACxCuuB,EAAMjsB,KAAK,CAAC,MAAStC,EAAE,EAAG,KAAOsB,EAAKtB,GAAGwuB,aAAahW,IAAI,MAAQlX,EAAKtB,GAAG+W,iBAE5EwW,EAAY1B,WAAa0C,EACzBhjB,EAAMH,SAAS,CAACmiB,qBAEhBhiB,EAAMH,SAAS,CAACmiB,gBAChB5jB,GAAyB,QAAS,2BAAQvE,GAjB1B,4C,EAyBpBqpB,oB,sBAAsB,kDAAA3iB,EAAA,6DACdP,EADc,iBAESA,EAAMhB,MAA9BmiB,EAFe,EAEfA,WAAWD,EAFI,EAEJA,UAChBC,EAAWpd,SAAU,EACrB/D,EAAMH,SAAS,CAACshB,eAJI,SAMYrjB,GAAoBojB,EAAU3V,UAAWiC,OAAO,eAN5D,OAQpB,GARoB,SAMb3T,EANa,EAMbA,IAAKT,EANQ,EAMRA,KAAMrD,EANE,EAMFA,KAClBorB,EAAWpd,SAAU,EACR,IAAT3K,EAAY,CAGd,IAFIoS,EAAiB,GACjBuW,EAAe,GACVttB,EAAI,EAAGA,EAAIsB,EAAKU,OAAQhC,IAC3BuB,EAAOD,EAAKtB,GAEhB+W,EAAezU,KAAK,CAACosB,KAAKntB,EAAKuV,UAAUuV,MAAM9qB,EAAKwV,iBAEpDuW,EAAahrB,KAAK,CAACosB,KAAKntB,EAAKuV,UAAUzM,MAAM9I,EAAKyV,UAAUhT,KAAK,iBAEjEspB,EAAahrB,KAAK,CAACosB,KAAKntB,EAAKuV,UAAUzM,MAAM9I,EAAK0V,YAAYjT,KAAK,iBAErE0oB,EAAWb,WAAa,CAAC9U,eAAeA,EAAeuW,aAAaA,GACpE/hB,EAAMH,SAAS,CAACshB,oBAEhBnhB,EAAMH,SAAS,CAACshB,eAChB/iB,GAAyB,QAAS,2BAAQvE,GAxBxB,4C,EAgCtBupB,sB,sBAAuB,sCAAA7iB,EAAA,6DACfP,EADe,gBAEjBiiB,EAAoBjiB,EAAMhB,MAAMijB,mBAClBle,SAAU,EAC5B/D,EAAMH,SAAS,CAACoiB,sBAJK,SAMWzkB,KANX,gBAMd3D,EANc,EAMdA,IAAKT,EANS,EAMTA,KAAMrD,EANG,EAMHA,KAClBksB,EAAkBle,SAAU,EACf,IAAT3K,GACF6oB,EAAkBQ,eAAiB1sB,EAAKstB,KACxCpB,EAAkBS,oBAAsB3sB,EAAKutB,UAC7CtjB,EAAMH,SAAS,CAACoiB,wBAEhBjiB,EAAMH,SAAS,CAACoiB,sBAChB7jB,GAAyB,QAAS,2BAAQvE,IAdvB,4C,EAuBvBwT,gBAAkB,SAAC7F,EAAK+b,GACtB,IAAMvjB,EAAK,eACPwjB,EAASxjB,EAAMhB,MAAMukB,GACrB/b,IAGJgc,EAAOjY,UAAY/D,EACnBxH,EAAMH,SAAN,gBACG0jB,EAAQC,IACT,WACAxjB,EAAMyjB,sBAAsBF,Q,EAIhCE,sBAAwB,SAAChrB,GACvB,OAAQA,GACN,IAAK,oBACH,EAAKkqB,wBACL,MACF,IAAK,mBACH,EAAKC,uBACL,MACF,IAAK,eACH,EAAKC,mBACL,MACF,IAAK,WACH,EAAKC,eACL,MACF,IAAK,YACH,EAAKC,oBACL,EAAKG,wB,EAaXQ,sBAAwB,SAAC9X,EAAO7V,GAC9B,IAKI4tB,EAAQC,EALN/C,EAAe,EAAK7hB,MAAM6hB,aAC5Bvb,EAAQ,4BAKZ,OAJIub,GAAcA,EAAaP,YAAYO,EAAaP,WAAWS,MAAMF,EAAaP,WAAWS,KAAKnG,OAAOiG,EAAaP,WAAWS,KAAKnG,MAAMhP,KAC9ItG,EAAQub,EAAaP,WAAWS,KAAKnG,MAAMhP,GAAO,mCAG7CtG,EAAMoH,OACkB,QAAtBiX,EAAS5tB,EAAK,UAA2B,IAAX4tB,GAEO,QAA/BC,EAAcD,EAAO5tB,YAAkC,IAAhB6tB,OADxC,EAGAA,EAAYtI,I,EAU5BuI,kBAAoB,SAACjY,EAAM7V,GACzB,IAKI4tB,EAAQC,EALN5C,EAAW,EAAKhiB,MAAMgiB,SACxB1b,EAAQ,4BAKZ,OAJI0b,GAAUA,EAASV,YAAYU,EAASV,WAAWW,OAAOD,EAASV,WAAWW,MAAMrG,OAAOoG,EAASV,WAAWW,MAAMrG,MAAMhP,KAC7HtG,EAAQ0b,EAASV,WAAWW,MAAMrG,MAAMhP,GAAO,mCAG1CtG,EAAMoH,OACc,QAAtBiX,EAAS5tB,EAAK,UAA2B,IAAX4tB,GAEO,QAA/BC,EAAcD,EAAO5tB,YAAkC,IAAhB6tB,OADxC,EAGAA,EAAYtI,I,kEAStB,IAAMtb,EAAO+B,KACT+hB,EAAY1sB,MAFE,EAGyD4I,EAAMhB,MAA5EqhB,EAHa,EAGbA,kBAAkBM,EAHL,EAGKA,iBAAiBE,EAHtB,EAGsBA,aAAaG,EAHnC,EAGmCA,SAASE,EAH5C,EAG4CA,UAC9Db,EAAkB9U,UAAUuY,EAC5BnD,EAAiBpV,UAAUuY,EAC3BjD,EAAatV,UAAUuY,EACvB9C,EAASzV,UAAUuY,EACnB5C,EAAU3V,UAAUuY,EACpB9jB,EAAMH,SAAS,CACbwgB,oBACAM,mBACAE,eACAG,WACAE,cACA,WACAlhB,EAAM2iB,wBACN3iB,EAAM4iB,uBACN5iB,EAAM6iB,mBACN7iB,EAAM8iB,eACN9iB,EAAM+iB,oBACN/iB,EAAMkjB,sBACNljB,EAAMojB,6B,+BAIA,IAAD,SAC+GrhB,KAAK/C,MAApHqhB,EADA,EACAA,kBAAkBM,EADlB,EACkBA,iBAAiBE,EADnC,EACmCA,aAAaG,EADhD,EACgDA,SAASE,EADzD,EACyDA,UAAUc,EADnE,EACmEA,YAAYb,EAD/E,EAC+EA,WAAWc,EAD1F,EAC0FA,kBACjG,OACE,cAAC,KAAD,CAAehtB,MAAM,eAArB,SACE,0BAASiN,UAAU,mBAAnB,UACE,qBAAK8L,OAAQ,CAAC,GAAI,IAAlB,UACE,oBAAKlJ,KAAM,EAAX,SAEIub,EAAkBtc,QACd,6BAAM,oBAAUggB,QAAM,MAEtB,+BACE,oBAAW9uB,MAAO,sBAAKiN,UAAU,iBAAf,qCAAoC,oBAAYkD,UAAU,EAAOlO,aAAcI,EAAeiL,SAAU,SAAChP,GAAD,OAAK,EAAK8Z,gBAAgB9Z,EAAE,sBAAuB6oB,OAAO,QAAQla,UAAU,cAAcpD,MAAOuhB,EAAkB9U,UAAWiC,OAAO,0BAAoB1O,MAAQuhB,EAAkBC,YAAcD,EAAkBC,WAAWI,QAASL,EAAkBC,WAAWI,QAAQ,EAAGsD,OAAQ,WACjZ,sBAAK9hB,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,sBAAMA,UAAU,WAAhB,sCAEIme,EAAkBC,YAAeD,EAAkBC,WAAWC,IAE5D,gCACGF,EAAkBC,WAAWC,IAAI,IAClC,qBAAKpe,MAAO,CAACnB,MAAM,MAAMC,OAAO,MAAMgjB,eAAgB,QAAQ7hB,gBAAgB,QAAD,OAAgC,mBAAmBie,EAAkBC,WAAWC,IAAI,EAAE,eAAe,kBAArG,YAH7E,OAOV,sBAAKre,UAAU,WAAf,UACE,sBAAMA,UAAU,WAAhB,sCAEIme,EAAkBC,YAAeD,EAAkBC,WAAWE,IAE5D,gCACGH,EAAkBC,WAAWE,IAAI,IAClC,qBAAKre,MAAO,CAACnB,MAAM,MAAMC,OAAO,MAAMgjB,eAAgB,QAAQ7hB,gBAAgB,QAAD,OAAgC,mBAAmBie,EAAkBC,WAAWE,IAAI,EAAE,eAAe,kBAArG,YAH7E,UAQZ,oBAASte,UAAU,kBACnB,qFACcme,EAAkBC,YAAcD,EAAkBC,WAAWG,IAAKxqB,EAAYoqB,EAAkBC,WAAWG,IAAI,GAAG,YAK1I,oBAAK3b,KAAM,EAAX,SAEI6b,EAAiB5c,QACb,6BAAM,oBAAUggB,QAAM,MAEtB,+BACE,oBAAW9uB,MAAO,sBAAKiN,UAAU,iBAAf,+BAAmC,oBAAYkD,UAAU,EAAOlO,aAAcI,EAAeiL,SAAU,SAAChP,GAAD,OAAK,EAAK8Z,gBAAgB9Z,EAAE,qBAAsB6oB,OAAO,QAAQla,UAAU,cAAcpD,MAAO6hB,EAAiBpV,UAAWiC,OAAO,0BAAoB0W,WAAY,CAAE3Q,OAASoN,EAAiBL,YAAcK,EAAiBL,WAAWM,WAAYD,EAAiBL,WAAWM,WAAW,IAAI,GAAI,UAAU,WAAa9hB,MAAQ6hB,EAAiBL,YAAcK,EAAiBL,WAAWM,WAAmD,IAAvCD,EAAiBL,WAAWM,WAAe,IAAKuD,UAAW,EAAGC,OAAO,MACxkB,cAAC,KAAD,CAAUnjB,OAAQ,GAAIogB,SAAS,EAAMgD,QAAU1D,EAAiBL,YAAcK,EAAiBL,WAAWM,WAAYD,EAAiBL,WAAWM,WAAW,EAAG0D,cAAe,GAAK/Q,MAAO,CAAC,UAAU,aACtM,oBAASrR,UAAU,kBACnB,+EACaye,EAAiBL,YAAcK,EAAiBL,WAAWI,QAASC,EAAiBL,WAAWI,QAAQ,YAK/H,oBAAK5b,KAAM,EAAX,SAEI+b,EAAa9c,QACT,6BAAM,oBAAUggB,QAAM,MAEtB,+BACE,oBAAW9uB,MAAO,sBAAKiN,UAAU,iBAAf,+BAAmC,oBAAYkD,UAAU,EAAOlO,aAAcI,EAAeiL,SAAU,SAAChP,GAAD,OAAK,EAAK8Z,gBAAgB9Z,EAAE,iBAAkB6oB,OAAO,QAAQla,UAAU,cAAcpD,MAAO+hB,EAAatV,UAAWiC,OAAO,0BAAoB1O,MAAQ+hB,EAAaP,YAAcO,EAAaP,WAAWQ,MAAOD,EAAaP,WAAWQ,MAAM,EAAGsD,OAAO,WAClX,cAAC,KAAD,CAAUnjB,OAAQ,GAAIogB,SAAS,EAAMtrB,KAAM8qB,EAAaP,WAAWS,KAAKD,MAAOyD,QAAQ,EAAMC,QAAS,CAACC,cAAc1iB,KAAK2hB,uBAAwBgB,UAAW,CAAChjB,KAAM,WAAYijB,KAAM,CAACpR,MAAM,aAC7L,oBAASrR,UAAU,kBACnB,qFACc2e,EAAaP,YAAcO,EAAaP,WAAWG,IAAKI,EAAaP,WAAWG,IAAI,YAK5G,oBAAK3b,KAAM,EAAX,SAEIkc,EAASjd,QACL,6BAAM,oBAAUggB,QAAM,MAEtB,+BACE,oBAAW9uB,MAAO,sBAAKiN,UAAU,iBAAf,+BAAmC,oBAAYkD,UAAU,EAAOlO,aAAcI,EAAeiL,SAAU,SAAChP,GAAD,OAAK,EAAK8Z,gBAAgB9Z,EAAE,aAAc6oB,OAAO,QAAQla,UAAU,cAAcpD,MAAOkiB,EAASzV,UAAWiC,OAAO,0BAAoB1O,MAAQkiB,EAASV,YAAcU,EAASV,WAAWQ,MAAOE,EAASV,WAAWQ,MAAM,EAAGsD,OAAO,WAC9V,cAAC,KAAD,CAAYnjB,OAAQ,GAAIogB,SAAS,EAAMtrB,KAAMirB,EAASV,WAAWW,MAAMH,MAAO0D,QAAS,CAACC,cAAc1iB,KAAK8hB,qBAC3G,oBAAS3hB,UAAU,kBACnB,yEACY8e,EAASV,YAAcU,EAASV,WAAWG,IAAKO,EAASV,WAAWG,IAAI,eAMhG,oBAAKzS,OAAQ,CAAC,GAAI,IAAlB,SACE,oBAAKlJ,KAAM,GAAX,SACE,oBAAM7P,MAAM,2BAAOmQ,UAAU,EAAOwf,MAAO,oBAAYxf,UAAU,EAAOlO,aAAcI,EAAeiL,SAAU,SAAChP,GAAD,OAAK,EAAK8Z,gBAAgB9Z,EAAE,cAAe6oB,OAAO,QAAQla,UAAU,cAAcpD,MAAOoiB,EAAU3V,UAAWiC,OAAO,uBAApO,SACE,qBAAKQ,OAAQ,GAAI7L,MAAO,CAAC0iB,UAAU,QAAnC,UACE,oBAAK/f,KAAM,GAAX,SAEIqc,EAAWpd,QACT,oBAAUggB,QAAM,IAEhB,cAAC,KAAD,6BAAc5C,EAAWC,QAAzB,IAAiCrrB,KAAM,CAACorB,EAAWb,WAAWyB,aAAcZ,EAAWb,WAAW9U,qBAGxG,oBAAK1G,KAAM,EAAX,SAEIkd,EAAYje,QACR,oBAAUggB,QAAM,IAEhB,oBACI9V,OAAQ,qBAAK9L,MAAO,CAAC2iB,WAAW,QAAxB,kDACRxuB,OAAO,EACPkU,WAAYwX,EAAY1B,WACxByE,WAAY,SAAA/uB,GAAI,OACZ,oBAAMqP,KAAN,WACGrP,EAAK4V,MADR,SACgB5V,EAAKiQ,KAAK,uBAAM9D,MAAO,CAACka,MAAM,SAApB,iBAAgCpmB,EAAYD,EAAK8qB,MAAM,uBAUzG,qBAAK9S,OAAQ,CAAC,GAAI,IAAlB,UACE,oBAAKlJ,KAAM,GAAX,SAEImd,EAAkBle,QAChB,6BAAM,oBAAUggB,QAAM,MAEtB,oBAAM9uB,MAAM,2BAAOmQ,UAAU,EAA7B,SACE,cAAC,KAAD,CAAMnE,OAAQ,IAAKogB,SAAS,EAAMC,OAAO,OAAOC,OAAO,QAAQI,YAAY,OAAOqD,OAAQ,GAAK1f,MAAO,CAAEL,QAAS,IAAMlP,KAAMksB,EAAkBQ,qBAIvJ,oBAAK3d,KAAM,EAAX,SAEImd,EAAkBle,QAChB,6BAAM,oBAAUggB,QAAM,MAEtB,oBAAM9uB,MAAM,iCAAQmQ,UAAU,EAA9B,SACE,cAAC,KAAD,6BAAe6c,EAAkBC,iBAAjC,IAAkDnsB,KAAMksB,EAAkBS,uC,GA7iB1Enf,cCFbwD,G,KAAAA,YAoPQke,G,4MAhPXjmB,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,EACbC,QAAS,CACLE,UAAW,KACXC,QAAS,O,EAOjBE,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,2BACP6S,UAAW,YACXC,MAAM,UAEV,CACI9S,MAAO,eACP6S,UAAW,YACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIjD,aAE3C,CACIxW,MAAO,eACP6S,UAAW,cACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIhD,eAE3C,CACIzW,MAAO,2BACP6S,UAAW,iBACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIlD,oB,EASnDlD,S,sBAAW,sCAAA/H,EAAA,6DACHP,EADG,eAEHQ,EAAO,CACPiH,UAAWzH,EAAMhB,MAAMuI,QAAQE,UAC/BC,QAAS1H,EAAMhB,MAAMuI,QAAQG,QAC7BN,QAAS,EAAKpI,MAAMoI,QACpBC,SAAU,EAAKrI,MAAMqI,UAGzBrH,EAAMH,SAAS,CAACyH,aAAa,IATtB,SAWyBtK,GAAuBwD,GAXhD,gBAWA3G,EAXA,EAWAA,IAAKT,EAXL,EAWKA,KAAMrD,EAXX,EAWWA,KAElBiK,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,EACA4G,EAAMH,SAAS,CAEXsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GAtBvC,4C,EA0BX4O,WAAa,WAET,IAAIzI,EAAK,eACLuH,EAAUvH,EAAMhB,MAAMuI,QAC1BA,EAAQE,UAAY,KACpBF,EAAQG,QAAU,KAClB1H,EAAMH,SAAS,CACXuH,QAAS,EACTG,QAASA,IACV,WACCvH,EAAMsI,e,EAKdI,eAAiB,SAACrB,EAAUlQ,GACxB,IAAI6I,EAAK,eAETA,EAAMH,SAAS,CACXuH,QAAS,EACTC,SAAUA,IACX,WACCrH,EAAMsI,e,EAKdK,WAAa,SAACxR,GACV,IAAI6I,EAAK,eACTA,EAAMH,SAAS,CACXuH,QAASjQ,IACV,WACC6I,EAAMsI,e,EAKdM,aAAe,SAACpB,EAAMqB,GAClB,IAAI7I,EAAK,eACJuH,EAAWvH,EAAMhB,MAAjBuI,QAEiB,KAAlBsB,EAAW,IAA+B,KAAlBA,EAAW,IACnCtB,EAAQE,UAAYoB,EAAW,GAC/BtB,EAAQG,QAAUmB,EAAW,KAE7BtB,EAAQE,UAAY,KACpBF,EAAQG,QAAU,MAEtB1H,EAAMH,SAAS,CACXuH,QAAS,EACTG,YACD,WACCvH,EAAMsI,e,EAOdS,YAAc,WACV,IAAI/I,EAAK,eAETA,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI9G,EAAO,CACPiH,UAAW,EAAKzI,MAAMuI,QAAQE,UAC9BC,QAAS,EAAK1I,MAAMuI,QAAQG,SAEhC7O,KAAM,CACFmQ,OAAQ,MACRxQ,IAAKyE,GACLnE,OAAQ0H,EACRyI,aAAc,OAEdC,QAAS,CACL,eAAgB,sBAGnBhQ,MAAK,SAAUiQ,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI8B,EAAW,wDACXC,EAAO,IAAIC,KAAK,CAACH,EAAIpT,MAAO,CAAC0C,KAAM,uBACvC,GAAItE,OAAOS,UAAU2U,iBACjB3U,UAAU4U,WAAWH,EAAMD,OACxB,CACH,IAAIK,EAAO7I,SAASC,cAAc,KAClC4I,EAAKjQ,KAAOrF,OAAOuV,IAAIC,gBAAgBN,GACvCI,EAAKG,SAAWR,EAChBK,EAAKI,QACL1V,OAAOuV,IAAII,gBAAgBL,EAAKjQ,UAGvCO,OAAM,SAAUoP,GACb/U,QAAQC,IAAI8U,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7BlJ,GAAyB,QAAS,2BAAQ,gF,kEAUlD2D,KAAK6F,cAEL7F,KAAKuG,a,+BAIC,IAIFyB,EAJC,SAE+DhI,KAAK/C,MAAlEkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAAaC,EAFpD,EAEoDA,QACpDE,EAAsBF,EAAtBE,UAAWC,EAAWH,EAAXG,QAOhB,OAJIqC,EADc,OAAdtC,GAAkC,OAAZC,EACV,CAACtQ,IAAOqQ,GAAYrQ,IAAOsQ,IAE3B,CAAC,KAAM,MAGnB,cAAC,KAAD,CAAezS,MAAM,2BAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,qBAAM8H,OAAO,SAAb,UACI,mBAAM3E,KAAN,UACI,cAAC,GAAD,CAAavG,MAAOiL,EAAW7S,aAAcA,EAAcqL,SAAUR,KAAK6G,iBAE9E,mBAAMvD,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKuG,SAAvD,UACI,cAAC8B,EAAA,EAAD,IADJ,oBAIJ,mBAAM/E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAK0G,WAAvD,UACI,cAAC4B,GAAA,EAAD,IADJ,oBAIJ,mBAAMhF,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKgH,YAAvD,UACI,cAACuB,GAAA,EAAD,IADJ,yBAMZ,oBAAKxF,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAASyG,UAAQ,EAACmF,OAAO,YAAYxG,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EACnGuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,yB,GAxOpBpF,aCiLf2hB,G,4MAjLXlmB,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,G,EAMjBM,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,2BACP6S,UAAW,YACXC,MAAM,UAEV,CACI9S,MAAO,eACP6S,UAAW,YACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIjD,aAE3C,CACIxW,MAAO,eACP6S,UAAW,cACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIhD,eAE3C,CACIzW,MAAO,2BACP6S,UAAW,iBACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIlD,oB,EASnDlD,S,sBAAW,sCAAA/H,EAAA,6DACHP,EADG,eAEHQ,EAAO,CACP4G,QAAS,EAAKpI,MAAMoI,QACpBC,SAAU,EAAKrI,MAAMqI,UAGzBrH,EAAMH,SAAS,CAACyH,aAAa,IAPtB,SASyBpK,GAAyBsD,GATlD,gBASA3G,EATA,EASAA,IAAKT,EATL,EASKA,KAAMrD,EATX,EASWA,KAElBiK,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,EACA4G,EAAMH,SAAS,CAEXsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GApBvC,4C,EA0BX6O,eAAiB,SAACrB,EAAUlQ,GACxB,IAAI6I,EAAK,eAETA,EAAMH,SAAS,CACXuH,QAAS,EACTC,SAAUA,IACX,WACCrH,EAAMsI,e,EAKdK,WAAa,SAACxR,GACV,IAAI6I,EAAK,eACTA,EAAMH,SAAS,CACXuH,QAASjQ,IACV,WACC6I,EAAMsI,e,EAOdS,YAAc,WACV,IAAI/I,EAAK,eAETA,EAAMH,SAAS,CAACyH,aAAa,IAC7BzO,KAAM,CACFmQ,OAAQ,MACRxQ,IAAK2E,GAEL8L,aAAc,OAEdC,QAAS,CACL,eAAgB,sBAGnBhQ,MAAK,SAAUiQ,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI8B,EAAW,wDACXC,EAAO,IAAIC,KAAK,CAACH,EAAIpT,MAAO,CAAC0C,KAAM,uBACvC,GAAItE,OAAOS,UAAU2U,iBACjB3U,UAAU4U,WAAWH,EAAMD,OACxB,CACH,IAAIK,EAAO7I,SAASC,cAAc,KAClC4I,EAAKjQ,KAAOrF,OAAOuV,IAAIC,gBAAgBN,GACvCI,EAAKG,SAAWR,EAChBK,EAAKI,QACL1V,OAAOuV,IAAII,gBAAgBL,EAAKjQ,UAGvCO,OAAM,SAAUoP,GACb/U,QAAQC,IAAI8U,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7BlJ,GAAyB,QAAS,2BAAQ,gF,kEAUlD2D,KAAK6F,cAEL7F,KAAKuG,a,+BAIC,IAAD,SAEsDvG,KAAK/C,MAAzDkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAC5C,OACI,cAAC,KAAD,CAAerS,MAAM,2BAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,oBAAM8H,OAAO,SAAb,SACI,mBAAM3E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKgH,YAAvD,UACI,cAACuB,GAAA,EAAD,IADJ,wBAMZ,oBAAKxF,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAAS4L,OAAO,YAAYnF,UAAQ,EAACrB,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EACnGuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,yB,GAzKlBpF,aCmLjB4hB,G,4MAjLXnmB,MAAQ,CAEJkI,MAAO,GAEPC,UAAW,EAEXC,QAAS,EAETC,SAAU,GAEVC,aAAa,G,EAMjBM,YAAc,WACV,EAAKC,QAAU,CACX,CACI5S,MAAO,2BACP6S,UAAW,YACXC,MAAM,UAEV,CACI9S,MAAO,eACP6S,UAAW,YACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIjD,aAE3C,CACIxW,MAAO,eACP6S,UAAW,cACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIhD,eAE3C,CACIzW,MAAO,2BACP6S,UAAW,iBACXC,MAAM,QACNC,OAAO,SAAClJ,EAAM4P,GAAP,OAAgBzY,EAAYyY,EAAIlD,oB,EASnDlD,S,sBAAW,sCAAA/H,EAAA,6DACHP,EADG,eAEHQ,EAAO,CACP4G,QAAS,EAAKpI,MAAMoI,QACpBC,SAAU,EAAKrI,MAAMqI,UAGzBrH,EAAMH,SAAS,CAACyH,aAAa,IAPtB,SASyBlK,GAAwBoD,GATjD,gBASA3G,EATA,EASAA,IAAKT,EATL,EASKA,KAAMrD,EATX,EASWA,KAElBiK,EAAMH,SAAS,CAACyH,aAAa,IAChB,IAATlO,EACA4G,EAAMH,SAAS,CAEXsH,UAAWpR,EAAKwS,QAEhBrB,MAAOnR,EAAKyS,OAGhBpK,GAAyB,QAAS,2BAAQvE,GApBvC,4C,EA0BX6O,eAAiB,SAACrB,EAAUlQ,GACxB,IAAI6I,EAAK,eAETA,EAAMH,SAAS,CACXuH,QAAS,EACTC,SAAUA,IACX,WACCrH,EAAMsI,e,EAKdK,WAAa,SAACxR,GACV,IAAI6I,EAAK,eACTA,EAAMH,SAAS,CACXuH,QAASjQ,IACV,WACC6I,EAAMsI,e,EAOdS,YAAc,WACV,IAAI/I,EAAK,eAETA,EAAMH,SAAS,CAACyH,aAAa,IAC7BzO,KAAM,CACFmQ,OAAQ,MACRxQ,IAAK6E,GAEL4L,aAAc,OAEdC,QAAS,CACL,eAAgB,sBAGnBhQ,MAAK,SAAUiQ,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7B,IAAI8B,EAAW,wDACXC,EAAO,IAAIC,KAAK,CAACH,EAAIpT,MAAO,CAAC0C,KAAM,uBACvC,GAAItE,OAAOS,UAAU2U,iBACjB3U,UAAU4U,WAAWH,EAAMD,OACxB,CACH,IAAIK,EAAO7I,SAASC,cAAc,KAClC4I,EAAKjQ,KAAOrF,OAAOuV,IAAIC,gBAAgBN,GACvCI,EAAKG,SAAWR,EAChBK,EAAKI,QACL1V,OAAOuV,IAAII,gBAAgBL,EAAKjQ,UAGvCO,OAAM,SAAUoP,GACb/U,QAAQC,IAAI8U,GACZnJ,EAAMH,SAAS,CAACyH,aAAa,IAC7BlJ,GAAyB,QAAS,2BAAQ,gF,kEAUlD2D,KAAK6F,cAEL7F,KAAKuG,a,+BAIC,IAAD,SAEsDvG,KAAK/C,MAAzDkI,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,SAAUC,EAFvC,EAEuCA,YAC5C,OACI,cAAC,KAAD,CAAerS,MAAM,2BAArB,SACI,oCACI,oBAAK6P,KAAM,GAAI5C,UAAU,UAAzB,SACI,oBAAM8H,OAAO,SAAb,SACI,mBAAM3E,KAAN,UACI,oBAAQ5M,KAAK,UAAUmO,SAAS,SAASuD,QAASpI,KAAKgH,YAAvD,UACI,cAACuB,GAAA,EAAD,IADJ,wBAMZ,oBAAKxF,KAAM,GAAI5C,UAAU,YAAzB,SACI,oBAAOvD,KAAK,SAASyG,UAAQ,EAACmF,OAAO,YAAYxG,QAASuD,EAAaO,QAAS9F,KAAK8F,QAAS2C,WAAYtD,EACnGuD,WAAY,CACRtT,QAAQiQ,EACRsD,UAAW,6CAAYtD,EAAZ,wBAAyBD,EAAzB,WACXE,SAAUA,EAAUsD,iBAAiB,EAAMC,MAAOzD,EAAW0D,iBAAiB,EAC9EC,iBAAkB,SAAC3T,EAASkQ,GAAV,OAAuB,EAAKqB,eAAerB,EAAUlQ,IACvEoL,SAAUR,KAAK4G,yB,GAzKnBpF,aCkBxB6hB,G,IAAAA,QAwaQC,G,kDApaX,WAAYrjB,GAAQ,IAAD,8BACf,cAAMA,IAgBVsjB,mBAAqB,SAACxmB,GAClB,OAAOA,GACH,IAAK,mBACD,OAAO,cAACymB,EAAA,EAAD,IAEX,IAAK,eACH,OAAO,cAACC,EAAA,EAAD,IAET,IAAK,sBACH,OAAO,cAACC,EAAA,EAAD,IAET,IAAK,mBACH,OAAO,cAACC,EAAA,EAAD,IAET,IAAK,eACH,OAAO,cAACC,EAAA,EAAD,IAET,QACI,OAAO,cAACC,EAAA,EAAD,MAnCA,EAyCnBC,cAAgB,WACZ,IAAMC,GAAa,EAAK9mB,MAAM8mB,UAE9B,EAAKjmB,SAAS,CAACimB,UAAWA,KA5CX,EAmDnBC,YAAc,WACV,EAAKlmB,SAAS,CACVmmB,aAAa,KArDF,EA6DnBC,aAAe,WACX,EAAKpmB,SAAS,CACVmmB,aAAa,KA/DF,EAsEnBE,eAAiB,kBACb,sBAAKhkB,UAAU,mCAAf,UACI,sBAAKA,UAAU,eAAf,UACI,mBAAQvD,KAAM,GAAIxJ,KAAM,cAACqwB,EAAA,EAAD,IAAiBrmB,IAAK,EAAKgnB,WAAW3wB,KAAKsM,OACnE,sBAAKI,UAAU,eAAf,UACI,+BAAO,EAAKikB,WAAW3wB,KAAKA,OAC5B,cAAC,IAAD,CAAMoY,GAAG,sBAAT,4CAGR,sBAAK1L,UAAU,kBAAf,UACI,mBAAQzJ,KAAK,OAAOe,KAAK,sBAAzB,0BACA,mBAAQf,KAAK,OAAO0R,QAAS,EAAKic,OAAlC,iCAjFO,EA0FnBC,aAAe,SAACC,GACZ,IAAItmB,EAAK,eAEHqY,EAAO,EAAKrW,MAAMzI,SAASgtB,SACjC,OAAOD,EAASE,QAAO,SAACC,EAAKzwB,GAEzB,GAAKA,EAAKT,WAA4B,IAAhBS,EAAKZ,QAiBpB,GAAIY,EAAKT,WAA4B,IAAhBS,EAAKZ,OAAkB,CAEjCY,EAAKT,SAASmxB,MAAK,SAAAC,GAAK,OAAgC,IAA5BtO,EAAKd,QAAQoP,EAAMzxB,SAGzD8K,EAAMH,SAAS,CACX+mB,SAAS,CAAC5wB,EAAKd,OAIvBuxB,EAAI1vB,KACA,cAACquB,GAAD,CAAwBjwB,KAAM6K,EAAMslB,mBAAmBtvB,EAAKb,MAAOgN,MAAO,CAACoR,MAAM,4BAA6Bte,MAAO,+BAAOe,EAAKf,QAAjI,SACK+K,EAAMqmB,aAAarwB,EAAKT,WADfS,EAAKd,YA3BtBc,EAAKV,MAEH+iB,IAAOriB,EAAKd,KAEb8K,EAAMH,SAAS,CACb+mB,SAAS,KAGbH,EAAI1vB,KACF,kBAAMsO,KAAN,CAA0BlQ,KAAM6K,EAAMslB,mBAAmBtvB,EAAKb,MAA9D,SAAqE,mBAAQsD,KAAK,OAAO0J,MAAO,CAAC0kB,QAAQ,EAAEtT,MAAM,4BAA6B/Z,KAAMxD,EAAKd,IAApF,SAA0Fc,EAAKf,SAApJe,EAAKd,OAGvBuxB,EAAI1vB,KACF,kBAAMsO,KAAN,UAA0B,mBAAQ5M,KAAK,OAAOe,KAAMxD,EAAKd,IAA/B,SAAqCc,EAAKf,SAApDe,EAAKd,MAmB3B,OAAOuxB,IACR,KAlIY,EAwInBK,SAAW,WAEP,IAAMzO,EAAO,EAAKrW,MAAMzI,SAASgtB,SAC7BQ,EAAS,CAAC9xB,MAAO,GAAI+xB,MAAO,IAiBhC,OAhBAC,EAAW5e,SAAQ,SAAArS,GACf,GAAIA,EAAKd,MAAQmjB,EACb0O,EAAO9xB,MAAM8B,KAAM,kBAAYsO,KAAZ,UAAiCrP,EAAKf,OAAhBe,EAAKd,MAC9C6xB,EAAOC,MAAQhxB,EAAKf,WACjB,GAAIe,EAAKT,SAAU,CAEtB,IAAMoxB,EAAQ3wB,EAAKT,SAASmxB,MAAK,SAAAC,GAAK,OAAgC,IAA5BtO,EAAKd,QAAQoP,EAAMzxB,QAEzDyxB,IAEAI,EAAO9xB,MAAM8B,KAAM,kBAAYsO,KAAZ,UAAiCrP,EAAKf,OAAhBe,EAAKd,MAC9C6xB,EAAO9xB,MAAM8B,KAAM,kBAAYsO,KAAZ,UAAkCshB,EAAM1xB,OAAlB0xB,EAAMzxB,MAC/C6xB,EAAOC,MAAQL,EAAM1xB,WAI1B8xB,GA5JQ,EAmKnBG,aAAe,SAACC,GACZ,IAAInnB,EAAK,eACH4mB,EAAW,EAAK5nB,MAAM4nB,SACtBQ,EAAgBD,EAAUT,MAAK,SAAAxxB,GAAG,OAA+B,IAA3B0xB,EAASrP,QAAQriB,MAC7D+xB,EAAWT,QAAO,SAACC,EAAKzwB,IACA,IAAhBA,EAAKZ,SACS+xB,EAAUT,MAAK,SAAAC,GAAK,OAAiC,IAA7BC,EAASrP,QAAQoP,MAInD3mB,EAAMH,SAAS,CACX+mB,SAAUQ,EAAgB,CAACA,GAAiB,KAIhDpnB,EAAMH,SAAS,CAAE+mB,SAASO,OAGnC,KArLY,EAwLnBE,mBAAqB,SAAChP,GAClB,IAAK,IAAI5jB,EAAI,EAAGA,EAAIwyB,EAAWxwB,OAAQhC,IAAK,CACxC,IAAMuB,EAAOixB,EAAWxyB,GACxB,GAA+B,IAA3B4jB,EAAKd,QAAQvhB,EAAKd,KAClB,MAAO,CAACc,EAAKd,KAGrB,MAAO,IA/LQ,EAqMnBkxB,OAAS,WAEL,IAAM5U,QAAQ,CACVvc,MAAO,2BACPwc,QAAQ,kCACR9O,KAAK,WAAD,4BAAE,sBAAApC,EAAA,sE/BjOWzH,O+BmOPwuB,E/BnOiB/uB,GAAK,GAAD,OAAI0B,GAAJ,WAAyBnB,EAAQ,Q+BiO1D,OAIFO,IACAC,EAAY9D,KAAO,GAEnB,EAAKwM,MAAMmS,QAAQ/d,QAAQ,UAPzB,iC/BjOW,IAAA0C,I+BiOX,OAAF,kDAAC,MA1MM,EA0NnByuB,kBAAoB,SAAC7U,GACjB,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MAC3BkB,EAAMH,SAAS,CACX2nB,YAAa1oB,KA9NF,EAqOnB2oB,aAAe,WACX,IACID,EADK,eACexoB,MAAMwoB,aAAe,IAC7CA,EAAcA,EAAYpR,SAItB,EAAKpU,MAAMmS,QAAQpd,KAAnB,uCAAwDywB,KA5O7C,EAmPnBE,SAAW,WAEP,EAAK1lB,MAAMmS,QAAQpd,KAAK,mCAnPxB,EAAKiI,MAAQ,CAET8mB,WAAW,EAEXc,SAAU,GACVZ,aAAa,EACbwB,YAAa,MARF,E,gEA6PjBzlB,KAAKokB,WAAa7sB,EAAY9D,MAAQ,GAEtCuM,KAAK4lB,UAAY5lB,KAAKskB,aAAaY,GAEnCllB,KAAK6lB,eAAiB7lB,KAAKmkB,mB,+BAIzB,IAAM1wB,EAAO8D,EAAY9D,KAEzB,IAAKA,IAASA,EAAKA,KAEf,OAAO,cAAC,IAAD,CAAUoY,GAAG,WALnB,MAQiD7L,KAAK/C,MAAtD8mB,EARA,EAQAA,UAAWE,EARX,EAQWA,YAAaY,EARxB,EAQwBA,SAAUY,EARlC,EAQkCA,YAEnCnP,EAAOtW,KAAKC,MAAMzI,SAASgtB,SACgB,IAA3ClO,EAAKd,QAAQ,4BAEbc,EAAO,2BAGX,IAAIpO,GAAa,EAC+B,IAA5CoO,EAAKd,QAAQ,6BAEbc,EAAO,wBAEPpO,GAAa,GArBZ,MAwBkBlI,KAAK+kB,WAArB7xB,EAxBF,EAwBEA,MAAO+xB,EAxBT,EAwBSA,MACd,OACI,sBAAK9kB,UAAU,oBAAf,UACI,qBAAKA,UAAU,iBAAiBC,MAAO,CAACC,gBAAgB,QAAD,OAAS5M,EAAKA,KAAKqyB,eAAwC,yCAA3D,SAEvD,yBAAQ3lB,UAAU,cAAlB,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,mBAAQzJ,KAAK,OAAOkG,KAAK,QAAQwL,QAASpI,KAAK8jB,cAA/C,SACI,cAACiC,EAAA,EAAD,QAGR,qBAAK5lB,UAAU,cAAcC,MAAO,CAACC,gBAAgB,QAAD,OAAS2lB,GAAT,iCAEpD,qBAAK7lB,UAAU,eAAf,mCAIJ,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,qBAAf,SAEQ+H,EACI,sBAAK/H,UAAU,2BAA2BC,MAAO,CAACe,WAAW8iB,EAAY,OAAO,0BAAhF,UACI,mBAAQ7b,QAASpI,KAAK0lB,aAAtB,SAAoC,cAACrd,EAAA,EAAD,MACpC,mBAAOF,YAAY,2BACZpL,MAAO0oB,EACPjlB,SAAUR,KAAKwlB,kBACfpP,aAAcpW,KAAK0lB,aACnBvP,OAAQnW,KAAKgkB,YACbiC,QAASjmB,KAAKkkB,kBAEvB,OAGd,qBAAK/jB,UAAU,qBAAf,SAEUpM,EAAcN,EAAKyyB,MAMjB,mBAASxW,QAAQ,2BAAOxc,MAAM,2BAA9B,SACI,mBAAO6rB,MAAO,EAAGoH,KAAG,EAApB,SACI,cAACC,EAAA,EAAD,QAPR,mBAAS1W,QAASjc,EAAKyyB,KAAKzB,QAAO,SAACC,EAAKzwB,GAAyD,OAA/CywB,EAAI1vB,KAAK,4BAAkBf,EAAKmS,UAAfnS,EAAKnC,KAAgC4yB,IAAK,IAAKxxB,MAAM,2BAAzH,SACI,mBAAO6rB,MAAOtrB,EAAKyyB,KAAKxxB,OAAQyxB,KAAG,EAAC3U,MAAM,UAA1C,SACI,cAAC4U,EAAA,EAAD,aAWxB,qBAAKjmB,UAAU,cAAf,SACI,mBAASkmB,QAAQ,QAAQC,gBAAiB,GAAKC,gBAAiB,GAAK7W,QAAS1P,KAAK6lB,eAAiBrpB,UAAU,cAA9G,SACI,sBAAM2D,UAAU,mBAAhB,SACI,qBAAK/C,IAAK3J,EAAKA,KAAKsM,KAAM6d,IAAKnqB,EAAKA,KAAKA,gBAKzD,0BAAS0M,UAAU,eAAnB,UACI,sBAAKA,UAAS,mBAAc4jB,EAAY,iBAAmB,iBAA3D,UACI,qBAAK5jB,UAAU,YAAf,SACI,qBAAKA,UAAS,oBAAe4jB,EAAU,kBAAkB,MAAQ3b,QAASpI,KAAK2lB,SAA/E,kCAIJ,qBAAKxlB,UAAU,YAAf,SACI,mBAAMA,UAAU,eAAeqmB,kBAAmB,EAAIC,iBAAkB,EAAItB,aAAcnlB,KAAKmlB,aAAcN,SAAUA,EAAU6B,gBAAiB7B,EAAU8B,KAAK,SAC3JC,gBAAiB7C,EADvB,SAGQ/jB,KAAK4lB,cAIjB,sBAAKzlB,UAAS,yBAAoB4jB,EAAU,uBAAuB,MAAnE,UACI,mBAAQrtB,KAAK,OAAOxD,MAAM,2BAAOuE,KAAK,2BAAtC,SAAiE,cAACovB,EAAA,EAAD,MACjE,mBAAQnwB,KAAK,OAAOxD,MAAM,2BAAOuE,KAAK,mBAAtC,SAAyD,cAACqvB,EAAA,EAAD,MACzD,mBAAQpwB,KAAK,OAAOxD,MAAM,2BAAOuE,KAAK,qBAAtC,SAA2D,cAACsvB,EAAA,EAAD,YAGnE,sBAAK5mB,UAAU,oBAAf,UACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,iCAAS8kB,IACT,oBAAY9kB,UAAU,mBAAtB,UACI,kBAAYmD,KAAZ,uCAEIpQ,UAKhB,sBAAKiN,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmW,KAAK,qBAAqBC,UAAW7U,KAC5C,cAAC,IAAD,CAAO4U,KAAK,qBAAqBC,UAAWrR,KAC5C,cAAC,IAAD,CAAOoR,KAAK,mBAAmBC,UAAW8H,KAC1C,cAAC,IAAD,CAAO/H,KAAK,mCAAmCC,UAAWhI,KAC1D,cAAC,IAAD,CAAO+H,KAAK,2BAA2BC,UAAW2M,KAClD,cAAC,IAAD,CAAO5M,KAAK,6BAA6BC,UAAW4M,KACpD,cAAC,IAAD,CAAO7M,KAAK,4BAA4BC,UAAW6M,KACnD,cAAC,IAAD,CAAO9M,KAAK,yBAAyBC,UAAWQ,KAChD,cAAC,IAAD,CAAOT,KAAK,yBAAyBC,UAAWU,KAChD,cAAC,IAAD,CAAOX,KAAK,6BAA6BC,UAAWjF,KACpD,cAAC,IAAD,CAAOgF,KAAK,0BAA0BC,UAAWF,KACjD,cAAC,IAAD,CAAOC,KAAK,yBAAyBC,UAAWjG,KAChD,cAAC,IAAD,CAAOgG,KAAK,2BAA2BC,UAAW6F,KAClD,cAAC,IAAD,CAAO9F,KAAK,8BAA8BC,UAAW6H,KACrD,cAAC,IAAD,CAAO9H,KAAK,uBAAuBC,UAAW6E,KAC9C,cAAC,IAAD,CAAO9E,KAAK,oBAAoBC,UAAWwE,KAE3C,cAAC,IAAD,CAAUlP,GAAG,4BAGrB,qBAAK1L,UAAU,iBAAf,SAEUpM,EAAcN,EAAKnB,KAEjB,8MADA,oFAAkBmB,EAAKnB,IAAImT,KAA3B,qCAAwChS,EAAKnB,IAAI00B,KAAjD,YAAyDvzB,EAAKnB,IAAI20B,GAAlE,sCAA8ExzB,EAAKnB,IAAI6T,QAAQC,oBAMnH,sBAAKjG,UAAU,YAAf,UACI,mBAAQzJ,KAAK,OAAOxD,MAAM,eAAKuE,KAAK,mCAApC,SAAuE,cAACyvB,GAAA,EAAD,MACvE,mBAAQxwB,KAAK,OAAOxD,MAAM,2BAAOuE,KAAK,iCAAtC,SAAuE,cAAC2uB,EAAA,EAAD,MACvE,mBAAQ1vB,KAAK,OAAOxD,MAAM,2BAAOuE,KAAK,yBAAtC,SAA+D,cAAC0vB,GAAA,EAAD,MAC/D,mBAAQzwB,KAAK,OAAOxD,MAAM,qBAAMuE,KAAK,yBAArC,SAA8D,cAAC2vB,GAAA,EAAD,mB,GA7Z1D5lB,aCrBtB6lB,I,OAAc,CAClB7M,WAAY,OACZG,SAAU,OACVoI,WAAY,IACZtwB,IAAK,QAGD60B,GAAa,CACjBroB,MAAO,QAGHsoB,GAAgB,CACpB/M,WAAY,OACZG,SAAU,OACVoI,WAAY,IACZtwB,IAAK,QAGD+0B,GAAe,CACnBvoB,MAAO,OAqJMwoB,G,4MA/IbxqB,MAAQ,CAENyqB,WAAW,EAEXC,UAAU,EAEVC,SAAU,GACVC,SAAU,GACV7lB,SAAS,G,EAOX8lB,WAAa,WACX,IAAI7pB,EAAK,eACJ2pB,EAAY3pB,EAAMhB,MAAlB2qB,SAED,OAASA,GAAY,KAAOA,EAC9B3pB,EAAMH,SAAS,CAAC4pB,WAAW,IAE3BzpB,EAAMH,SAAS,CAAC4pB,WAAW,K,EAO/BK,YAAc,WACH,eACHjqB,SAAS,CAAC4pB,WAAW,K,EAM7BM,UAAY,WACV,IAAI/pB,EAAK,eACJ4pB,EAAY5pB,EAAMhB,MAAlB4qB,SAED,OAASA,GAAY,KAAOA,EAC9B5pB,EAAMH,SAAS,CAAC6pB,UAAU,IAE1B1pB,EAAMH,SAAS,CAAC6pB,UAAU,K,EAO9BM,WAAa,WACF,eACHnqB,SAAS,CAAC6pB,UAAU,K,EAO5BO,gBAAkB,SAACvX,GACjB,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MAC3BkB,EAAMH,SAAS,CACb8pB,SAAU7qB,EAAMsX,U,EAQpB8T,eAAiB,SAACxX,GAChB,IAAI1S,EAAK,eACHlB,EAAQ4T,EAAM/b,OAAOmI,MAC3BkB,EAAMH,SAAS,CACb+pB,SAAU9qB,EAAMsX,U,EAOpB+T,Y,sBAAc,0CAAA5pB,EAAA,yDACRP,EADQ,iBAEcA,EAAMhB,MAA3B2qB,EAFO,EAEPA,SAASC,EAFF,EAEEA,SACV,OAASD,GAAY,OAASC,GAAY,KAAOD,GAAY,KAAOC,EAH5D,uBAIV,KAAQnwB,MAAM,0DAJJ,iCAOR2wB,EAAc,CAAC50B,KAAMm0B,EAAUtlB,SAAUulB,GAC7C5pB,EAAMH,SAAS,CAACkE,SAAS,IARb,SASS7J,GAAakwB,GATtB,OASNxzB,EATM,OAUPwC,EAAcxC,EAAdwC,KAAMrD,EAAQa,EAARb,KACXiK,EAAMH,SAAS,CAACkE,SAAS,IACZ,IAAT3K,GACFE,EAAY9D,KAAOO,EACnBsD,EAAsBtD,GAEtB,EAAKiM,MAAMmS,QAAQ/d,QAAQ,qBACT,IAATgD,EACT,KAAQK,MAAM,0DAEd,KAAQA,MAAM,oDApBJ,4C,uDAwBL,MAEmDsI,KAAK/C,MAAxDyqB,EAFA,EAEAA,UAAWC,EAFX,EAEWA,SAAUC,EAFrB,EAEqBA,SAAUC,EAF/B,EAE+BA,SAAS7lB,EAFxC,EAEwCA,QAC/C,OACE,cAAC,KAAD,CAAe9O,MAAM,yEAArB,SACE,qBAAKiN,UAAU,2BACVC,MAAO,CAACC,gBAAgB,QAAD,OAAU2lB,GAAV,2CAD5B,SAEE,qBAAK7lB,UAAU,qBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,0BACA,sBAAKA,UAAU,QAAf,UACE,uBAAOC,MAAOsnB,EAAYL,GAAcE,GAAxC,gCACA,mBAAO7wB,KAAK,OAAOqG,MAAO6qB,EAAUpnB,SAAUR,KAAKkoB,gBAAiB/R,OAAQnW,KAAK8nB,WAC1E7B,QAASjmB,KAAK+nB,cACrB,sBAAM5nB,UAAU,OAAOC,MAAOsnB,EAAYJ,GAAaE,QAEzD,sBAAKrnB,UAAU,QAAf,UACE,uBAAOC,MAAOunB,EAAWN,GAAcE,GAAvC,0BACA,mBAAO7wB,KAAK,WAAWqG,MAAO8qB,EAAUrnB,SAAUR,KAAKmoB,eAAgBhS,OAAQnW,KAAKgoB,UAC7E/B,QAASjmB,KAAKioB,aACrB,sBAAM9nB,UAAU,OAAOC,MAAOunB,EAAWL,GAAaE,QAExD,qBAAKrnB,UAAU,eAAf,SACE,mBAAQzJ,KAAK,OAAO0R,QAASpI,KAAKooB,YAAapmB,QAASA,EAAxD,4BAEF,mBAAQtL,KAAK,OAAOyJ,UAAU,cAA9B,yD,GAtIMqB,aCVL8mB,OAlBf,WACE,OACI,cAAC,IAAD,UAOE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOhS,KAAM,CAAC,SAAS,KAAME,OAAO,EAAMD,UAAWkR,KACrD,cAAC,IAAD,CAAOnR,KAAK,aAAaC,UAAWgS,W,qBCJxC90B,I,cAAO6D,KACbC,EAAY9D,KAAOA,GAInB+0B,IAASviB,OACL,mBAAgBwiB,OAAQC,KAAxB,SACI,cAAC,GAAD,MACe7pB,SAASkO,eAAe,W","file":"static/js/main.32f28782.chunk.js","sourcesContent":["//// eslint-disable-next-line\r\n(function (e) {\r\n    function o(s)\r\n    {\r\n        if (t[s])\r\n            return t[s].exports;\r\n        var n = t[s] = { exports: {}, id: s, loaded: !1 };\r\n        //return e[s].call(n.exports, n, n.exports, o), n.loaded = !0, n.exports\r\n        // 解决es报错\r\n        e[s].call(n.exports, n, n.exports, o)\r\n        n.loaded = !0\r\n        return n.exports\r\n    }\r\n    var t = {};\r\n    //return o.m = e, o.c = t, o.p = \"\", o(0)\r\n    // 解决es报错\r\n    o.m = e\r\n    o.c = t\r\n    o.p = \"\"\r\n    return o(0)\r\n})\r\n([function (e, o, t)\r\n{ e.exports = t(1) },\r\n    function (e, o) {\r\n        // eslint-disable-next-line\r\n        (function () {\r\n            var e;\r\n            if (window.console && \"undefined\" != typeof console.log)\r\n            {\r\n                try\r\n                {\r\n                    (window.parent.__has_console_security_message || window.top.__has_console_security_message) && (e = !0)\r\n                }\r\n                catch (o) { e = !0 }\r\n                if (window.__has_console_security_message || e)\r\n                    return;\r\n                var t = \"\\u6e29\\u99a8\\u63d0\\u793a\\uff1a\\u8bf7\\u4e0d\\u8981\\u8c03\\u76ae\\u5730\\u5728\\u6b64\\u7c98\\u8d34\\u6267\\u884c\\u4efb\\u4f55\\u5185\\u5bb9\\uff0c\\u8fd9\\u53ef\\u80fd\\u4f1a\\u5bfc\\u81f4\\u60a8\\u7684\\u8d26\\u6237\\u53d7\\u5230\\u653b\\u51fb\\uff0c\\u7ed9\\u60a8\\u5e26\\u6765\\u635f\\u5931 \\uff01^_^\",\r\n                    s = \"\\u81f4\\u529b\\u4e8e\\u5f00\\u53d1\\u4f18\\u8d28\\u7684\\u4e92\\u8054\\u7f51\\u5e94\\u7528\",\r\n                    n = \"https://saya.ac.cn \",\r\n                    i = [s, \" \", n].join(\"\");\r\n                // eslint-disable-next-line\r\n                /msie/gi.test(navigator.userAgent) ? (console.log(t), console.log(i)) : (console.log(\"%c 暖心阁 %c Copyright \\xa9 2016-%s\", 'font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;font-size:64px;color:#00bbee;-webkit-text-fill-color:#00bbee;-webkit-text-stroke: 1px #00bbee;', \"font-size:12px;color:#999999;\", (new Date).getFullYear()), console.log(\"%c \" + t, \"color:#333;font-size:16px;\"), console.log(\"\\n \" + i)), window.__has_console_security_message = !0\r\n            }\r\n        }())\r\n    }]);","/**\n * 后台菜单路由配置清单\n * 注意：仅支持 \" 二 \"级菜单\n * @type {*[]}\n * 重要说明！！！\n * 页面路由绝对禁止出现/backend、/frontend、/files（远景包括map）\n * 在定义接口代理时，上述的路由单词已经被定义，如果使用，刷新页面将出现404，\n */\n\nconst backstageMenuList = [\n    {\n      title: '主页',// 菜单标题名称\n      key: '/backstage/chart',// 对应的path\n      icon: 'HomeOutlined',// 图标名称\n      hidden: false, //是否隐藏\n      requireAuth: true, // 是否需要登录后访问\n      root:true, // 是否为根节点（当根节点下无子节点时，需要设置本位）\n      children: null\n    },\n    {\n        title: '我',// 菜单标题名称\n        key: '/backstage/me',// 对应的path\n        icon: 'UserOutlined',// 图标名称\n        hidden: false, //是否隐藏\n        requireAuth: true, // 是否需要登录后访问\n        root:false, // 是否为根节点\n        children: [ // 子菜单列表\n            {\n                title: '个人信息',\n                key: '/backstage/me/info',\n                hidden: false,\n                requireAuth: true\n            },\n            {\n                title: '操作日志',\n                key: '/backstage/me/logs',\n                hidden: false,\n                requireAuth: true\n            },\n            // {\n            //   title: '概览',\n            //   key: '/backstage/me/chart',\n            //   hidden: false,\n            //   requireAuth: true\n            // }\n        ]\n    },\n    {\n        title: '记账本',// 菜单标题名称\n        key: '/backstage/financial',// 对应的path\n        icon: 'AccountBookOutlined',// 图标名称\n        hidden: false, //是否隐藏\n        requireAuth: true, // 是否需要登录后访问\n        root:false, // 是否为根节点\n        children: [ // 子菜单列表\n            {\n                title: '收入支出',\n                key: '/backstage/financial/transaction',\n                hidden: false,\n                requireAuth: true\n            },\n            {\n                title: '日度报表',\n                key: '/backstage/financial/day',\n                hidden: false,\n                requireAuth: true\n            },\n            {\n                title: '月度报表',\n                key: '/backstage/financial/month',\n                hidden: false,\n                requireAuth: true\n            },\n            {\n                title: '年度报表',\n                key: '/backstage/financial/year',\n                hidden: false,\n                requireAuth: true\n            },\n        ]\n    },\n    {\n        title: '随心记',// 菜单标题名称\n        key: '/backstage/memory',// 对应的path\n        icon: 'ScheduleOutlined',// 图标名称\n        hidden: false, //是否隐藏\n        requireAuth: true, // 是否需要登录后访问\n        root:false, // 是否为根节点\n        children: [ // 子菜单列表\n            {\n              title: '消息动态',\n              key: '/backstage/memory/news',\n              hidden: false,\n              requireAuth: true\n            },\n            {\n                title: '日程安排',\n                key: '/backstage/memory/plan',\n                hidden: false,\n                requireAuth: true\n            },\n            {\n                title: '笔记簿',\n                key: '/backstage/memory/notebook',\n                hidden: false,\n                requireAuth: true\n            },\n            {\n                title: '便笺笔记',\n                key: '/backstage/memory/notes',\n                hidden: false,\n                requireAuth: true\n            },\n            {\n                title: '便利贴',\n                key: '/backstage/memory/memo',\n                hidden: false,\n                requireAuth: true\n            },\n        ],\n    },\n    {\n      title: '数据存储',// 菜单标题名称\n      key: '/backstage/oss',// 对应的path\n      icon: 'DatabaseOutlined',// 图标名称\n      hidden: false, //是否隐藏\n      requireAuth: true, // 是否需要登录后访问\n      root:false, // 是否为根节点\n      children: [ // 子菜单列表\n        {\n          title: '图片壁纸',\n          key: '/backstage/oss/wallpaper',\n          hidden: false,\n          requireAuth: true\n        },\n        {\n          title: '文章插图',\n          key: '/backstage/oss/illustration',\n          hidden: false,\n          requireAuth: true\n        },\n        {\n          title: '文档资料',\n          key: '/backstage/oss/files',\n          hidden: false,\n          requireAuth: true\n        },\n        {\n          title: '定时备份',\n          key: '/backstage/oss/db',\n          hidden: false,\n          requireAuth: true\n        }\n      ]\n    }\n];\nexport default backstageMenuList\n","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n    user: {}, // 保存当前登陆的user\r\n}\r\n","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\n\r\nconst USER_KEY = 'user_key';\r\nexport default {\r\n    /*\r\n    保存user\r\n     */\r\n    saveUser(user) {\r\n        // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n        store.set(USER_KEY, user)\r\n    },\r\n\r\n    /*\r\n    读取user\r\n     */\r\n    getUser() {\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        return store.get(USER_KEY) || {}\r\n    },\r\n\r\n    /*\r\n    删除user\r\n     */\r\n    removeUser() {\r\n        // localStorage.removeItem(USER_KEY)\r\n        store.remove(USER_KEY)\r\n    }\r\n}","/**\n * 变量操作js工具类\n */\nimport moment from \"moment\";\n\n/**\n * 判断对象是否为空\n * 入参 data\n * 返回 为空返回true\n */\nexport const isEmptyObject = (data) => {\n    // 手写实现的判断一个对象{}是否为空对象，没有任何属性 非空返回false\n    for (let item in data)\n        return false;\n    return true;\n};\n\n/**\n * 货币格式化\n * @param s 要格式化的数字\n * @param n 保留几位小数\n * @returns {string}\n */\nexport const formatMoney = (s, n) => {\n    n = typeof(n)===\"undefined\"?2:n;\n    n = n > 0 && n <= 20 ? n : 2;\n    s = parseFloat((s + \"\").replace(/[^\\d.-]/g, \"\")).toFixed(n) + \"\";\n    let l = s.split(\".\")[0].split(\"\").reverse(),\n        r = s.split(\".\")[1];\n    let t= \"\";\n    for (let i = 0; i < l.length; i++) {\n        t += l[i] + ((i + 1) % 3 === 0 && (i + 1) !== l.length ? \",\" : \"\");\n    }\n    return t.split(\"\").reverse().join(\"\") + \".\" + r;\n};\n\n/**\n * 深拷贝函数  接收目标target参数\n * @param target\n * @returns {Object|Array|{}}\n */\nexport const deepClone = (target) => {\n    // 定义一个变量\n    let result;\n    // 如果当前需要深拷贝的是一个对象的话\n    if (typeof target === 'object') {\n        // 如果是一个数组的话\n        if (Array.isArray(target)) {\n            result = []; // 将result赋值为一个数组，并且执行遍历\n            for (let i in target) {\n                // 递归克隆数组中的每一项\n                result.push(deepClone(target[i]))\n            }\n            // 判断如果当前的值是null的话；直接赋值为null\n        } else if(target===null) {\n            result = null;\n            // 判断如果当前的值是一个RegExp对象的话，直接赋值\n        } else if(target.constructor===RegExp){\n            result = target;\n        }else {\n            // 否则是普通对象，直接for in循环，递归赋值对象的所有值\n            result = {};\n            for (let i in target) {\n                result[i] = deepClone(target[i]);\n            }\n        }\n        // 如果不是对象的话，就是基本数据类型，那么直接赋值\n    } else {\n        result = target;\n    }\n    // 返回最终结果\n    return result;\n};\n\n// 只能选择今天以前的日期\nexport const disabledDate = (current) => {\n  // Can not select days before today and today\n  return current && current > moment().endOf('day');\n};\n\n// 只能选择本月及其以前的月份\nexport const disabledMonth = (current) => {\n    return current && current > moment().endOf('month');\n};","/*\n能发送异步ajax请求的函数模块\n封装axios库\n函数的返回值是promise对象\n1. 优化1: 统一处理请求异常?\n    在外层包一个自己创建的promise对象\n    在请求出错时, 不reject(error), 而是显示错误提示\n2. 优化2: 异步得到不是reponse, 而是response.data\n   在请求成功resolve时: resolve(response.data)\n */\n\nimport axios from 'axios'\nimport {message} from 'antd'\nimport memoryUtils from '../utils/memoryUtils'\nimport storageUtils from '../utils/storageUtils'\n\n/**\n * 状态码设置\n **/\nconst codeMessage = {\n    200: '服务器成功返回请求的数据。',\n    201: '新建或修改数据成功。',\n    202: '一个请求已经进入后台排队（异步任务）。',\n    204: '删除数据成功。',\n    400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n    401: '用户没有权限（令牌、用户名、密码错误）。',\n    403: '用户得到授权，但是访问是被禁止的。',\n    404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n    406: '请求的格式不可得。',\n    410: '请求的资源被永久删除，且不会再得到的。',\n    422: '当创建一个对象时，发生一个验证错误。',\n    500: '服务器发生错误，请检查服务器。',\n    502: '网关错误。',\n    503: '服务不可用，服务器暂时过载或维护。',\n    504: '网关超时。',\n};\n\n\nexport default function ajax(url, data = {}, type = 'GET') {\n    return new Promise((resolve, reject) => {\n        let promise;\n        // 1. 执行异步ajax请求\n        if (type === 'GET') { // 发GET请求\n            promise = axios.get(url, { // 配置对象\n                params: data // 指定请求参数\n            })\n        } else if (type === 'DELETE') { // 发DELETE请求\n            promise = axios.delete(url, { // 配置对象\n                params: data // 指定请求参数\n            })\n        } else if (type === 'PUT') { // 发PUT请求\n            promise = axios.put(url, data)\n        } else { // 发POST请求\n            promise = axios.post(url, data)\n        }\n        // 2. 如果成功(200)了, 调用resolve(value)\n        promise.then(response => {\n            resolve(response.data);\n            // 后台返回会话过期 兼容原有 200 下的状态码\n            if (response.data.code === -7) {\n                // 删除保存的user数据\n                storageUtils.removeUser();\n                memoryUtils.user = {};\n                window.location.href = \"/login\";\n            }\n            // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\n        },error => {\n            if (error === undefined || error.code === 'ECONNABORTED') {\n                message.error('服务请求超时')\n            }\n            const { response: { status, statusText, data: { msg = '服务器发生错误' } }} = error;\n            //const { response } = error\n            const text = codeMessage[status] || statusText || msg;\n            if (status === 401) {\n                // 未登录\n                storageUtils.removeUser();\n                memoryUtils.user = {};\n                window.location.href = \"/login\";\n            }else{\n                message.error(text)\n            }\n        }).catch(error => {\n            // reject(error)\n            message.error('请求出错了: ' + error.message)\n        })\n    })\n\n}","import ajax from './ajax'\n/**\n * 重要说明！！！\n * 因为，后台已对「/backend，/frontend，/files」接口代理,页面路由绝对禁止出现/backend、/frontend、/files（远景包括map）\n * 在定义接口代理时，上述的路由单词已经被定义，如果使用，刷新页面将出现404，\n * @type {string}\n */\n\n// 后台api接口\nlet backendAPI = '/backend';\n\n// 登录接口\nexport const requestLogin = params => ajax(`${backendAPI}/login/web`, params, 'POST');\n// 注销接口\nexport const requestLogout = params => ajax(`${backendAPI}/logout`, params, 'POST');\n// 获取日志接口\nexport const getLogList = params => ajax(`${backendAPI}/api/set/log`, params, 'POST');\n// 获取日志类别接口\nexport const getLogType = params => ajax(`${backendAPI}/api/set/logtype`, params, 'POST');\n// 导出日志\nexport const downloadLogExcel = `${backendAPI}/api/set/log/excel`;\n// 上传头像\nexport const uploadLogo = params => ajax(`${backendAPI}/api/set/uploadlogo`, params, 'POST');\n// 获取个人信息\nexport const getPersonal = params => ajax(`${backendAPI}/api/set/personal`, params, 'GET');\n// 修改密码\nexport const setPassword = params => ajax(`${backendAPI}/api/set/password`, params, 'PUT');\n// 修改用户信息\nexport const setUserInfo = params => ajax(`${backendAPI}/api/set/update`, params, 'PUT');\n// 上传笔记、消息图片\nexport const uploadNewsPicture = `${backendAPI}/api/oss/picture/illustrated`;\n// 获取动态\nexport const getNewsList = params => ajax(`${backendAPI}/api/message/news`, params, 'GET');\n// 发布动态\nexport const publishNews = params => ajax(`${backendAPI}/api/message/news/publish`, params, 'POST');\n// 删除动态\nexport const deleteNews = params => ajax(`${backendAPI}/api/message/news/delete`, params, 'DELETE');\n// 查询动态\nexport const getNews = params => ajax(`${backendAPI}/api/message/news/show`, params, 'GET');\n// 修改动态\nexport const editNews = params => ajax(`${backendAPI}/api/message/news/edit`, params, 'PUT');\n// 查看分页后的图片\nexport const getPictureList = params => ajax(`${backendAPI}/api/oss/picture`, params, 'GET');\n// 上传壁纸\nexport const uploadWallpaper = `${backendAPI}/api/oss/picture/wallpaper`;\n// 删除壁纸/插图\nexport const deletePicture = params => ajax(`${backendAPI}/api/oss/picture/delete`, params, 'DELETE');\n// 上传文件\nexport const uploadFile = `${backendAPI}/api/oss/files/upload`;\n// 查看分页后的文件\nexport const getFileList = params => ajax(`${backendAPI}/api/oss/files`, params, 'GET');\n// 删除文件\nexport const deleteFile = params => ajax(`${backendAPI}/api/oss/files/delete`, params, 'DELETE');\n// 修改文件\nexport const editFile = params => ajax(`${backendAPI}/api/oss/files/edit`, params, 'PUT');\n// 下载文件\nexport const downloadFileForAdmin = `${backendAPI}/api/oss/files/download/`;\n// 创建笔记簿\nexport const createNoteBook = params => ajax(`${backendAPI}/api/message/notebook/create`, params, 'POST');\n// 修改笔记簿\nexport const updateNoteBook = params => ajax(`${backendAPI}/api/message/notebook/edit`, params, 'PUT');\n// 删除笔记簿\nexport const deleteNoteBook = params => ajax(`${backendAPI}/api/message/notebook/delete`, params, 'DELETE');\n// 获取笔记簿列表\nexport const getNoteBookList = params => ajax(`${backendAPI}/api/message/notebook`, params, 'GET');\n// 获取笔记簿\nexport const getNoteBookGroup = params => ajax(`${backendAPI}/api/message/notebook/group`, params, 'GET');\n// 查询单条笔记簿\nexport const getNoteBook = params => ajax(`${backendAPI}/api/message/notebook/show`, params, 'GET');\n// 创建笔记\nexport const createNotes = params => ajax(`${backendAPI}/api/message/notes/create`, params, 'POST');\n// 修改笔记\nexport const updateNotes = params => ajax(`${backendAPI}/api/message/notes/edit`, params, 'PUT');\n// 删除笔记\nexport const deleteNotes = params => ajax(`${backendAPI}/api/message/notes/delete`, params, 'DELETE');\n// 获取笔记\nexport const getNotesList = params => ajax(`${backendAPI}/api/message/notes`, params, 'GET');\n// 查询单条笔记\nexport const getNotes = params => ajax(`${backendAPI}/api/message/notes/show`, params, 'GET');\n// 获取该月计划\nexport const getPlanList = params => ajax(`${backendAPI}/api/set/plan`, params, 'GET');\n// 添加计划\nexport const createPlan = params => ajax(`${backendAPI}/api/set/plan/create`, params, 'POST');\n// 修改计划\nexport const updatePlan = params => ajax(`${backendAPI}/api/set/plan/edit`, params, 'PUT');\n// 删除计划\nexport const deletePlan = params => ajax(`${backendAPI}/api/set/plan/delete`, params, 'DELETE');\n// 获取所有的支付类别\nexport const getFinancialType = params => ajax(`${backendAPI}/api/financial/transactionType`, params, 'GET');\n// 获取所有的交易摘要\nexport const getFinancialAmount = params => ajax(`${backendAPI}/api/financial/transactionAmount`, params, 'GET');\n// 获取财政流水\nexport const getTransactionList = params => ajax(`${backendAPI}/api/financial/transaction`, params, 'GET');\n// 查看收支明细（明细记录折叠存）\nexport const getTransactionDetail = params => ajax(`${backendAPI}/api/financial/transactionDetail`, params, 'GET');\n// 分页查看收支明细（明细记录折叠存）\nexport const getTransactionDetailPage = params => ajax(`${backendAPI}/api/financial/transactionDetailPage`, params, 'GET');\n// 财政申报\nexport const applyTransaction = params => ajax(`${backendAPI}/api/financial/insertTransaction`, params, 'POST');\n// 修改流水\nexport const updateTransaction = params => ajax(`${backendAPI}/api/financial/updateTransaction`, params, 'PUT');\n// 删除流水\nexport const deleteTransaction = params => ajax(`${backendAPI}/api/financial/deleteTransaction`, params, 'DELETE');\n// 导出流水\nexport const downTransaction = `${backendAPI}/api/financial/outTransactionListExcel`;\n// 导出流水明细\nexport const outTransactionInfoExcel = `${backendAPI}/api/financial/outTransactionInfoExcel`;\n// 获取流水明细\nexport const getTransactionInfo = params => ajax(`${backendAPI}/api/financial/transactionInfo`, params, 'GET');\n// 添加流水明细\nexport const insertTransactioninfo = params => ajax(`${backendAPI}/api/financial/insertTransactioninfo`, params, 'POST');\n// 修改流水明细\nexport const updateTransactioninfo = params => ajax(`${backendAPI}/api/financial/updateTransactioninfo`, params, 'PUT');\n// 删除流水明细\nexport const deleteTransactioninfo = params => ajax(`${backendAPI}/api/financial/deleteTransactioninfo`, params, 'DELETE');\n// 按天统计流水\nexport const totalTransactionForDay = params => ajax(`${backendAPI}/api/financial/totalTransactionForDay`, params, 'GET');\n// 导出按天统计的报表\nexport const outTransactionForDayExcel = `${backendAPI}/api/financial/outTransactionForDayExcel`;\n// 按月统计流水\nexport const totalTransactionForMonth = params => ajax(`${backendAPI}/api/financial/totalTransactionForMonth`, params, 'GET');\n// 导出按月统计的报表\nexport const outTransactionForMonthExcel = `${backendAPI}/api/financial/outTransactionForMonthExcel`;\n// 按年统计流水\nexport const totalTransactionForYear = params => ajax(`${backendAPI}/api/financial/totalTransactionForYear`, params, 'GET');\n// 导出按月统计的报表\nexport const outTransactionForYearExcel = `${backendAPI}/api/financial/outTransactionForYearExcel`;\n// 查看数据库备份执行列表\nexport const getBackUpDBList = params => ajax(`${backendAPI}/api/oss/db`, params, 'GET');\n// 下载备份的数据库文件\nexport const downloadBackUpDB = `${backendAPI}/api/oss/db/download/`;\n// 获取数据总量及词云数据\nexport const getCountAndWordCloud = () => ajax(`${backendAPI}/api/set/countAndWordCloud`, {}, 'GET');\n// 查询活跃度\nexport const getActivityRate= params => ajax(`${backendAPI}/api/set/activityRate/${params}`, {}, 'GET');\n// 统计动态发布\nexport const getNewsRate = params => ajax(`${backendAPI}/api/message/newsRate/${params}`, {}, 'GET');\n// 收支增长率\nexport const getAccountGrowthRate = params => ajax(`${backendAPI}/api/financial/accountGrowthRate/${params}`, {}, 'GET');\n// 收入比重\nexport const getIncomePercentage = params => ajax(`${backendAPI}/api/financial/incomePercentage/${params}`, {}, 'GET');\n// 统计指定月份中各摘要的排名\nexport const getOrderByAmount = params => ajax(`${backendAPI}/api/financial/orderByAmount/${params}`, {}, 'GET');\n// 统计指定指定日期月份前6个月的账单\nexport const getPreSixMonthBill = params => ajax(`${backendAPI}/api/financial/preSixMonthBill/${params}`, {}, 'GET');\n// 查询单条便笺\nexport const getMemo = params => ajax(`${backendAPI}/api/message/memo/show`, params, 'GET');\n// 获取分页便笺\nexport const getMemoList = params => ajax(`${backendAPI}/api/message/memo`, params, 'GET');\n// 添加便笺\nexport const createMemo = params => ajax(`${backendAPI}/api/message/memo/create`, params, 'POST');\n// 修改便笺\nexport const updateMemo = params => ajax(`${backendAPI}/api/message/memo/edit`, params, 'PUT');\n// 删除便笺\nexport const deleteMemo = params => ajax(`${backendAPI}/api/message/memo/delete`, params, 'DELETE');\n","import {notification} from 'antd';\nimport {LoadingOutlined} from \"@ant-design/icons\";\nimport React from \"react\";\n\n// Notification通知提醒框\nexport const openNotificationWithIcon = (type, message, description) => notification[type]({\n    placement: 'topRight',\n    message: message,\n    description: description,\n});\n\nexport const openNotificationWithIcon_ = (type, message, description) => notification[type]({\n    placement: 'bottomRight',\n    message: message,\n    description: description,\n});\n\n// 重写loading样式\nexport const showLoading = () => ({ indicator:<LoadingOutlined/>,size:'large',spinning:true});\n","// 字符串工具类\n\n/**\n * 清除输入框的空格\n * @param name\n * @param str\n * @returns {*}\n */\nexport const clearTrimValueEvent = (value) => {\n    return value.target.value.replace(/\\s+/g, '');\n};\n","import React, {Component} from 'react';\nimport Cropper from 'react-cropper'// 引入Cropper\nimport 'cropperjs/dist/cropper.css'//引入样式\nimport {Modal} from 'antd';\nimport './uploadLogo.less';\nimport {uploadLogo} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport memoryUtils from \"../../../utils/memoryUtils\";\n/*\n * 文件名：uploadLogo.jsx\n * 作者：liunengkai\n * 创建日期：2019-07-14 - 22:04\n * 描述：\n * 参考1：https://www.jianshu.com/p/eeaa9fba56d0\n * 参考2：https://blog.csdn.net/qq_37043418/article/details/109238963\n */\n\n// 定义组件（ES6）\nclass UploadLogo extends Component {\n\n  state = {\n      modalVisible: false,//模态框\n      confirmLoading: false,//上传的load\n      src: null,//文件路径（选择的）\n      headerImage: '',//文件名后才能\n  };\n\n  onCropperInit = cropper => { this.cropper = cropper }\n\n  componentDidMount() {\n      const fileReader = new FileReader();\n      fileReader.onload = (e) => {\n          const dataURL = e.target.result;\n          this.setState({src: dataURL})\n      };\n      // 从本地缓存取出当前用户的logo\n      const user = memoryUtils.user;\n      const headerImage = user.logo;\n      this.setState({\n          headerImage\n      });\n      let file = this.props.uploadedImageFile;\n      if (file) {\n          fileReader.readAsDataURL(this.props.uploadedImageFile)\n      }\n  }\n\n  //选择图片\n  handleFileChange = (e) => {\n      const file = e.target.files[0];\n      if (file) {\n          //文件最多不能超过5M\n          if (file.size / 1024 <= 5 * 1024) {\n              const reader = new FileReader();\n              reader.onload = () => {\n                  this.setState({\n                      src: reader.result\n                  }, () => {\n                      this.setState({\n                          modalVisible: true,\n                      })\n                  })\n              };\n              reader.readAsDataURL(file);\n\n          } else {\n              openNotificationWithIcon(\"error\", \"文件过大\", \"所选文件不能超过5M\");\n          }\n      } else {\n          openNotificationWithIcon(\"error\", \"上传提示\", \"请选择文件\");\n      }\n      e.target.value = ''\n  };\n\n    //保存裁切\n    saveCropperImg = () => {\n      let _this = this;\n        // 用户未选择\n        if (_this.cropper.getCroppedCanvas() === 'null') {\n            return false\n        }\n        // this.setState({\n        //     confirmLoading: true,\n        // });\n        // Crop\n        const croppedCanvas = _this.cropper.getCroppedCanvas();\n        // Round\n        var roundedCanvas = _this.getRoundedCanvas(croppedCanvas);\n        //获取Canvas图片，base64\n        let headerImage = roundedCanvas.toDataURL();\n        _this.setState({\n            headerImage\n        }, function () {\n            // 执行图片上传\n            _this.upload(headerImage)\n        })\n    };\n\n    upload = async (image) => {\n        let _this = this;\n        _this.setState({\n            confirmLoading: true,\n        });\n        //这边写图片的上传\n        let para = {\n            'logo': image.toString()\n        };\n        const result = await uploadLogo(para);\n        _this.setState({\n            confirmLoading: false,\n        });\n        let {msg, code} = result;\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"上传结果\", \"上传成功\");\n            _this.setState({\n                modalVisible: false,\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"上传结果\", msg);\n        }\n    };\n\n    // 裁剪一个圆形的图片\n    getRoundedCanvas = (sourceCanvas) => {\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var width = sourceCanvas.width;\n        var height = sourceCanvas.height;\n        canvas.width = width;\n        canvas.height = height;\n        context.imageSmoothingEnabled = true;\n        context.drawImage(sourceCanvas, 0, 0, width, height);\n        context.globalCompositeOperation = 'destination-in';\n        context.beginPath();\n        context.arc(width / 2, height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI, true);\n        context.fill();\n        return canvas;\n    };\n\n    //取消裁切\n    cancelCropper = () => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n\n    render() {\n        // 读取状态数据\n        const {headerImage, modalVisible, confirmLoading, src} = this.state;\n        return (\n            <div className='upload-cropper'>\n                {/* 选择图片按钮 */}\n                <div className=\"show\">\n                    <div className=\"picture\" style={{backgroundImage: 'url(' + headerImage + ')'}}></div>\n                </div>\n                <div className=\"upload-box\">\n                    <span className=\"upload-span\" role=\"button\">\n                      <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          className=\"base-upload-input\"\n                          onChange={this.handleFileChange}\n                      />\n                      <div className=\"button\">\n                        <div>选择</div>\n                      </div>\n                    </span>\n                </div>\n                {/* 裁切图片modal框 */}\n                <Modal\n                    title=\"图片裁切\"\n                    width=\"70vw\"\n                    closable={false}\n                    destroyOnClose={true}\n                    visible={modalVisible}\n                    onOk={this.saveCropperImg}\n                    confirmLoading={confirmLoading}\n                    onCancel={this.cancelCropper}>\n                    <div className=\"cropperModal\">\n                        <Cropper\n                            src={src}//图片路径，即是base64的值，在Upload上传的时候获取到的\n                            style={{height: 400, width: '100%'}}\n                            preview='.cropper-preview'\n                            className=\"company-cropper\"\n                            viewMode={1} //定义cropper的视图模式\n                            zoomable={true} //是否允许放大图像\n                            aspectRatio={this.props.aspectRatio} //image的纵横比1:1\n                            guides={false} //显示在裁剪框上方的虚线\n                            background={false} //是否显示背景的马赛克\n                            rotatable={true} //是否旋转\n                            //ref='cropper'//在官方更新之后ref不在支持，应写为以下\n                            //crop={this._crop.bind(this)}\n                            onInitialized={this.onCropperInit.bind(this)}\n                        />\n                        <div className='preview-button'>\n                            <div className=\"cropper-preview\" style={{\n                                borderRadius: '50%',\n                                height: 100,\n                                width: '100%'\n                            }}></div>\n                        </div>\n\n                    </div>\n\n                </Modal>\n\n            </div>\n        )\n    }\n\n}\n\n// 对外暴露\nexport default UploadLogo;\n","import React, { Component } from 'react';\nimport {Col, Tabs, Card, Form, Input, Button, Spin} from 'antd';\nimport {getPersonal, setPassword, setUserInfo} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport {clearTrimValueEvent} from \"../../../utils/string\"\nimport './index.less'\nimport UploadLogo from './uploadLogo'\nimport DocumentTitle from 'react-document-title'\nconst {TabPane} = Tabs;\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-07-14 - 17:30\n * 描述：个人信息管理\n */\n\n// 定义组件（ES6）\nclass Info extends Component {\n\n  pwdFormRef = React.createRef();\n\n  autographFormRef = React.createRef();\n\n  state = {\n      // 返回的个人数据\n      personalInfo: {},\n      // 页面加载中\n      loading: false,\n  };\n\n    /**\n     * 获取个人信息\n     * @returns {Promise<void>}\n     */\n    getPersonalInfo = async () => {\n        let _this = this;\n        // 在发请求前, 显示loading\n        _this.setState({loading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getPersonal();\n        // 在请求完成后, 隐藏loading\n        _this.setState({loading: false});\n        if (code === 0) {\n            _this.setState({\n                personalInfo: data\n            })\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /*\n    *对密码进行自定义验证\n    */\n    /*\n      用户名/密码的的合法性要求\n      1). 必须输入\n      2). 必须大于等于6位\n      3). 必须小于等于20位\n      4). 必须是英文、数字或下划线组成\n    */\n    validatePwd1 = (rule, value, callback) => {\n        // console.log(this.props.form.getFieldValue('password'));\n        // this.props.form.setFieldsValue({\n        //     password:1111111\n        // })\n        if (!value) {\n          return callback('密码必须输入')\n        } else if (value.length < 6) {\n          return callback('密码长度不能小于6位')\n        } else if (value.length > 20) {\n          return callback('密码长度不能大于20位')\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n          return callback('密码必须是英文、数字或下划线组成')\n        } else {\n          return callback() // 验证通过\n        }\n        // callback('xxxx') // 验证失败, 并指定提示的文本\n    };\n\n    validatePwd2 = (rule, value,callback) => {\n        // 提取第一个密码框的值\n        const password = this.pwdFormRef.current.getFieldValue('password1');\n        if (!value) {\n          return callback('密码必须输入')\n        } else if (value.length < 6) {\n          return callback('密码长度不能小于6位')\n        } else if (value.length > 20) {\n          return callback('密码长度不能大于20位')\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n          return callback('密码必须是英文、数字或下划线组成')\n        } else if (value !== password) {\n          return callback('您两次输入的密码不一致')\n        } else {\n          return callback() // 验证通过\n        }\n    };\n\n    // 提交修改密码表单\n    handlePwdSubmit = (e) => {\n      let _this = this;\n      // 阻止表单的默认提交\n      //e.preventDefault();\n      _this.pwdFormRef.current.validateFields(['password1', 'password2']).then(async value => {\n          // 在发请求前, 显示loading\n          _this.setState({loading: true});\n          let para = {\n              password: value.password2\n          };\n          const result = await setPassword(para);\n          // 在请求完成后, 隐藏loading\n          _this.setState({loading: false});\n          let {msg, code} = result;\n          if (code === 0) {\n              openNotificationWithIcon(\"success\", \"操作结果\", \"密码修改成功\");\n          } else {\n              openNotificationWithIcon(\"error\", \"错误提示\", msg);\n          }\n      }).catch(e => console.log(\"修改密码\",e));\n    };\n\n    // 提交修改个性签名表单\n    handleAutographSubmit = (e) => {\n        let _this = this;\n        // 阻止表单的默认提交\n        // e.preventDefault();\n        _this.autographFormRef.current.validateFields(['autograph']).then(async value => {\n          // 在发请求前, 显示loading\n          _this.setState({loading: true});\n          let para = {\n            autograph: value.autograph\n          };\n          const result = await setUserInfo(para);\n          // 在请求完成后, 隐藏loading\n          _this.setState({loading: false});\n          let {msg, code} = result;\n          if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"个性签名修改成功\");\n          } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n          }\n        }).catch(e => console.log(\"修改个性签名错误：\",e));\n    };\n\n    /**\n     * 初始化页面配置信息\n     */\n    componentDidMount() {\n        this.formItemLayout = {\n            labelCol: {span: 4},\n            wrapperCol: {span: 14},\n        };\n        this.buttonItemLayout = {\n            wrapperCol: {span: 14, offset: 4},\n        };\n        this.getPersonalInfo()\n    }\n\n\n    render() {\n        // 读取状态数据\n        const {personalInfo, loading} = this.state;\n        return (\n            <DocumentTitle title='个人信息'>\n                <section className=\"b-info-page\">\n                    <div className=\"mytips\">\n                        <p>修改前的提示：</p>\n                        <blockquote>\n                            <p>\n                                <i>1、查看资料栏目不允许修改。</i>\n                            </p>\n                            <p>\n                                <i>2、修改签名栏目，用户可以填写的签名最多字数不超过140个（含标点）。</i>\n                            </p>\n                            <p>\n                                <i>3、修改头像栏目，用户可以上传任意格式的图片，大小在5M以内。</i>\n                            </p>\n                            <p>\n                                <i>4、修改密码栏目，用户填写的密码两次必须一致，长度在6至20个字符内。</i>\n                            </p>\n                        </blockquote>\n                    </div>\n                    <Col span={24} className=\"b-info-page-form\">\n                        <Spin spinning={loading}>\n                            <Tabs defaultActiveKey=\"1\">\n                                <TabPane tab=\"查看资料\" key=\"1\">\n                                    <Card title=\"查看资料\" bordered={false} className=\"bk-transparent\">\n                                        <Form {...this.formItemLayout}>\n                                            <Form.Item label=\"用户名\" {...this.formItemLayout}>\n                                                <Input type='text' value={personalInfo.user} disabled={true}/>\n                                            </Form.Item>\n                                            <Form.Item label=\"性别\" {...this.formItemLayout}>\n                                                <Input type='text' value={personalInfo.sex} disabled={true}/>\n                                            </Form.Item>\n                                            <Form.Item label=\"邮箱\" {...this.formItemLayout}>\n                                                <Input type='text' value={personalInfo.email} disabled={true}/>\n                                            </Form.Item>\n                                            <Form.Item label=\"qq\" {...this.formItemLayout}>\n                                                <Input type='text' value={personalInfo.qq} disabled={true}/>\n                                            </Form.Item>\n                                            <Form.Item label=\"phone\" {...this.formItemLayout}>\n                                                <Input type='text' value={personalInfo.phone} disabled={true}/>\n                                            </Form.Item>\n                                            <Form.Item label=\"生日\" {...this.formItemLayout}>\n                                                <Input type='text' value={personalInfo.birthday} disabled={true}/>\n                                            </Form.Item>\n                                            <Form.Item label=\"故乡\" {...this.formItemLayout}>\n                                                <Input type='text' value={personalInfo.hometown} disabled={true}/>\n                                            </Form.Item>\n                                        </Form>\n                                    </Card>\n                                </TabPane>\n                                <TabPane tab=\"修改签名\" key=\"2\">\n                                    <Card title=\"修改签名\" bordered={false} className=\"bk-transparent\">\n                                        <Form {...this.formItemLayout} ref={this.autographFormRef} onFinish={this.handleAutographSubmit}>\n                                            <Form.Item label=\"个性签名\" {...this.formItemLayout} getValueFromEvent={ (e) => clearTrimValueEvent(e)} name='autograph' initialValue={personalInfo.autograph} rules={[{required: true, message: '请输入个性签名'},{min: 1, message: '长度在 1 到 140 个字符'},{max: 140, message: '长度在 1 到 140 个字符'}]}>\n                                              <Input.TextArea showCount maxLength={140} autosize={{minRows: 4, maxRows: 6}}/>\n                                            </Form.Item>\n                                            <Form.Item {...this.buttonItemLayout}>\n                                                <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                                            </Form.Item>\n                                        </Form>\n                                    </Card>\n                                </TabPane>\n                                <TabPane tab=\"修改头像\" key=\"3\">\n                                    <Card title=\"修改头像\" bordered={false} className=\"bk-transparent\">\n                                        <UploadLogo/>\n                                    </Card>\n                                </TabPane>\n                                <TabPane tab=\"修改密码\" key=\"4\">\n                                    <Card title=\"修改密码\" bordered={false} className=\"bk-transparent\">\n                                        <Form {...this.formItemLayout} ref={this.pwdFormRef} onFinish={this.handlePwdSubmit}>\n                                            <Form.Item label=\"请输入密码\" {...this.formItemLayout} getValueFromEvent={ (e) => clearTrimValueEvent(e)} name='password1' rules={[{validator: this.validatePwd1}]}>\n                                              <Input.Password/>\n                                            </Form.Item>\n                                            <Form.Item label=\"请再次输入密码\" {...this.formItemLayout} getValueFromEvent={ (e) => clearTrimValueEvent(e)} name='password2' rules={[{validator: this.validatePwd2}]}>\n                                              <Input.Password/>\n                                            </Form.Item>\n                                            <Form.Item {...this.buttonItemLayout}>\n                                                <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                                            </Form.Item>\n                                        </Form>\n                                    </Card>\n                                </TabPane>\n                            </Tabs>\n                        </Spin>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\nexport default Info\n","import React, {Component} from 'react';\nimport {Col, Form, Button, Table, DatePicker, Select} from 'antd';\nimport {getLogList, getLogType, downloadLogExcel} from '../../../api'\nimport {openNotificationWithIcon} from '../../../utils/window'\nimport {SearchOutlined,ReloadOutlined,FileExcelOutlined} from '@ant-design/icons';\nimport moment from 'moment';\nimport axios from 'axios'\nimport DocumentTitle from 'react-document-title'\nimport './index.less'\nimport {disabledDate} from \"../../../utils/var\"\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-07-09 - 22:31\n * 描述：日志查看\n */\nconst {RangePicker} = DatePicker;\nconst {Option} = Select;\n\n// 定义组件（ES6）\nclass Logs extends Component {\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n        filters: {\n            // 查询的日期\n            date: null,\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n            selectType: ''//用户选择的日志类别\n        },\n        type: [],// 系统返回的日志类别\n    };\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '用户',\n                dataIndex: 'user', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '操作详情',\n                dataIndex: 'logType.describe', // 显示数据对应的属性名\n                render: (text, record) => <span>{!record.logType?'-':record.logType.describe}</span>,\n            },\n            {\n                title: 'IP',\n                dataIndex: 'ip', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '城市',\n                dataIndex: 'city', // 显示数据对应的属性名\n            },\n            {\n                title: '日期',\n                dataIndex: 'date', // 显示数据对应的属性名\n                align:'center',\n            }\n        ]\n    };\n\n    /**\n     * 获取日志类别\n     * @returns {Promise<void>}\n     */\n    getTypeData = async () => {\n        let _this = this;\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getLogType();\n        if (code === 0) {\n            // 利用更新状态的回调函数，渲染下拉选框\n            let type = [];\n            type.push((<Option key={-1} value=\"\">请选择</Option>));\n            data.forEach(item => {\n                type.push((<Option key={item.type} value={item.type}>{item.describe}</Option>));\n            });\n            _this.setState({\n                type\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 获取日志数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let _this = this;\n        let para = {\n            nowPage: _this.state.nowPage,\n            pageSize: _this.state.pageSize,\n            type: _this.state.filters.selectType,\n            beginTime: _this.state.filters.beginTime,\n            endTime: _this.state.filters.endTime,\n        };\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getLogList(para);\n        // 在请求完成后, 隐藏loading\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            _this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.beginTime = null;\n        filters.endTime = null;\n        filters.selectType = '';\n        _this.setState({\n            nowPage: 1,\n            filters: filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        let _this = this;\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        _this.setState({\n            pageSize: pageSize,\n            nowPage: 1,\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        let _this = this;\n        _this.setState({\n            nowPage: current,\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== ''){\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        }else{\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            filters,\n            nowPage: 1,\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    // 日志选框发生改变\n    onChangeType = (value) => {\n        let _this = this;\n        let {filters} = _this.state;\n        filters.selectType = value;\n        _this.setState({\n            filters,\n            nowPage: 1,\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    exportExcel = () => {\n        let _this = this;\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        let para = {\n            type: this.state.filters.selectType,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n        };\n        axios({\n            method: \"GET\",\n            url: downloadLogExcel,   //接口地址\n            params: para,           //接口参数\n            responseType: 'blob',\n            //上面这个参数不加会乱码，据说{responseType: 'arraybuffer'}也可以\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(function (res) {\n                _this.setState({listLoading: false});\n                let fileName = '操作日志报表.xlsx';//excel文件名称\n                let blob = new Blob([res.data], {type: 'application/x-xlsx'});   //word文档为msword,pdf文档为pdf，excel文档为x-xls\n                if (window.navigator.msSaveOrOpenBlob) {\n                    navigator.msSaveBlob(blob, fileName);\n                } else {\n                    let link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }\n            })\n            .catch(function (res) {\n                _this.setState({listLoading: false});\n                openNotificationWithIcon(\"error\", \"错误提示\", \"导出日志报表失败\");\n            });\n    };\n\n\n    /*\n    *为第一次render()准备数据\n    * 因为要异步加载数据，所以方法改为async执行\n    */\n  componentDidMount() {\n      // 初始化日志类别数据\n      this.getTypeData();\n      // 初始化表格属性设置\n      this.initColumns();\n      // 加载页面数据\n      this.getDatas();\n  };\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading,filters, type} = this.state;\n        let {beginTime,endTime} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null){\n            rangeDate = [moment(beginTime),moment(endTime)]\n        } else {\n            rangeDate = [null,null]\n        }\n        return (\n            <DocumentTitle title='操作日志'>\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item label=\"操作类别:\">\n                                <Select value={filters.selectType} className=\"queur-type\" showSearch onChange={this.onChangeType}\n                                        placeholder=\"请选择操作类别\">\n                                    {type}\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"操作时间:\">\n                                <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                    <SearchOutlined/>查询\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                    <ReloadOutlined/>重置\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.exportExcel}>\n                                    <FileExcelOutlined/>导出\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" rowKey=\"id\" bordered loading={listLoading} columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default Logs;\n","import React, {Component } from 'react';\nimport {Row, Col, Input, InputNumber, Table, DatePicker, Tooltip, Popconfirm, Select, List, Modal} from 'antd';\nimport {PlusOutlined,CloseOutlined,ExclamationCircleOutlined} from '@ant-design/icons';\nimport memoryUtils from \"../../../utils/memoryUtils\";\nimport './detail.less'\nimport {Redirect} from \"react-router-dom\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport {getFinancialType, getFinancialAmount, applyTransaction} from \"../../../api\";\nimport {formatMoney} from '../../../utils/var'\nimport moment from 'moment';\n/*\n * 文件名：declare.jsx\n * 作者：saya\n * 创建日期：2021/1/3 - 下午5:38\n * 描述：收支申报\n */\nconst {Option} = Select;\n// 定义组件（ES6）\nclass Declare extends Component {\n  state = {\n    visibleModal:false,\n    // 是否显示加载\n    listLoading: false,\n    financialType:[],\n    financialAmount:[],\n    currentUser:'',\n    bill: {\n      tradeType:null,\n      transactionAmount:null,\n      tradeDate: null,\n      currencyNumber:0.0,\n      deposited:0.0,\n      expenditure:0.0\n    },\n    infoList: [{\n      index:1,\n      flog: 1,\n      source: null,\n      currencyNumber: 0,\n      currencyDetails: ''\n    }]\n  };\n\n  /**\n   * 初始化Table所有列的数组\n   */\n  initColumns = () => {\n    this.columns = [\n      {\n        title: '序号',\n        render: (text, record,index) => (index+1),\n        align:'center',\n      },\n      {\n        title: '用户',\n        dataIndex: 'source',\n        render:(value) => (!value ? this.state.currentUser:value),\n        align:'center',\n      },\n      {\n        title: '交易类型',\n        dataIndex: 'flog', // 显示数据对应的属性名\n        align:'center',\n        render: (text, record, index) => {\n          return <Select value={text} bordered={false} onChange={(e) => this.onChangeFlag(e,index)}>\n            <Option value={1}>收入</Option>\n            <Option value={2}>支出</Option>\n          </Select>\n        }\n      },\n      {\n        title: '交易说明',\n        dataIndex: 'currencyDetails', // 显示数据对应的属性名\n        editable: true,\n        render: (text, record, index) => {\n          return <Input type=\"text\" value={text} maxLength={15} bordered={false} onChange={(e) => this.inputChange(e, record, index, 'currencyDetails')}/>\n        }\n      },\n      {\n        title: '交易金额（元）',\n        dataIndex: 'currencyNumber', // 显示数据对应的属性名\n        align:'right',\n        render: (text, record, index) => {\n          return <InputNumber value={text} className='input-currencyNumber' ordered={false} min={0} parser={value => value.replace(/\\s?|(,*)/g, '')} onChange={(e) => this.inputChange(e, record, index, 'currencyNumber')}/>\n        }\n      },\n      {\n        title: '操作',\n        align:'center',\n        render: (text, record,index) =>\n          this.state.infoList.length > 1 ? (\n            <Popconfirm title=\"确定删除?\" onConfirm={() => this.deleteLine(index)}>\n              <CloseOutlined/>\n            </Popconfirm>\n          ) : <Tooltip placement=\"left\" title=\"填报的明细必须要有1条以上\">\n            <ExclamationCircleOutlined/>\n          </Tooltip>,\n      },\n    ]\n  };\n\n  /**\n   * 继续添加财政明细\n   */\n  continueAdd = () => {\n    let {infoList,currentUser} = this.state;\n    let item = {\n      index:infoList[infoList.length-1].index+1,\n      flog: 1,\n      source:currentUser,\n      currencyNumber: 0,\n      currencyDetails: ''\n    };\n    infoList = infoList.concat(item);\n    this.setState({infoList})\n  };\n\n  /**\n   * 删除明细添加行\n   * @param index\n   */\n  deleteLine = (index) => {\n    const _this = this;\n    let infoList = _this.state.infoList;\n    if(infoList.length === 1){\n      openNotificationWithIcon(\"error\", \"错误提示\", '每一笔流水申请下边必须要有一条详情记录');\n    }else{\n      infoList = infoList.filter((item, key) => key !== index);\n      _this.setState({ infoList },function () {\n        _this.renewList()\n      });\n    }\n  };\n\n  /**\n   * input改变事件\n   * @param e\n   * @param record\n   * @param index\n   * @param field\n   */\n  inputChange = (e, record, index, field) => {\n    const _this = this;\n    let { infoList } = _this.state;\n    if ('currencyNumber' === field){\n      // 修改了交易金额\n      // 对于 InputNumber 类型的输入框需要另类处理\n      let currencyNumber = e;\n      if (typeof(currencyNumber) === \"string\"){\n        currencyNumber = currencyNumber.replace(/[^0-9.]/ig,\"\");\n      }\n      // 替换后再次检查\n      if ('' === currencyNumber) {\n        currencyNumber = 0;\n      }\n      // 核对本次修改了值和上次是否一致，如果不一致需要触发重新计算\n      if(infoList[index].currencyNumber !== currencyNumber){\n        infoList[index].currencyNumber = currencyNumber\n      }\n      infoList[index].currencyNumber = currencyNumber;\n      _this.setState({ infoList },function () {\n        _this.renewList()\n      });\n    }else{\n      // 修改了摘要\n      infoList[index][field] = (e.target.value).replace(/(^\\s*)|(\\s*$)/g, '');\n      _this.setState({ infoList })\n    }\n  };\n\n  /**\n   * 交易类型改变事件\n   * @param value\n   * @param index\n   */\n  onChangeFlag = (value,index) => {\n    let _this = this;\n    let { infoList } = this.state;\n    if (infoList[index].flog !== value){\n      infoList[index].flog = value;\n      _this.setState({infoList},function () {\n        _this.renewList()\n      });\n    }\n  };\n\n  /**\n   * 获取所有的支付类别\n   */\n  initFinancialType = async () => {\n    let _this = this;\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getFinancialType();\n    if (code === 0) {\n      let type = [];\n      data.forEach(item => {\n        type.push((<Option key={item.id} value={item.id}>{item.transactionType}</Option>));\n      });\n      _this.setState({\n        financialType: type\n      })\n    } else {\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 获取所有的交易摘要\n   */\n  initFinancialAmount = async () => {\n    let _this = this;\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getFinancialAmount();\n    if (code === 0) {\n      let type = [];\n      data.forEach(item => {\n        type.push((<Option key={item.id} value={item.id}>{item.tag}</Option>));\n      });\n      _this.setState({\n        financialAmount: type\n      })\n    } else {\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 支付类型 或者 摘要 选择框改变事件\n   * @param value\n   * @param field\n   */\n  onChangeTypeAmount = (value,field) => {\n    let _this = this;\n    let { bill } = this.state;\n    bill[field] = value;\n    _this.setState({bill});\n  };\n\n  handleCancel = () => {\n    this.setState({visibleModal: false});\n  };\n\n  handleDisplay = () => {\n    let _this = this;\n    _this.setState({\n      visibleModal: true\n    });\n  };\n\n  /**\n   * 只能选择今天及其以前的日期\n   * @param current\n   * @returns {*|boolean}\n   */\n  disabledDate = (current) => {\n    return current && current > moment();\n  };\n\n  /**\n   * 申报时间改变事件\n   * @param date\n   * @param dateString\n   */\n  tradeDateChange = (date, dateString) => {\n    const _this = this;\n    let { bill } = _this.state;\n    bill.tradeDate = date;//!dateString?null:moment(dateString);\n    _this.setState({bill});\n  };\n\n  /**\n   * 更新列表数据\n   */\n  renewList = () => {\n    let _this = this;\n    let { infoList,bill } = _this.state;\n    let currencyNumber = 0.0;\n    let deposited = 0.0;\n    let expenditure = 0.0;\n    infoList.forEach(item => {\n      if(1 === item.flog){\n        deposited += item.currencyNumber;\n      }else{\n        expenditure += item.currencyNumber;\n      }\n      currencyNumber += item.currencyNumber;\n    });\n    bill.currencyNumber = currencyNumber;\n    bill.deposited = deposited;\n    bill.expenditure = expenditure;\n    _this.setState({bill})\n  };\n\n  /**\n   * 递交申请\n   */\n  handleApply = async () => {\n    const _this = this;\n    let { infoList,bill } = _this.state;\n    if (!bill.tradeDate) {\n      openNotificationWithIcon(\"warning\", \"提示\", '请选择交易日期');\n      return\n    }\n    //bill.tradeDate = (bill.tradeDate).toString();\n    if (!bill.tradeType) {\n      openNotificationWithIcon(\"warning\", \"提示\", '请选择交易方式');\n      return\n    }\n    if (!bill.transactionAmount) {\n      openNotificationWithIcon(\"warning\", \"提示\", '请选择交易摘要');\n      return\n    }\n    for(let index = 0 ;index < infoList.length; index++){\n      let item = infoList[index];\n      if(!item.currencyDetails){\n        openNotificationWithIcon(\"warning\", \"提示\", `您在第${item.index}行的摘要还未填写`);\n        return\n      }\n      if(item.currencyNumber <= 0){\n        openNotificationWithIcon(\"warning\", \"提示\", `在您填写的第${item.index}行中，发现无效的交易金额(交易金额必须大于0)`);\n        return\n      }\n    }\n    let param = {\n      tradeType: bill.tradeType,\n      tradeDate: (bill.tradeDate).format('YYYY-MM-DD'),\n      transactionAmount: bill.transactionAmount,\n      infoList: infoList\n    };\n    const {msg, code} = await applyTransaction(param);\n    if (code === 0) {\n      _this.resetForm();\n      _this.props.refreshList();\n      openNotificationWithIcon(\"success\", \"操作结果\", \"申报成功\");\n      _this.handleCancel();\n    } else {\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 重置表单\n   */\n  resetForm = () => {\n    const bill = {\n      tradeType:null,\n          transactionAmount:null,\n          tradeDate: null,\n          currencyNumber:0.0,\n          deposited:0.0,\n          expenditure:0.0\n    };\n    const infoList =[{\n      index:1,\n      flog: 1,\n      currencyNumber: 0,\n      currencyDetails: ''\n    }];\n    this.setState({bill,infoList})\n  };\n\n\n  /**\n   * 初始化页面配置信息\n   */\n  componentDidMount() {\n    // 初始化表格属性设置\n    this.initColumns();\n    this.props.onRef(this);\n    this.initFinancialType();\n    this.initFinancialAmount();\n    const user = memoryUtils.user;\n    // 如果内存没有存储user ==> 当前没有登陆\n    if (!user || !user.user) {\n      // 自动跳转到登陆(在render()中)\n      return <Redirect to='/login'/>\n    }\n    this.setState({currentUser:user.user.user})\n  };\n\n\n  render() {\n    const {visibleModal,bill, listLoading,infoList,financialType,financialAmount} = this.state;\n    return (\n        <Modal\n            title=\"流水申报\"\n            width=\"80%\"\n            visible={visibleModal}\n            okText='申报'\n            maskClosable={false}\n            onCancel={() => this.handleCancel()}\n            onOk={this.handleApply}>\n          <section className=\"transaction-detail\">\n            <Row className='detail-addLine'>\n              <Col span={6} offset={18}>\n                <Tooltip placement=\"left\" title=\"添加1行\">\n                  <PlusOutlined onClick={this.continueAdd}/>\n                </Tooltip>\n              </Col>\n            </Row>\n            <Row className=\"detail-header\">\n              <Col span={12} offset={6}>\n                收支明细\n              </Col>\n            </Row>\n            <Row className=\"detail-tradeDate\">\n              <Col span={5} offset={19}>\n                <span className='input-label'>交易日期：</span><DatePicker value={bill.tradeDate} disabledDate={this.disabledDate} onChange={this.tradeDateChange} bordered={false} format={\"YYYY-MM-DD\"} placeholder=\"交易日期\"/>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col className=\"gutter-row\" span={8}>\n                <div><span className='input-label'>收支总额：</span>{formatMoney(!bill?0:bill.currencyNumber)}元</div>\n              </Col>\n              <Col className=\"gutter-row\" span={8}>\n                <div><span className='input-label'>收入总额：</span>{formatMoney(!bill?0:bill.deposited)}元</div>\n              </Col>\n              <Col className=\"gutter-row\" span={8}>\n                <div><span className='input-label'>支出总额：</span>{formatMoney(!bill?0:bill.expenditure)}元</div>\n              </Col>\n              <Col className=\"gutter-row\" span={8}>\n                <div>\n                  <span className='input-label'>交易方式：</span>\n                  <Select value={bill.tradeType} className='declare-select' bordered={false} onChange={(e) => this.onChangeTypeAmount(e,'tradeType')}>\n                    {financialType}\n                  </Select>\n                </div>\n              </Col>\n              <Col className=\"gutter-row\" span={8}>\n                <div>\n                  <span className='input-label'>交易摘要：</span>\n                  <Select value={bill.transactionAmount} className='declare-select' bordered={false} onChange={(e) => this.onChangeTypeAmount(e,'transactionAmount')}>\n                    {financialAmount}\n                  </Select>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <Table size=\"middle\" className='detail-grid' rowKey=\"index\" bordered pagination={false} loading={listLoading} columns={this.columns} dataSource={!infoList?null:infoList}/>\n              </Col>\n            </Row>\n            <Row>\n              <List size=\"small\" split={false} header={'注意：'}>\n                <List.Item>1、请依次从第一条开始，逐上而下填写，中间不要跳过空白行；</List.Item>\n                <List.Item>2、同一天可以申报多次；</List.Item>\n                <List.Item>3、同一笔流水申请只能对应一种交易方式；</List.Item>\n                <List.Item>4、一笔流水下面必须有一条交易明细，最多不超过十条；</List.Item>\n              </List>\n            </Row>\n          </section>\n        </Modal>\n    );\n  }\n}\n\n// 对外暴露\nexport default Declare;\n","import React, { Component } from 'react';\nimport {Row, Col, Table, Modal} from 'antd';\nimport {getTransactionDetail} from \"../../../api\";\nimport {openNotificationWithIcon,showLoading} from \"../../../utils/window\";\nimport {formatMoney} from '../../../utils/var'\nimport moment from 'moment';\n/*\n * 文件名：detail.jsx\n * 作者：saya\n * 创建日期：2021/1/3 - 下午1:59\n * 描述：账单详情\n */\n\n/**\n * 由于在调用浏览器的打印功能时，会丢失外部的css样式，针对这个问题，统一写成内联样式\n */\nconst detailHeader = {\n  'height': '5em',\n  'display': 'flex',\n  'alignItems': 'center',\n  'justifyItems': 'center',\n  'textAlign': 'center',\n  'fontSize': '1.4em'\n};\n\nconst detailTradeNumber = {\n  'display': 'flex',\n  'alignItems': 'center',\n  'justifyItems': 'left',\n  'textAlign': 'left',\n  'fontSize': '1.1em'\n};\n\nconst detailTradeDate = {\n  'height': '4em',\n  'display': 'flex',\n  'alignItems': 'center',\n  'justifyItems': 'left',\n  'textAlign': 'left',\n  'fontSize': '1.1em',\n};\n\nconst inputLabel = {\n  'fontWeight': 'bold'\n};\n\nconst tableFooter = {\n  'fontSize':'0.4em'\n};\n\nconst detailGrid = {\n  'paddingBottom': '0.5em'\n};\n\n// 定义组件（ES6）\nclass BillDetail extends Component {\n\n  state = {\n    // 返回的账单数据\n    bill: null,\n    // 是否显示加载\n    listLoading: false,\n    tradeId: -1,\n    visibleModal:false\n  };\n\n  /**\n  * 初始化Table所有列的数组\n  */\n  initColumns = () => {\n    this.columns = [\n      {\n        title: '编号',\n        dataIndex: 'id', // 显示数据对应的属性名\n        align:'center',\n      },\n      {\n        title: '用户',\n        render:() => (!this.state.bill?'-':this.state.bill.source),\n        align:'center',\n      },\n      {\n        title: '交易类型',\n        align:'center',\n        render: (text, record) => {\n          if (record.flog === 1) {\n            return '收入'\n          } else if (record.flog === 2) {\n            return '支出'\n          } else {\n            return '未知'\n          }\n        }\n      },\n      {\n        title: '交易说明',\n        dataIndex: 'currencyDetails', // 显示数据对应的属性名\n      },\n      {\n        title: '交易金额（元）',\n        dataIndex: 'currencyNumber', // 显示数据对应的属性名\n        align:'right',\n        render:(value,row) => (formatMoney(row.currencyNumber))\n      }\n    ]\n  };\n\n  /**\n   * 获取财政列表数据\n   * @returns {Promise<void>}\n   */\n  getDatas = async () => {\n    let para = {\n      tradeId: this.state.tradeId\n    };\n    // 在发请求前, 显示loading\n    this.setState({listLoading: showLoading()});\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getTransactionDetail(para);\n    // 在请求完成后, 隐藏loading\n    this.setState({listLoading: false});\n    if (code === 0) {\n      this.setState({\n        bill: data\n      });\n    } else {\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  handleCancel = () => {\n    this.setState({visibleModal: false});\n  };\n\n  handlePrint = () => {\n    window.document.body.innerHTML = window.document.getElementById('billDetails').innerHTML;\n    window.print();\n    window.location.reload();\n  };\n\n  handleDisplay = (val) => {\n    let _this = this;\n    _this.setState({\n      tradeId: val,\n      visibleModal: true\n    },function () {\n      // 执行初始化加载页面数据\n      _this.getDatas()\n    });\n  };\n\n\n  /**\n   * 初始化页面配置信息\n   */\n  componentDidMount() {\n    // 初始化表格属性设置\n    this.initColumns();\n    // 加载页面数据\n    const _this = this;\n    _this.props.onRef(_this);\n    _this.setState({bill:null})\n  };\n\n  render() {\n    const {tradeId, bill, listLoading,visibleModal} = this.state;\n    return (\n        <Modal\n            title='收支详情'\n            width=\"80%\"\n            visible={visibleModal}\n            onOk={() => this.handlePrint()}\n            onCancel={() => this.handleCancel()}\n            cancelText='取消'\n            okText='打印'>\n          <section className=\"transaction-detail\" id='billDetails'>\n            <Row style={detailHeader}>\n              <Col span={12} offset={6}>\n                {!bill||!bill.tradeDate?'-':moment(bill.tradeDate).format('YYYY年MM月DD日')}收支明细\n              </Col>\n            </Row>\n            <Row style={detailTradeNumber}>\n              <Col span={5} offset={19}>\n                <span style={inputLabel}>收支单号：</span>{tradeId}\n              </Col>\n            </Row>\n            <Row style={detailTradeDate}>\n              <Col span={5} offset={19}>\n                <span style={inputLabel}>交易日期：</span>{!bill?'-':moment(bill.tradeDate).format('YYYY年MM月DD日')}\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col span={8}>\n                <div><span style={inputLabel}>收支总额：</span>{formatMoney(!bill?0:bill.currencyNumber)}元</div>\n              </Col>\n              <Col span={8}>\n                <div><span style={inputLabel}>收入总额：</span>{formatMoney(!bill?0:bill.deposited)}元</div>\n              </Col>\n              <Col span={8}>\n                <div><span style={inputLabel}>支出总额：</span>{formatMoney(!bill?0:bill.expenditure)}元</div>\n              </Col>\n              <Col span={8}>\n                <div><span style={inputLabel}>交易方式：</span>{!bill||!bill.tradeTypeEntity?'-':bill.tradeTypeEntity.transactionType}</div>\n              </Col>\n              <Col span={8}>\n                <div><span style={inputLabel}>交易摘要：</span>{!bill||!bill.tradeAmountEntity?'-':bill.tradeAmountEntity.tag}</div>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <Table size=\"middle\" style={detailGrid} rowKey=\"id\" bordered pagination={false} loading={listLoading} columns={this.columns} dataSource={!bill?null:bill.infoList}/>\n              </Col>\n            </Row>\n            <Row>\n              <Col style={tableFooter} span={6}>\n                <div><span style={inputLabel}>填报人：</span>{!bill?'-':bill.source}</div>\n              </Col>\n              <Col style={tableFooter} span={6}>\n                <div><span style={inputLabel}>填报时间：</span>{!bill||!bill.createTime?'-':moment(bill.createTime).format('YYYY年MM月DD日 HH:mm:ss')}</div>\n              </Col>\n              <Col style={tableFooter} span={6}>\n                <div><span style={inputLabel}>最后修改时间：</span>{!bill||!bill.updateTime?'-':moment(bill.updateTime).format('YYYY年MM月DD日 HH:mm:ss')}</div>\n              </Col>\n              <Col style={tableFooter} span={6}>\n                <div><span style={inputLabel}>打印时间：</span>{moment().format('YYYY年MM月DD日 HH:mm:ss')}</div>\n              </Col>\n            </Row>\n          </section>\n        </Modal>\n    );\n  }\n}\n\n// 对外暴露\nexport default BillDetail;\n","import React, {Component} from 'react';\nimport {formatMoney,deepClone} from \"../../../utils/var\";\nimport {openNotificationWithIcon, showLoading} from \"../../../utils/window\";\nimport {Redirect} from \"react-router-dom\";\nimport {\n    getFinancialType,\n    getFinancialAmount,\n    getTransactionDetail,\n    deleteTransactioninfo, insertTransactioninfo, updateTransactioninfo, updateTransaction\n} from \"../../../api\";\nimport {Col, DatePicker, Input, InputNumber, Modal, Popconfirm, Row, Select, Table, Tooltip} from \"antd\";\nimport moment from 'moment';\nimport {CloseOutlined, ExclamationCircleOutlined, PlusOutlined,CheckOutlined} from \"@ant-design/icons\";\nimport memoryUtils from \"../../../utils/memoryUtils\";\n\n/*\n * 文件名：renew.jsx\n * 作者：liunengkai\n * 创建日期：1/10/21 - 11:15 AM\n * 描述：修改申报\n */\nconst {Option} = Select;\n// 定义组件（ES6）\nclass Renew extends Component {\n\n    state = {\n        // 返回的账单数据，以便对比\n        bill: null,\n        // 用户修改中的账单数据\n        newBill: null,\n        // 是否显示加载\n        listLoading: false,\n        tradeId: -1,\n        visibleModal: false,\n        financialType:[],\n        financialAmount:[],\n        currentUser:''\n    };\n\n    /**\n     * 初始化Table所有列的数组\n     */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '序号',\n                render: (text, record,index) => (index+1),\n                align:'center',\n            },\n            {\n                title: '用户',\n                dataIndex: 'source',\n                align:'center',\n                render:(value) => (!value ? (!this.state.newBill || !this.state.newBill.source?'': this.state.newBill.source):value),\n            },\n            {\n                title: '交易类型',\n                dataIndex: 'flog', // 显示数据对应的属性名\n                align:'center',\n                render: (text, record, index) => {\n                    return <Select value={text} bordered={false} onChange={(e) => this.onChangeFlag(e,index)}>\n                        <Option value={1}>收入</Option>\n                        <Option value={2}>支出</Option>\n                    </Select>\n                }\n            },\n            {\n                title: '交易说明',\n                dataIndex: 'currencyDetails', // 显示数据对应的属性名\n                editable: true,\n                render: (text, record, index) => {\n                    return <Input type=\"text\" value={text} maxLength={15} bordered={false} onChange={(e) => this.inputChange(e, record, index, 'currencyDetails')}/>\n                }\n            },\n            {\n                title: '交易金额（元）',\n                dataIndex: 'currencyNumber', // 显示数据对应的属性名\n                align:'right',\n                render: (text, record, index) => {\n                    return <InputNumber value={text} className='input-currencyNumber' ordered={false} min={0} parser={value => value.replace(/\\s?|(,*)/g, '')} onChange={(e) => this.inputChange(e, record, index, 'currencyNumber')}/>\n                }\n            },\n            {\n                title: '操作',\n                align:'center',\n                render: (text, record,index) =>{\n                    let newBill = this.state.newBill;\n                    let infoList = !newBill || !newBill.infoList ? [] : newBill.infoList;\n                    const deleteControl = infoList.length > 1 ? (\n                        <Popconfirm title=\"确定删除?\" onConfirm={() => this.deleteLine(index)}>\n                            <CloseOutlined/>\n                        </Popconfirm>\n                    ) : <Tooltip placement=\"left\" title=\"填报的明细必须要有1条以上\">\n                        <ExclamationCircleOutlined/>\n                    </Tooltip>;\n                    const saveControl = <Popconfirm title=\"确定提交保存?\" onConfirm={() => this.renewLine(index)}>\n                        <CheckOutlined />\n                    </Popconfirm>;\n                    return <div> {saveControl} &nbsp; {deleteControl} </div>;\n                }\n            }\n        ]\n    };\n\n    /**\n     * 获取财政列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            tradeId: this.state.tradeId\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: showLoading()});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getTransactionDetail(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            this.setState({\n                bill: data,\n                newBill: deepClone(data)\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    handleCancel = () => {\n        this.setState({visibleModal: false});\n    };\n\n    handleDisplay = (val) => {\n        let _this = this;\n        _this.setState({\n            tradeId: val,\n            visibleModal: true\n        },function () {\n            // 执行初始化加载页面数据\n            _this.getDatas()\n        });\n    };\n\n    /**\n     * 继续添加财政明细\n     */\n    continueAdd = () => {\n        const _this = this;\n        let newBill = _this.state.newBill;\n        const currentUser = _this.state.currentUser;\n        let infoList = !newBill || !newBill.infoList ? [] : newBill.infoList;\n        let item = {\n            id:(infoList[infoList.length-1].id+1),\n            flog: 1,\n            source:currentUser,\n            currencyNumber: 0,\n            currencyDetails: ''\n        };\n        infoList = infoList.concat(item);\n        newBill.infoList = infoList;\n        this.setState({newBill})\n    };\n\n    /**\n     * 删除明细添加行\n     * @param index\n     */\n    deleteLine = (index) => {\n        const _this = this;\n        let {newBill} = _this.state;\n        let infoList = !newBill || !newBill.infoList ? [] : newBill.infoList;\n        if(infoList.length === 1){\n            openNotificationWithIcon(\"error\", \"错误提示\", '每一笔流水申请下边必须要有一条详情记录');\n        }else{\n            const dependDelete = deepClone(infoList[index]);\n            let findFlag = !dependDelete || !dependDelete.tradeId?false:dependDelete.tradeId;\n            if (findFlag) {\n                _this.deleteTransactionItem(dependDelete);\n            }else{\n                infoList = infoList.filter((item, key) => key !== index);\n                newBill.infoList = infoList;\n                _this.setState({ newBill },function () {\n                    _this.renewList();\n                });\n            }\n        }\n    };\n\n    /**\n     * 修改该行数据\n     * @param index\n     */\n    renewLine = (index) => {\n        const _this = this;\n        let {newBill} = _this.state;\n        let infoList = !newBill || !newBill.infoList ? [] : newBill.infoList;\n        const dependSave = deepClone(infoList[index]);\n        let findFlag = !dependSave || !dependSave.tradeId?false:dependSave.tradeId;\n        if (findFlag) {\n            // 执行修改操作\n            _this.renewTransactionItem(dependSave);\n        }else{\n            // 执行保存操作\n            _this.addTransactionItem(dependSave);\n        }\n    };\n\n\n    /**\n     * 只能选择今天及其以前的日期\n     * @param current\n     * @returns {*|boolean}\n     */\n    disabledDate = (current) => {\n        return current && current > moment();\n    };\n\n    /**\n     * 申报时间改变事件\n     * @param date\n     * @param dateString\n     */\n    tradeDateChange = (date, dateString) => {\n        const _this = this;\n        let { newBill } = _this.state;\n        newBill.tradeDate = date;//!dateString?null:moment(dateString);\n        _this.setState({newBill});\n    };\n\n    /**\n     * 交易类型改变事件\n     * @param value\n     * @param index\n     */\n    onChangeFlag = (value,index) => {\n        const _this = this;\n        let newBill = _this.state.newBill;\n        let infoList = !newBill || !newBill.infoList ? [] : newBill.infoList;\n        if (infoList[index].flog !== value){\n            infoList[index].flog = value;\n            newBill.infoList = infoList;\n            _this.setState({newBill},function () {\n                _this.renewList()\n            });\n        }\n    };\n\n    /**\n     * input改变事件\n     * @param e\n     * @param record\n     * @param index\n     * @param field\n     */\n    inputChange = (e, record, index, field) => {\n        const _this = this;\n        let newBill = _this.state.newBill;\n        let infoList = !newBill || !newBill.infoList ? [] : newBill.infoList;\n        if ('currencyNumber' === field){\n            // 修改了交易金额\n            // 对于 InputNumber 类型的输入框需要另类处理\n            let currencyNumber = e;\n            if (typeof(currencyNumber) === \"string\"){\n                currencyNumber = currencyNumber.replace(/[^0-9.]/ig,\"\");\n            }\n            // 替换后再次检查\n            if ('' === currencyNumber) {\n                currencyNumber = 0;\n            }\n            // 核对本次修改了值和上次是否一致，如果不一致需要触发重新计算\n            if(infoList[index].currencyNumber !== currencyNumber){\n                infoList[index].currencyNumber = currencyNumber\n            }\n            infoList[index].currencyNumber = currencyNumber;\n            newBill.infoList = infoList;\n            _this.setState({ newBill },function () {\n                _this.renewList()\n            });\n        }else{\n            // 修改了摘要\n            infoList[index][field] = (e.target.value).replace(/(^\\s*)|(\\s*$)/g, '');\n            newBill.infoList = infoList;\n            _this.setState({ newBill })\n        }\n    };\n\n\n    /**\n     * 获取所有的支付类别\n     */\n    initFinancialType = async () => {\n        const _this = this;\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getFinancialType();\n        if (code === 0) {\n            let type = [];\n            data.forEach(item => {\n                type.push((<Option key={item.id} value={item.id}>{item.transactionType}</Option>));\n            });\n            _this.setState({\n                financialType: type\n            })\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 获取所有的交易摘要\n     */\n    initFinancialAmount = async () => {\n        const _this = this;\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getFinancialAmount();\n        if (code === 0) {\n            let type = [];\n            data.forEach(item => {\n                type.push((<Option key={item.id} value={item.id}>{item.tag}</Option>));\n            });\n            _this.setState({\n                financialAmount: type\n            })\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 支付类型 或者 摘要 选择框改变事件\n     * @param value\n     * @param field\n     */\n    onChangeTypeAmount = (value,field) => {\n        let _this = this;\n        let { newBill } = this.state;\n        newBill[field] = value;\n        _this.setState({newBill});\n    };\n\n    /**\n     * 删除一条明细数据\n     * @param value\n     * @returns {Promise<void>}\n     */\n    deleteTransactionItem = async (value) => {\n        let para = {\n            id: value.id,\n            tradeId: value.tradeId\n        };\n        const {msg, code} = await deleteTransactioninfo(para);\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n            this.getDatas();\n            this.props.refreshList();\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 追加一条明细\n     * @param value\n     * @returns {Promise<void>}\n     */\n    addTransactionItem = async (value) => {\n        if(!value.currencyDetails){\n            openNotificationWithIcon(\"warning\", \"提示\", `请填写摘要`);\n            return\n        }\n        if(value.currencyNumber <= 0){\n            openNotificationWithIcon(\"warning\", \"提示\", `发现无效的交易金额(交易金额必须大于0)`);\n            return\n        }\n        const _this = this;\n        const tradeId = _this.state.tradeId;\n        let para = {\n            tradeId: tradeId,\n            flog: value.flog,\n            currencyNumber: value.currencyNumber,\n            currencyDetails: value.currencyDetails\n        };\n        const {msg, code} = await insertTransactioninfo(para);\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"添加流水明细成功\");\n            _this.getDatas();\n            _this.props.refreshList();\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 更新一条明细\n     * @param value\n     * @returns {Promise<void>}\n     */\n    renewTransactionItem = async (value) => {\n        if(!value.currencyDetails){\n            openNotificationWithIcon(\"warning\", \"提示\", `请填写摘要`);\n            return\n        }\n        if(value.currencyNumber <= 0){\n            openNotificationWithIcon(\"warning\", \"提示\", `发现无效的交易金额(交易金额必须大于0)`);\n            return\n        }\n        const _this = this;\n        let para = {\n            id: value.id,\n            tradeId: value.tradeId,\n            flog: value.flog,\n            currencyNumber: value.currencyNumber,\n            currencyDetails: value.currencyDetails\n        };\n        const {msg, code} = await updateTransactioninfo(para);\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"流水明细修改成功\");\n            _this.getDatas();\n            _this.props.refreshList();\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n\n    /**\n     * 更新列表数据\n     */\n    renewList = () => {\n        const _this = this;\n        let newBill = _this.state.newBill;\n        let infoList = !newBill || !newBill.infoList ? [] : newBill.infoList;\n        let currencyNumber = 0.0;\n        let deposited = 0.0;\n        let expenditure = 0.0;\n        infoList.forEach(item => {\n            if(1 === item.flog){\n                deposited += item.currencyNumber;\n            }else{\n                expenditure += item.currencyNumber;\n            }\n            currencyNumber += item.currencyNumber;\n        });\n        newBill.currencyNumber = currencyNumber;\n        newBill.deposited = deposited;\n        newBill.expenditure = expenditure;\n        _this.setState({newBill})\n    };\n\n\n    /**\n     * 提交到后台修改\n     */\n    handleEdit = async () => {\n        const _this = this;\n        let{bill,newBill} = _this.state;\n        if (!newBill.tradeDate) {\n            openNotificationWithIcon(\"warning\", \"提示\", '请选择交易日期');\n            return\n        }\n        if (!newBill.tradeType) {\n            openNotificationWithIcon(\"warning\", \"提示\", '请选择交易方式');\n            return\n        }\n        if (!newBill.transactionAmount) {\n            openNotificationWithIcon(\"warning\", \"提示\", '请选择交易摘要');\n            return\n        }\n        const format = 'YYYY-MM-DD';\n        const oldDate = moment(bill.tradeDate,format);\n        const newDate = moment(newBill.tradeDate,format);\n        if((!oldDate.isSame(newDate)) || (bill.tradeType !== newBill.tradeType) || (bill.transactionAmount !== newBill.transactionAmount)){\n            // 发生了变更\n            const param = {\n                tradeId: bill.tradeId,\n                tradeType: newBill.tradeType,\n                tradeDate: newDate.format('YYYY-MM-DD'),\n                transactionAmount: newBill.transactionAmount,\n            };\n            const {msg, code} = await updateTransaction(param);\n            if (code === 0) {\n                openNotificationWithIcon(\"success\", \"操作结果\", \"修改成功\");\n                _this.props.refreshList();\n            } else {\n                openNotificationWithIcon(\"error\", \"错误提示\", msg);\n            }\n        }else{\n            openNotificationWithIcon(\"warning\", \"操作驳回\", '在您本次提交保存中，您的交易日期、方式及摘要均未发生修改，保存操作已取消');\n        }\n    };\n\n    /**\n     * 初始化页面配置信息\n     */\n    componentDidMount() {\n      // 初始化表格属性设置\n      this.initColumns();\n        // 加载页面数据\n        const _this = this;\n        _this.props.onRef(_this);\n        _this.initFinancialType();\n        _this.initFinancialAmount();\n        const user = memoryUtils.user;\n        // 如果内存没有存储user ==> 当前没有登陆\n        if (!user || !user.user) {\n            // 自动跳转到登陆(在render()中)\n            return <Redirect to='/login'/>\n        }\n        _this.setState({\n            bill:null,\n            newBill:null,\n            currentUser:user.user.user\n        })\n    };\n\n    render() {\n        const {bill,tradeId, newBill, listLoading,visibleModal,financialType,financialAmount} = this.state;\n        return (\n            <Modal\n                title='收支详情'\n                width=\"80%\"\n                okText='保存'\n                visible={visibleModal}\n                maskClosable={false}\n                onCancel={() => this.handleCancel()}\n                onOk={this.handleEdit}>\n                <section className=\"transaction-detail\">\n                    <Row className='detail-addLine'>\n                        <Col span={5} offset={19}>\n                            <Tooltip placement=\"left\" title=\"添加1行\">\n                                <PlusOutlined onClick={this.continueAdd}/>\n                            </Tooltip>\n                        </Col>\n                    </Row>\n                    <Row className=\"detail-header\">\n                        <Col span={12} offset={6}>\n                          {!bill||!bill.tradeDate?'-':moment(bill.tradeDate).format('YYYY年MM月DD日')}收支明细\n                        </Col>\n                    </Row>\n                    <Row className='detail-tradeNumber'>\n                        <Col span={5} offset={19}>\n                            <span className='input-label'>收支单号：</span>{tradeId}\n                        </Col>\n                    </Row>\n                    <Row className=\"detail-tradeDate\">\n                        <Col span={5} offset={19}>\n                            <span className='input-label'>交易日期：</span><DatePicker value={!newBill||!newBill.tradeDate?null:moment(newBill.tradeDate)} disabledDate={this.disabledDate} onChange={this.tradeDateChange} bordered={false} format={\"YYYY-MM-DD\"} placeholder=\"交易日期\"/>\n                        </Col>\n                    </Row>\n                    <Row gutter={[12, 12]}>\n                        <Col className=\"gutter-row\" span={8}>\n                            <div><span className='input-label'>收支总额：</span>{formatMoney(!newBill?0:newBill.currencyNumber)}元</div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={8}>\n                            <div><span className='input-label'>收入总额：</span>{formatMoney(!newBill?0:newBill.deposited)}元</div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={8}>\n                            <div><span className='input-label'>支出总额：</span>{formatMoney(!newBill?0:newBill.expenditure)}元</div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={8}>\n                            <div>\n                                <span className='input-label'>交易方式：</span>\n                                <Select value={!newBill||!newBill.tradeType?null:newBill.tradeType} className='declare-select' bordered={false} onChange={(e) => this.onChangeTypeAmount(e,'tradeType')}>\n                                    {financialType}\n                                </Select>\n                            </div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={8}>\n                            <div>\n                                <span className='input-label'>交易摘要：</span>\n                                <Select value={!newBill||!newBill.transactionAmount?null:newBill.transactionAmount} className='declare-select' bordered={false} onChange={(e) => this.onChangeTypeAmount(e,'transactionAmount')}>\n                                    {financialAmount}\n                                </Select>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={24}>\n                            <Table size=\"middle\" className='detail-grid' rowKey=\"id\" bordered pagination={false} loading={listLoading} columns={this.columns} dataSource={!newBill?null:newBill.infoList}/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"gutter-row\" span={6}>\n                            <div><span className='input-label'>填报人：</span>{!bill||!bill.source?'-':bill.source}</div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={6}>\n                            <div><span className='input-label'>填报时间：</span>{!bill||!bill.createTime?'-':moment(bill.createTime).format('YYYY年MM月DD日 HH:mm:ss')}</div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={6}>\n                            <div><span className='input-label'>最后修改日期：</span>{!bill||!bill.updateTime?'-':moment(bill.updateTime).format('YYYY年MM月DD日 HH:mm:ss')}</div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={6}>\n                          <div><span className='input-label'>打印时间：</span>{moment().format('YYYY年MM月DD日 HH:mm:ss')}</div>\n                        </Col>\n                    </Row>\n                </section>\n            </Modal>\n        );\n    }\n}\n\n// 对外暴露\nexport default Renew;\n","import React, {Component} from 'react';\nimport {getTransactionList, getFinancialType, deleteTransaction, downTransaction, outTransactionInfoExcel} from '../../../api'\nimport {\n  SearchOutlined,\n  ReloadOutlined,\n  FileExcelOutlined,\n  PlusOutlined,\n  EditOutlined,\n  EyeOutlined,\n  DeleteOutlined} from '@ant-design/icons';\nimport DocumentTitle from 'react-document-title'\nimport moment from 'moment';\nimport {Button, Col, DatePicker, Form, Select, Table, Modal} from \"antd\";\nimport {openNotificationWithIcon,showLoading} from \"../../../utils/window\";\nimport BillDeclare from './declare'\nimport BillDetail from './detail'\nimport BillRenew from './renew'\nimport axios from \"axios\";\nimport {formatMoney,disabledDate} from '../../../utils/var'\n/*\n * 文件名：transaction.jsx\n * 作者：liunengkai\n * 创建日期：2019-08-27 - 21:46\n * 描述：流水申报\n */\nconst {RangePicker} = DatePicker;\nconst {Option} = Select;\n\n// 定义组件（ES6）\nclass Transaction extends Component {\n\n    billDetailRef = React.createRef();\n    billDeclareRef = React.createRef();\n    billRenewRef = React.createRef();\n\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n        filters: {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n            tradeType: ''//用户选择的交易类别\n        },\n        queryType: [],// 查询专用类别\n    };\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '流水号',\n                dataIndex: 'tradeId', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '收入金额',\n                dataIndex: 'deposited', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.deposited))\n            },\n            {\n                title: '支出金额',\n                dataIndex: 'expenditure',// 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.expenditure))\n            },\n            {\n                title: '交易方式',\n                dataIndex: 'tradeTypeEntity.transactionType',// 显示数据对应的属性名\n                align:'center',\n                render: (value, row) => (\n                  <span>{!row.tradeTypeEntity?'-':row.tradeTypeEntity.transactionType}</span>\n                ),\n            },\n            {\n                title: '摘要',\n                dataIndex: 'tradeAmountEntity.tag',// 显示数据对应的属性名\n                render: (value, row) => (\n                  <span>{!row.tradeAmountEntity ? '-' : row.tradeAmountEntity.tag}</span>\n                ),\n            },\n            {\n                title: '交易时间',\n                dataIndex: 'tradeDate', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '收支总额',\n                dataIndex: 'currencyNumber',// 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.currencyNumber))\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'updateTime', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '管理',\n                align:'center',\n                render: (value, row) => (\n                  <div>\n                    <Button type=\"primary\" onClick={() => this.openViewModal(row)} shape=\"circle\"\n                            icon={<EyeOutlined/>}/>\n                    &nbsp;\n                    <Button type=\"primary\" onClick={() => this.openEditModal(row)} shape=\"circle\"\n                            icon={<EditOutlined/>}/>\n                    &nbsp;\n                    <Button type=\"danger\" onClick={() => this.handleDelete(row)} shape=\"circle\"\n                            icon={<DeleteOutlined/>}/>\n                  </div>\n                ),\n            },\n        ]\n    };\n\n    /**\n     * 获取财政列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            tradeType: this.state.filters.tradeType,\n            nowPage: this.state.nowPage,\n            pageSize: this.state.pageSize,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: showLoading()});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getTransactionList(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 刷新\n     */\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.beginTime = null;\n        filters.endTime = null;\n        filters.tradeType = null;\n        _this.setState({\n            nowPage: 1,\n            filters: filters,\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        let _this = this;\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        _this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        let _this = this;\n        _this.setState({\n            nowPage: current,\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    /**\n     * 得到交易类别\n     */\n    initDatas = async () => {\n        let _this = this;\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getFinancialType();\n        if (code === 0) {\n            let type = [];\n            data.forEach(item => {\n                type.push((<Option key={item.id} value={item.id}>{item.transactionType}</Option>));\n            });\n            let copyType = [];\n            copyType.push(<Option key='-1' value=\"\">请选择</Option>);\n            copyType.push(type);\n            _this.setState({\n                queryType: copyType\n            })\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== '') {\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        } else {\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            filters,\n            nowPage: 1,\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    // 交易方式选框发生改变\n    onChangeType = (value) => {\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.tradeType = value;\n        _this.setState({\n            filters,\n            nowPage: 1,\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    /**\n     * 财务流水申报弹框事件\n     */\n    handleAddModal = () => {\n        const _this = this;\n        // 触发子组件的调用\n        _this.billDeclareRef.handleDisplay()\n    };\n\n    /**\n     * 预览流水详情\n     */\n    openViewModal = (value) => {\n        const _this = this;\n        // 触发子组件的调用\n        _this.billDetailRef.handleDisplay(value.tradeId)\n    };\n\n    /**\n     * 打开编辑弹窗\n     * @param value\n     */\n    openEditModal = (value) => {\n        const _this = this;\n        // 触发子组件的调用\n        _this.billRenewRef.handleDisplay(value.tradeId);\n    };\n\n    bindBillDetailRef = (ref) => {\n        this.billDetailRef = ref\n    };\n\n    bindBillDeclareRef = (ref) => {\n        this.billDeclareRef = ref\n    };\n\n    bindBillRenewRef = (ref) => {\n        this.billRenewRef = ref\n    };\n\n    /**\n     * 删除流水申报\n     */\n    handleDelete = (item) => {\n        let _this = this;\n        Modal.confirm({\n            title: '删除确认',\n            content: `您确定删除流水号为${item.tradeId}的流水及该流水下的所有明细的记录吗?`,\n            onOk: async () => {\n                // 在发请求前, 显示loading\n                _this.setState({listLoading: true});\n                let para = {tradeId: item.tradeId};\n                const {msg, code} = await deleteTransaction(para);\n                // 在请求完成后, 隐藏loading\n                _this.setState({listLoading: false});\n                if (code === 0) {\n                    openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n                    _this.getDatas();\n                } else {\n                    openNotificationWithIcon(\"error\", \"错误提示\", msg);\n                }\n            }\n        })\n    };\n\n    /**\n     * 导出财务流水\n     */\n    exportListExcel = () => {\n        let _this = this;\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        let para = {\n            tradeType: this.state.filters.tradeType,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n        };\n        console.log(para);\n        axios({\n            method: \"GET\",\n            url: downTransaction,   //接口地址\n            params: para,           //接口参数\n            responseType: 'blob',\n            //上面这个参数不加会乱码，据说{responseType: 'arraybuffer'}也可以\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(function (res) {\n                _this.setState({listLoading: false});\n                let fileName = '财务流水报表.xlsx';//excel文件名称\n                let blob = new Blob([res.data], {type: 'application/x-xlsx'});   //word文档为msword,pdf文档为pdf，excel文档为x-xls\n                if (window.navigator.msSaveOrOpenBlob) {\n                    navigator.msSaveBlob(blob, fileName);\n                } else {\n                    let link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }\n            })\n            .catch(function (res) {\n                console.log(res);\n                _this.setState({listLoading: false});\n                openNotificationWithIcon(\"error\", \"错误提示\", \"导出财务流水报表失败\");\n            });\n    };\n\n    /**\n     * 导出财务流水明细\n     */\n    exportInfoExcel = () => {\n        let _this = this;\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        let para = {\n            tradeType: this.state.filters.tradeType,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n        };\n        axios({\n            method: \"GET\",\n            url: outTransactionInfoExcel,   //接口地址\n            params: para,           //接口参数\n            responseType: 'blob',\n            //上面这个参数不加会乱码，据说{responseType: 'arraybuffer'}也可以\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(function (res) {\n                _this.setState({listLoading: false});\n                let fileName = '财务流水明细.xlsx';//excel文件名称\n                let blob = new Blob([res.data], {type: 'application/x-xlsx'});   //word文档为msword,pdf文档为pdf，excel文档为x-xls\n                if (window.navigator.msSaveOrOpenBlob) {\n                    navigator.msSaveBlob(blob, fileName);\n                } else {\n                    let link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }\n            })\n            .catch(function (res) {\n                console.log(res);\n                _this.setState({listLoading: false});\n                openNotificationWithIcon(\"error\", \"错误提示\", \"导出财务流水明细报表失败\");\n            });\n    };\n\n    /**\n     * 财政申报页面专属的刷新方法\n     */\n    refreshListFromDeclare = () =>{\n        this.getDatas();\n    };\n\n    /**\n     * 财政修改页面专属的刷新方法\n     */\n    refreshListFromRenew = () =>{\n        this.getDatas();\n    };\n\n    /**\n     * 初始化页面配置信息\n     */\n    componentDidMount() {\n      // 绑定刷新（供子页面调用）\n      this.refreshListFromDeclare  = this.refreshListFromDeclare.bind(this);\n      this.refreshListFromRenew  = this.refreshListFromRenew.bind(this);\n      // 初始化表格属性设置\n      this.initColumns();\n      this.initDatas();\n      // 加载页面数据\n      this.getDatas();\n    };\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading, queryType, filters} = this.state;\n        let {beginTime, endTime, tradeType} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null) {\n            rangeDate = [moment(beginTime), moment(endTime)]\n        } else {\n            rangeDate = [null, null]\n        }\n        return (\n            <DocumentTitle title=\"收入支出\">\n                <section>\n                    <BillDeclare onRef={this.bindBillDeclareRef.bind(this)} refreshList={this.refreshListFromDeclare}/>\n                    <BillDetail onRef={this.bindBillDetailRef.bind(this)}/>\n                    <BillRenew onRef={this.bindBillRenewRef.bind(this)} refreshList={this.refreshListFromRenew}/>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item label=\"交易类别:\">\n                                <Select style={{width: '200px'}} value={tradeType} showSearch\n                                        onChange={this.onChangeType} placeholder=\"请选择交易类别\">\n                                    {queryType}\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"填报时间:\">\n                                <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                    <SearchOutlined/>查询\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                    <ReloadOutlined/>重置\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.handleAddModal}>\n                                    <PlusOutlined/>申报\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.exportListExcel}>\n                                    <FileExcelOutlined/>流水\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.exportInfoExcel}>\n                                    <FileExcelOutlined/>明细\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" rowKey=\"tradeId\" bordered loading={listLoading} columns={this.columns}\n                               dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize,\n                                   showQuickJumper: true,\n                                   total: dataTotal,\n                                   showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default Transaction;\n","import React, {Component} from 'react';\nimport {Form, Input,Modal} from \"antd\";\nimport {clearTrimValueEvent} from \"../../../utils/string\";\nimport {createMemo, updateMemo} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\n/*\n * 文件名：edit.jsx\n * 作者：shmily\n * 创建日期：2019-08-25 - 21:50\n * 描述：便利贴表单\n */\n\n// 定义组件（ES6）\nclass EditMemo extends Component {\n\n    formRef = React.createRef();\n\n    state = {\n        memo: {}, // 创建一个没有内容的编辑对象\n        visibleModal:false\n    };\n\n    /**\n     * 关闭弹框\n     */\n    handleCancel = () => {\n        this.setState({visibleModal: false});\n    };\n\n    /**\n     * 显示弹框\n     * @param val\n     */\n    handleDisplay = (val) => {\n        let _this = this;\n        console.log('val',val);\n        _this.setState({\n            memo: val,\n            visibleModal: true\n        },function () {\n            //注意 initialValues 不能被 setState 动态更新，你需要用 setFieldsValue 来更新。\n            if(!val || !val.id){\n                _this.formRef.current.setFieldsValue({'title':null, 'content':null});\n            }else{\n                _this.formRef.current.setFieldsValue(val);\n            }\n        });\n    };\n\n    /**\n     * 响应用户提交事件\n     */\n    handleSubmit = () => {\n        const _this = this;\n        const memo = _this.state.memo;\n        _this.formRef.current.validateFields(['title', 'content']).then(value => {\n            if(!memo.id){\n                // 执行添加\n                _this.handleAddMemo(value);\n            }else{\n                // 执行修改\n                value.id = memo.id;\n                _this.handleRenewMemo(value);\n            }\n        }).catch(e => console.log(\"修改或添加便利贴错误\",e));\n    };\n\n    /**\n     * 添加便利贴\n     * @param value\n     * @returns {boolean}\n     */\n    handleAddMemo = (value) => {\n        const _this = this;\n        Modal.confirm({\n            title: '您确定创建该便利贴?',\n            onOk: async () => {\n                const {msg, code} = await createMemo(value);\n                if (code === 0) {\n                    openNotificationWithIcon(\"success\", \"操作结果\", \"添加成功\");\n                    _this.props.refreshList();\n                    _this.handleCancel();\n                } else {\n                    openNotificationWithIcon(\"error\", \"错误提示\", msg);\n                }\n            },\n            onCancel() {\n                return false;\n            },\n        });\n    };\n\n    handleRenewMemo = (value) => {\n        const _this = this;\n        Modal.confirm({\n            title: '您确定要保存此次修改结果?',\n            onOk: async () => {\n                const {msg, code} = await updateMemo(value);\n                if (code === 0) {\n                    openNotificationWithIcon(\"success\", \"操作结果\", \"修改成功\");\n                    _this.props.refreshList();\n                    _this.handleCancel();\n                } else {\n                    openNotificationWithIcon(\"error\", \"错误提示\", msg);\n                }\n            },\n            onCancel() {\n                return false;\n            },\n        });\n    };\n\n\n    /*\n     * 为第一次render()准备数据\n     * 因为要异步加载数据，所以方法改为async执行\n     */\n    componentDidMount() {\n        this.formItemLayout = {\n            labelCol: {span: 4},\n            wrapperCol: {span: 14},\n        };\n        // 加载页面数据\n        const _this = this;\n        _this.props.onRef(_this);\n    };\n\n\n    render() {\n        const {memo,visibleModal} = this.state;\n        return (\n            <Modal title={!memo || !memo.id ? '添加便利贴':'编辑便利贴'} visible={visibleModal} maskClosable={false} okText='保存' onOk={this.handleSubmit} onCancel={this.handleCancel}>\n                <Form {...this.formItemLayout} ref={this.formRef}>\n                    <Form.Item label=\"标题名：\" {...this.formItemLayout} initialValue={memo.title} getValueFromEvent={ (e) => clearTrimValueEvent(e)} name='title' rules={[{required: true, message: '请输入便利贴标题'}, {min: 2, message: '长度在 2 到 15 个字符'}, {max: 15, message: '长度在 2 到 15 个字符'}]}>\n                        <Input placeholder='请输入标题'/>\n                    </Form.Item>\n                    <Form.Item label=\"正文：\" {...this.formItemLayout} initialValue={memo.content} getValueFromEvent={ (e) => clearTrimValueEvent(e)} name='content' rules={[{required: true, message: '请输入便利贴正文'}, {max: 128, message: '长度在 1 到 128 个字符'}]}>\n                        <Input.TextArea showCount placeholder='请输入便利贴正文' maxLength={128} autosize={{minRows: 4, maxRows: 6}}/>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\n// 对外暴露\nexport default EditMemo;\n","import React, {Component} from 'react';\nimport {Button, Col, Input, Form, Table, DatePicker, Modal} from \"antd\";\nimport {getMemoList, getMemo, deleteMemo} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport moment from 'moment';\nimport DocumentTitle from 'react-document-title'\nimport MemoFrom from \"./edit\";\nimport {DeleteOutlined, EditOutlined, PlusOutlined, ReloadOutlined, SearchOutlined} from \"@ant-design/icons\";\nimport {disabledDate} from \"../../../utils/var\"\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-09-22 - 17:35\n * 描述：便笺\n */\nconst {RangePicker} = DatePicker;\n\n// 定义组件（ES6）\nclass Memo extends Component {\n\n    memoFormRef = React.createRef();\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n        filters: {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n            title: null, // 标题\n        },\n    };\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '标题',\n                dataIndex: 'title', // 显示数据对应的属性名\n            },\n            {\n                title: '创建者',\n                dataIndex: 'source', // 显示数据对应的属性名\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'createtime', // 显示数据对应的属性名\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'updatetime', // 显示数据对应的属性名\n            },\n            {\n                title: '操作',\n                align:'center',\n                render: (text, record) => (\n                    <div>\n                        <Button type=\"primary\" onClick={() => this.handleModalEdit(record)} shape=\"circle\" icon={<EditOutlined/>}/>\n                        &nbsp;\n                        <Button type=\"danger\" onClick={() => this.handleDellMemo(record)} shape=\"circle\" icon={<DeleteOutlined/>}/>\n                    </div>\n                ),\n            },\n        ]\n    };\n\n    /**\n     * 获取便利贴列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            title: this.state.filters.title,\n            nowPage: this.state.nowPage,\n            pageSize: this.state.pageSize,\n            status: this.state.filters.status,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getMemoList(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 刷新\n     */\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.name = null;\n        filters.status = null;\n        _this.setState({\n            nowPage: 1,\n            filters: filters,\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        this.setState({\n            nowPage: current,\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== '') {\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        } else {\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            nowPage: 1,\n            filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n\n    /**\n     * 双向绑定用户查询主题\n     * @param event\n     */\n    titleInputChange = (event) => {\n        let _this = this;\n        const value = event.target.value;\n        let filters = _this.state.filters;\n        filters.title = value;\n        _this.setState({\n            nowPage: 1,\n            filters\n        })\n    };\n\n    /*\n    * 显示添加的弹窗\n    */\n    handleModalAdd = () => {\n        this.memoFormRef.handleDisplay({});\n    };\n\n    /*\n    * 显示修改的弹窗\n    */\n    handleModalEdit = async (value) => {\n        let _this = this;\n        let para = {\n            id: value.id\n        };\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getMemo(para);\n        if (code === 0) {\n            _this.memoFormRef.handleDisplay(data);\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n\n    /*\n    * 删除指定便利贴\n    */\n    handleDellMemo = (item) => {\n        let _this = this;\n        Modal.confirm({\n            title: '删除确认',\n            content: `确认删除标题为:${item.title}的便利贴吗?`,\n            cancelText: '再想想',\n            okText: '不要啦',\n            onOk: async () => {\n                // 在发请求前, 显示loading\n                _this.setState({listLoading: true});\n                let para = { id: item.id };\n                const {msg, code} = await deleteMemo(para);\n                // 在请求完成后, 隐藏loading\n                _this.setState({listLoading: false});\n                if (code === 0) {\n                    openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n                    _this.getDatas();\n                } else {\n                    openNotificationWithIcon(\"error\", \"错误提示\", msg);\n                }\n            }\n        })\n    };\n\n    bindMemoFormRef = (ref) => {\n        this.memoFormRef = ref\n    };\n\n    refreshListFromMemoForm= () =>{\n        this.getDatas();\n    };\n\n    /*\n     * 为第一次render()准备数据\n     * 因为要异步加载数据，所以方法改为async执行\n     */\n    componentDidMount() {\n      // 初始化表格属性设置\n      this.initColumns();\n      this.refreshListFromMemoForm  = this.refreshListFromMemoForm.bind(this);\n      // 加载页面数据\n      this.getDatas();\n    };\n\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading, filters} = this.state;\n        let {beginTime, endTime, title} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null) {\n            rangeDate = [moment(beginTime), moment(endTime)]\n        } else {\n            rangeDate = [null, null]\n        }\n        return (\n            <DocumentTitle title='便利贴'>\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item label=\"标题:\">\n                                <Input type='text' value={title} onChange={this.titleInputChange}\n                                       placeholder='按标题检索'/>\n                            </Form.Item>\n                            <Form.Item label=\"填写时间:\">\n                                <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                    <SearchOutlined/>查询\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                    <ReloadOutlined/>重置\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.handleModalAdd}>\n                                    <PlusOutlined/>创建\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" rowKey=\"id\" bordered loading={listLoading} columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current: nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                    <MemoFrom onRef={this.bindMemoFormRef.bind(this)} refreshList={this.refreshListFromMemoForm}/>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default Memo;\n","import React, {Component} from 'react';\nimport {Form, Input, Modal, Radio, Tooltip} from \"antd\";\nimport {clearTrimValueEvent} from \"../../../utils/string\";\nimport {QuestionCircleOutlined} from \"@ant-design/icons\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport {createNoteBook, updateNoteBook} from \"../../../api\";\n/*\n * 文件名：edit.jsx\n * 作者：liunengkai\n * 创建日期：2019-08-25 - 21:50\n * 描述：笔记簿表单\n */\n\n// 定义组件（ES6）\nclass EditNoteBook extends Component {\n\n  formRef = React.createRef();\n\n  state = {\n    book: {}, // 创建一个没有内容的编辑对象\n    visibleModal: false\n  };\n\n  /**\n   * 关闭弹框\n   */\n  handleCancel = () => {\n    this.setState({visibleModal: false});\n  };\n\n  /**\n   * 显示弹框\n   * @param val\n   */\n  handleDisplay = (val) => {\n    let _this = this;\n    _this.setState({\n      book: val,\n      visibleModal: true\n    }, function () {\n      //注意 initialValues 不能被 setState 动态更新，你需要用 setFieldsValue 来更新。\n      if (!val || !val.id) {\n        _this.formRef.current.setFieldsValue({'name': null, 'descript': null,'status':1});\n      } else {\n        _this.formRef.current.setFieldsValue(val);\n      }\n    });\n  };\n\n  /**\n   * 响应用户提交事件\n   */\n  handleSubmit = () => {\n    const _this = this;\n    const book = _this.state.book;\n    _this.formRef.current.validateFields(['name', 'descript','status']).then(value => {\n      if(!book.id){\n        // 执行添加\n        _this.handleAddBook(value);\n      }else{\n        // 执行修改\n        value.id = book.id;\n        _this.handleRenewBook(value);\n      }\n      console.log('val',value)\n    }).catch(e => console.log(\"修改或添加笔记簿错误\",e));\n  }\n\n  /**\n   * 添加笔记簿\n   * @param value\n   * @returns {boolean}\n   */\n  handleAddBook = (value) => {\n    const _this = this;\n    Modal.confirm({\n        title: '您确定创建该笔记簿?',\n        onOk: async () => {\n          const {msg, code} = await createNoteBook(value);\n          if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"添加成功\");\n            _this.props.refreshList();\n            _this.handleCancel();\n          } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n          }\n        },\n        onCancel() {\n            return false;\n        },\n    });\n  }\n\n  /**\n   * 修改笔记簿\n   * @param value\n   * @returns {boolean}\n   */\n  handleRenewBook = (value) => {\n    const _this = this;\n    Modal.confirm({\n        title: '您确定要保存此次修改结果?',\n        onOk: async () => {\n          const {msg, code} = await updateNoteBook(value);\n          if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"修改成功\");\n            _this.props.refreshList();\n            _this.handleCancel();\n          } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n          }\n        },\n        onCancel() {\n            return false;\n        },\n    });\n  }\n\n  /*\n   * 为第一次render()准备数据\n   * 因为要异步加载数据，所以方法改为async执行\n   */\n  componentDidMount() {\n    this.formItemLayout = {\n      labelCol: {span: 6},\n      wrapperCol: {span: 14},\n    };\n    // 加载页面数据\n    const _this = this;\n    _this.props.onRef(_this);\n  };\n\n  render() {\n    const {book,visibleModal} = this.state;\n    return (\n      <Modal title={!book || !book.id ? '添加笔记簿':'修改笔记簿'} visible={visibleModal} maskClosable={false} okText='保存' onOk={this.handleSubmit} onCancel={this.handleCancel}>\n        <Form {...this.formItemLayout} ref={this.formRef}>\n          <Form.Item label=\"笔记簿名：\" {...this.formItemLayout} initialValue={book.name} getValueFromEvent={ (e) => clearTrimValueEvent(e)} name='name' rules={[{required: true, message: '请输入笔记簿名'},{min: 2, message: '长度在 2 到 15 个字符'},{max: 15, message: '长度在 2 到 15 个字符'}]}>\n            <Input placeholder='请输入笔记簿名'/>\n          </Form.Item>\n          <Form.Item label=\"分类描述：\" {...this.formItemLayout} initialValue={book.descript} getValueFromEvent={ (e) => clearTrimValueEvent(e)} name='descript' rules={[{required: true, message: '请输入笔记簿描述'}, {min: 1, message: '长度在 1 到 50 个字符'},{max: 50, message: '长度在 1 到 50 个字符'}]}>\n            <Input.TextArea autosize={{minRows: 2, maxRows: 4}} showCount maxLength={50} placeholder='请输入笔记簿描述'/>\n          </Form.Item>\n          <Form.Item label={<span>是否开启&nbsp;<Tooltip title=\"是否公开显示该笔记簿下的所有笔记\"><QuestionCircleOutlined /></Tooltip></span>} {...this.formItemLayout} initialValue={book.status || 1} name='status' rules={[{required: true, message: '请选择接口开启状态'}]}>\n            <Radio.Group>\n              <Radio value={1}>开启</Radio>\n              <Radio value={2}>关闭</Radio>\n            </Radio.Group>\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\n// 对外暴露\nexport default EditNoteBook;\n","import React, {Component} from 'react';\nimport {Button, Col, Tag, Input, Table, Form, Modal} from \"antd\";\nimport {deleteNoteBook, getNoteBookList} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport DocumentTitle from 'react-document-title'\nimport {DeleteOutlined, EditOutlined, PlusOutlined, ReloadOutlined, SearchOutlined} from \"@ant-design/icons\";\nimport EditNoteBook from \"./edit\";\n\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-08-24 - 21:58\n * 描述：笔记簿管理\n */\n\n// 定义组件（ES6）\nclass NoteBook extends Component {\n\n  bookFormRef = React.createRef();\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n        filters: {\n            name: null,// 笔记簿名\n            status: null// 笔记簿状态\n        },\n    };\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '笔记簿名',\n                dataIndex: 'name', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '状态',\n                align:'center',\n                render: (text, record) => {\n                    if (record.status === 1) {\n                        return <Tag color=\"success\">已公开</Tag>\n                    } else if (record.status === 2) {\n                        return <Tag color=\"error\">已屏蔽</Tag>\n                    } else {\n                        return <Tag color=\"warning\">未知</Tag>\n                    }\n                }\n            },\n            {\n                title: '创建者',\n                dataIndex: 'source', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '笔记总数',\n                dataIndex: 'notesCount', // 显示数据对应的属性名\n                align:'right',\n            },\n            {\n                title: '操作',\n                align:'center',\n                render: (text, record) => (\n                    <div>\n                        <Button type=\"primary\" onClick={() => this.handleModalEdit(record)} shape=\"circle\" icon={<EditOutlined/>}/>\n                        &nbsp;\n                        <Button type=\"danger\"  onClick={() => this.handleDeleteNoteBook(record)} shape=\"circle\" icon={<DeleteOutlined/>}/>\n                    </div>\n                ),\n            },\n        ]\n    };\n\n    /**\n     * 获取笔记簿列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            name: this.state.filters.name,\n            nowPage: this.state.nowPage,\n            pageSize: this.state.pageSize,\n            status: this.state.filters.status\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getNoteBookList(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 刷新\n     */\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.name = null;\n        filters.status = null;\n        _this.setState({\n            nowPage: 1,\n            filters: filters,\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        this.setState({\n            nowPage: current,\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    /*\n     * 显示添加的弹窗\n     */\n    handleModalAdd = () => {\n      this.bookFormRef.handleDisplay({});\n    };\n\n    /*\n    * 显示修改的弹窗\n    */\n    handleModalEdit = (value) => {\n      this.bookFormRef.handleDisplay(value);\n    };\n\n    bindBookFormRef = (ref) => {\n      this.bookFormRef = ref\n    };\n\n    refreshListFromBookForm= () =>{\n      this.getDatas();\n    };\n\n    /*\n    * 删除指定笔记簿\n    */\n    handleDeleteNoteBook = (item) => {\n        let _this = this;\n        let tips = '';\n        if (item.notesCount > 0){\n            tips = `“${item.name}”笔记簿下还有：${item.notesCount}条笔记，您确认删除该笔记簿及该笔记簿下的所有笔记？`\n        }else{\n            tips = `您确认删除“${item.name}”空笔记簿？`\n        }\n        Modal.confirm({\n            title: '删除确认',\n            content: tips,\n            cancelText: '再想想',\n            okText: '不要啦',\n            onOk: async () => {\n                // 在发请求前, 显示loading\n                _this.setState({listLoading: true});\n                let para = { id: item.id };\n                const {msg, code} = await deleteNoteBook(para);\n                // 在请求完成后, 隐藏loading\n                _this.setState({listLoading: false});\n                if (code === 0) {\n                    openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n                    _this.getDatas();\n                } else {\n                    openNotificationWithIcon(\"error\", \"错误提示\", msg);\n                }\n            }\n        })\n    };\n\n    /**\n     * 双向绑定用户查询主题\n     * @param event\n     */\n    nameInputChange = (event) => {\n        let _this = this;\n        const value = event.target.value;\n        let filters = _this.state.filters;\n        filters.name = value;\n        _this.setState({\n            nowPage: 1,\n            filters\n        })\n    };\n\n    /*\n     * 为第一次render()准备数据\n     * 因为要异步加载数据，所以方法改为async执行\n     */\n    componentDidMount() {\n      // 初始化表格属性设置\n      this.initColumns();\n      this.refreshListFromBookForm  = this.refreshListFromBookForm.bind(this);\n      // 加载页面数据\n      this.getDatas();\n    };\n\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading,filters} = this.state;\n        return (\n            <DocumentTitle title=\"笔记分类\">\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item label=\"笔记簿:\">\n                                <Input type='text' value={filters.name} onChange={this.nameInputChange}\n                                       placeholder='按笔记簿检索'/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                  <SearchOutlined/>查询\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                  <ReloadOutlined/>重置\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.handleModalAdd}>\n                                  <PlusOutlined/>发布\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" rowKey=\"id\" bordered loading={listLoading} columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                  <EditNoteBook onRef={this.bindBookFormRef.bind(this)} refreshList={this.refreshListFromBookForm}/>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default NoteBook;\n","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Input, Table, Form, Modal, Tag, Select} from \"antd\";\nimport {getNotesList, deleteNotes, getNoteBookGroup} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport {Link} from \"react-router-dom\";\nimport DocumentTitle from 'react-document-title'\nimport moment from 'moment';\nimport {DeleteOutlined, EditOutlined, PlusOutlined, ReloadOutlined, SearchOutlined} from \"@ant-design/icons\";\nimport {disabledDate} from \"../../../utils/var\"\nimport {getUrlParameter} from \"../../../utils/url\"\n/*\n * 文件名：list.jsx\n * 作者：liunengkai\n * 创建日期：2019-08-26 - 21:09\n * 描述：笔记列表\n * 注意：在本页面中，不显示笔记搜索框\n */\nconst {RangePicker} = DatePicker;\nconst {Option} = Select;\n// 定义组件（ES6）\nclass NotesList extends Component {\n\n    constructor(props) {\n        super(props);\n        let _this = this\n        // 提取参数\n        const search = getUrlParameter ('search',props.location.search);\n        let state = {\n          // 返回的单元格数据\n          datas: [],\n          // 总数据行数\n          dataTotal: 0,\n          // 当前页\n          nowPage: 1,\n          // 页面宽度\n          pageSize: 10,\n          // 是否显示加载\n          listLoading: false,\n          tagColor:['magenta','red','volcano','orange','gold','lime','green','cyan','blue','geekblue','purple'],\n          notebooks: [],\n        };\n        if (!!search){\n          state.filters = {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n            topic: search, // 主题\n            notebookId: null\n          }\n        }else{\n          state.filters = {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n            topic: null, // 主题\n            notebookId: null\n          }\n        }\n      _this.state = state\n    }\n\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '作者',\n                render: (value, row) => (\n                  <span>{!row.notebook?'-':row.notebook.source}</span>\n                ),\n            },\n            {\n                title: '笔记分类',\n                render: (value, row) => (\n                  <span>{!row.notebook?'-':row.notebook.name}</span>\n                ),\n            },\n            {\n                title: '标题',\n                dataIndex: 'topic', // 显示数据对应的属性名\n            },\n            {\n              title: '标签',\n              render: (value, row) => {\n                const tags = row.label === null ? [] : (row.label).split(';')\n                if (tags.length > 0){\n                  return tags.map(this.forTagMap)\n                }else{\n                  return ''\n                }\n              },\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'createtime', // 显示数据对应的属性名\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'updatetime', // 显示数据对应的属性名\n            },\n            {\n                title: '管理',\n                render: (text, record) => (\n                    <div>\n                        <Button type=\"primary\" onClick={() => this.props.history.push('/backstage/memory/notes/update', record)} shape=\"circle\" icon={<EditOutlined/>}/>\n                        &nbsp;\n                        <Button type=\"danger\"  shape=\"circle\" onClick={() => this.handleDeleteNotes(record)} icon={<DeleteOutlined/>}/>\n                    </div>\n                ),\n            },\n        ]\n    };\n\n  forTagMap = tag => {\n    let colors = this.state.tagColor;\n    const tagElem = (\n      <Tag color={colors[Math.floor(Math.random()*10)]}>\n        {tag}\n      </Tag>\n    );\n    return (<span key={tag} style={{ display: 'inline-block' }}>{tagElem}</span>\n    );\n  };\n\n    /**\n     * 获取笔记列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            'nowPage': this.state.nowPage,\n            'topic': this.state.filters.topic,\n            'notebookId':this.state.filters.notebookId,\n            'beginTime': this.state.filters.beginTime,\n            'endTime': this.state.filters.endTime,\n            'pageSize': this.state.pageSize,\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getNotesList(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n  /**\n   * 得到笔记簿下拉选择列表数据\n   */\n  getNoteBooks = async () =>{\n    let _this = this;\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getNoteBookGroup()\n    if (code === 0) {\n      let notebooks = [];\n      notebooks.push(<Option key='-1' value=\"\">请选择</Option>);\n      data.forEach(item => {\n        notebooks.push((<Option key={item.id} value={item.id}>{item.name}</Option>));\n      });\n      _this.setState({\n        notebooks\n      })\n    } else {\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  }\n\n\n    /**\n     * 刷新\n     */\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.beginTime = null;\n        filters.endTime = null;\n        filters.topic = null;\n        filters.name = null;\n        _this.setState({\n            nowPage: 1,\n            filters: filters,\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        this.setState({\n            nowPage: current,\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== ''){\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        }else{\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            nowPage: 1,\n            filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n\n    /**\n     * 双向绑定用户查询主题\n     * @param event\n     */\n    topicInputChange = (event) => {\n        let _this = this;\n        const value = event.target.value;\n        let filters = _this.state.filters;\n        filters.topic = value;\n        _this.setState({\n            nowPage: 1,\n            filters\n        })\n    };\n\n  // 笔记簿选框发生改变\n  onChangeBooks = (value) => {\n    let _this = this;\n    let filters = _this.state.filters;\n    filters.notebookId = value;\n    _this.setState({\n      filters,\n      nowPage: 1,\n    }, function () {\n      _this.getDatas()\n    });\n  };\n\n    /*\n    * 删除指定笔记\n    */\n    handleDeleteNotes = (item) => {\n        let _this = this;\n        Modal.confirm({\n            title: '删除确认',\n            content: `确认删除主题为:${item.topic}的笔记吗?`,\n            onOk: async () => {\n                // 在发请求前, 显示loading\n                _this.setState({listLoading: true});\n                let para = { id: item.id };\n                const {msg, code} = await deleteNotes(para);\n                // 在请求完成后, 隐藏loading\n                _this.setState({listLoading: false});\n                if (code === 0) {\n                    openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n                    _this.getDatas();\n                } else {\n                    openNotificationWithIcon(\"error\", \"错误提示\", msg);\n                }\n            }\n        })\n    };\n\n    /*\n    *为第一次render()准备数据\n    * 因为要异步加载数据，所以方法改为async执行\n    */\n    componentDidMount() {\n        // 初始化表格属性设置\n        this.initColumns();\n        // 加载页面数据\n        this.getDatas();\n        // 初始化用户笔记簿数据\n        this.getNoteBooks()\n    };\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading,filters,notebooks} = this.state;\n        let {beginTime,endTime,topic,notebookId} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null){\n            rangeDate = [moment(beginTime),moment(endTime)]\n        } else {\n            rangeDate = [null,null]\n        }\n        return (\n            <DocumentTitle title=\"便笺笔记\">\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item label=\"主题:\">\n                                <Input type='text' value={topic} onChange={this.topicInputChange}\n                                       placeholder='按主题检索'/>\n                            </Form.Item>\n                            <Form.Item label=\"分类:\">\n                              <Select showSearch placeholder=\"请选择所属分类\" style={{width: '200px'}} value={notebookId} onChange={this.onChangeBooks}>\n                                {notebooks}\n                              </Select>\n                            </Form.Item>\n                            <Form.Item label=\"添加时间:\">\n                                <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                  <SearchOutlined/>查询\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                  <ReloadOutlined/>重置\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\">\n                                    <Link to='/backstage/memory/notes/create'><PlusOutlined/>发布</Link>\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" rowKey=\"id\" loading={listLoading} bordered columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default NotesList;\n","// url工具类\n\n/**\n * 提取url参数\n * @param name\n * @param str\n * @returns {*}\n */\nexport function getUrlParameter(name, str) {\n    const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`);\n    const r = str.substr(1).match(reg);\n    if (r != null) return decodeURIComponent(r[2]);\n    return null;\n}","import React, {Component} from 'react';\nimport Editor from 'for-editor'\nimport axios from \"axios\";\nimport {uploadNewsPicture} from \"../api\";\nimport {openNotificationWithIcon} from \"../utils/window\";\nimport {isEmptyObject} from \"../utils/var\"\n/*\n * 文件名：for-editor.jsx\n * 作者：liunengkai\n * 创建日期：2019-10-27 - 17:37\n * 描述：for-editor编辑器（markdown）\n */\n\n// 定义组件（ES6）\nclass ForEditor extends Component {\n\n    editorRef = React.createRef();\n\n    state = {\n      value: '', // 创建一个没有内容的编辑对象\n    };\n\n    /**\n     * 初始化Markdown编辑器，本方法由外界触发\n     * @param val\n     */\n    initEditor = (val) => {\n      const _this = this;\n      _this.setState({\n        value: val\n      });\n    };\n\n    //内容改变时回调\n    handleChange = (value) => {\n        this.setState({\n            value\n        })\n    };\n\n    //添加图片时回调\n    handleAddImg = async (file) => {\n        const {data} = await this.addImg(file);\n        if (!isEmptyObject(data)) {\n            // 第一个参数，图片的显示的描述信息，第二个参数，图片的url\n            this.editorRef.current.$img2Url(file.name, data.link)\n        } else {\n            this.editorRef.current.$img2Url(file.name, 'file_url')\n        }\n    };\n\n    //向后台添加图片\n    addImg = (file) => {\n        return new Promise(\n            (resolve, reject) => {\n                let img = new Image();\n                let reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function (e) {\n                    img.src = this.result;\n                };\n                img.onload = function () {\n                    let para = {\n                        filename: file.name,\n                        fileurl: img.src\n                    };\n                    axios.post(uploadNewsPicture, para).then(response => {\n                        const data = response.data; // 得到响应数据\n                        if (data.code === 0) {\n                            resolve({data: {link: data.data}})\n                        } else {\n                            openNotificationWithIcon(\"error\", \"错误提示\", data.msg);\n                            resolve({data: {link: ''}})\n                        }\n                        // /files/picture/illustrated/Pandora/20190728/2019072823539.png\n                    }).catch(error => {\n                        openNotificationWithIcon(\"error\", \"请求出错了\", error.message);\n                        reject(error)\n                    })\n                }\n            })\n    };\n\n    /**\n     * 判断是否为空\n     * @returns {boolean}\n     */\n    isNull = () => {\n        return null === this.state.value || \"\" === (this.state.value).trim();\n    };\n\n    /**\n     * 获取markdown\n     * @returns {*}\n     */\n    getValue = () => {\n        return this.state.value;\n    };\n\n    /**\n     * 执行异步任务: 发异步ajax请求\n     */\n    componentDidMount() {\n      // 加载页面数据\n      const _this = this;\n      _this.props.onRef(_this);\n    };\n\n    render() {\n        const {value} = this.state;\n        return (\n            <Editor\n                ref={this.editorRef}\n                value={value}\n                lineNum={false}\n                style={{border:'none',boxShadow:'none',maxWidth:'80em'}}\n                addImg={(file) => this.handleAddImg(file)}\n                onChange={value => this.handleChange(value)}\n            />\n        );\n    }\n}\n\n// 对外暴露\nexport default ForEditor;\n","import React, {Component} from 'react';\nimport {Button, Form, Col, Input, Tag, Select} from \"antd\";\nimport RichTextEditor from '../../../component/for-editor'\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport {getNotes, updateNotes, createNotes, getNoteBookGroup} from \"../../../api/index\"\nimport DocumentTitle from 'react-document-title'\nimport \"./index.less\"\nimport {clearTrimValueEvent} from \"../../../utils/string\";\nimport {PlusOutlined} from \"@ant-design/icons\";\n/*\n * 文件名：edit.jsx\n * 作者：liunengkai\n * 创建日期：2019-07-27 - 21:44\n * 描述：编辑笔记\n */\nconst {Option} = Select;\n// 定义组件（ES6）\nclass EditNote extends Component {\n\n    // 创建用来保存ref标识的标签对象的容器\n    formRef = React.createRef();\n    markdownRef = React.createRef();\n\n    state = {\n        tagColor:['magenta','red','volcano','orange','gold','lime','green','cyan','blue','geekblue','purple'],\n        tags: [],\n        inputVisible: false,\n        inputValue: '',\n        form: {},\n        // 根据是否传入id标识保存操作为 新增 还是 修改\n        isUpdate: false,\n        id: '',\n        notebooks: []\n    };\n\n    /**\n     * 删除tag\n     * @param removedTag\n     */\n    handleClose = removedTag => {\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\n        this.setState({ tags });\n    };\n\n    /**\n     * 显示文本框，让用户可输入\n     */\n    showInput = () => {\n        let _this = this;\n        let tags = _this.state.tags;\n        // 至多允许用户输入5个tag\n        if (tags.length < 5){\n            this.setState({ inputVisible: true }, () => this.input.focus());\n        }\n    };\n\n    handleInputChange = e => {\n        this.setState({ inputValue: e.target.value });\n    };\n\n    /**\n     * 添加tag\n     */\n    handleInputConfirm = () => {\n        const { inputValue } = this.state;\n        let { tags } = this.state;\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n            tags = [...tags, inputValue];\n        }\n        this.setState({\n            tags,\n            inputVisible: false,\n            inputValue: '',\n        });\n    };\n\n\n    forMap = tag => {\n        let colors = this.state.tagColor;\n        const tagElem = (\n            <Tag\n                closable\n                color={colors[Math.floor(Math.random()*10)]}\n                onClose={e => {\n                    e.preventDefault();\n                    this.handleClose(tag);\n                }}\n            >\n                {tag}\n            </Tag>\n        );\n        return (<span key={tag} style={{ display: 'inline-block' }}>{tagElem}</span>\n        );\n    };\n\n\n    /**\n     * 提交数据\n     */\n    submit = () => {\n      let _this = this;\n      let {tags, isUpdate, id} = _this.state;\n      // 调用子组件\n      if (_this.markdownRef.isNull() === true){\n          openNotificationWithIcon(\"error\", \"错误提示\", \"请填写您要发布的内容\");\n          return\n      }\n      // 调用子组件\n      const editor = _this.markdownRef.getValue();\n      _this.formRef.current.validateFields(['topic', 'notebookId']).then(value => {\n        // 通过核验\n        let _thisTag = null\n        if (tags.length > 1){\n            _thisTag = tags.join(';')\n        } else if(tags.length === 1){\n            _thisTag = tags[0]\n        } else {\n            _thisTag = null\n        }\n        let para = {\n          topic: value.topic,\n          label: _thisTag,//标签\n          content: editor,\n          notebookId: value.notebookId,\n        };\n        if (isUpdate){\n            // 走更新的流程\n            para.id = id\n            _this.updateNotes(para)\n        } else{\n            // 走发布的流程\n            _this.createNotes(para)\n        }\n      }).catch(e => console.log(\"修改或添加笔记错误\",e));\n    };\n\n    // 更新动态\n    updateNotes = async (param) => {\n        const {msg, code} = await updateNotes(param);\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"笔记修改成功\");\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    // 创建动态\n    createNotes = async (param) => {\n        const {msg, code} = await createNotes(param);\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"笔记保存成功\");\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n\n    /**\n     * 获取动态列表数据\n     * @returns {Promise<void>}\n     */\n    initDatas = async (id) => {\n      const _this= this;\n      const para = {\n          id: id\n      };\n      // 发异步ajax请求, 获取数据\n      const {msg, code, data} = await getNotes(para);\n      if (code === 0) {\n        _this.setState({\n              tags:data.label === null ? [] : (data.label).split(';'),\n              form: data,\n              isUpdate:true,\n              id: id\n          },function () {\n          _this.formRef.current.setFieldsValue(data);\n          _this.markdownRef.initEditor(data.content);\n        });\n      } else {\n          openNotificationWithIcon(\"error\", \"错误提示\", msg);\n      }\n    };\n\n    /**\n     * 得到笔记簿下拉选择列表数据\n     */\n    getNoteBooks = async () =>{\n        let _this = this;\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getNoteBookGroup()\n        if (code === 0) {\n            let notebooks = [];\n            data.forEach(item => {\n                notebooks.push((<Option key={item.id} value={item.id}>{item.name}</Option>));\n            });\n            _this.setState({\n                notebooks\n            })\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    }\n\n    /**\n     * 为markdown组件绑定ref\n     * @param ref\n     */\n    bindMarkDownRef = (ref) => {\n      this.markdownRef = ref\n    };\n\n    /**\n     * 初始化页面配置信息\n     */\n    componentDidMount() {\n        let _this = this;\n        // 初始化用户笔记簿数据\n        _this.getNoteBooks()\n        // 取出携带的state\n        let notes = _this.props.location.state;\n        // 如果是添加模式没值, 否则有值\n        if (notes){\n            _this.initDatas(notes.id)\n        } else {\n          let form = {content:' '};// 初始化\n          this.setState({\n              isUpdate:false,\n              form: form\n          },function () {\n            _this.formRef.current.setFieldsValue({'topic':null, 'notebookId':null});\n            _this.markdownRef.initEditor(' ');\n          });\n        }\n        this.formItemLayout = {\n            labelCol: {span: 2},\n            wrapperCol: {span: 21},\n        };\n        this.buttonItemLayout = {\n            wrapperCol: {span: 21, offset: 2},\n        };\n    };\n\n\n    render() {\n        //const {getFieldDecorator} = this.props.form;\n        const { tags, inputVisible, inputValue,form,notebooks} = this.state;\n        const tagChild = tags.map(this.forMap);\n        return (\n            <DocumentTitle title=\"编辑笔记\">\n                <section className=\"b-edit-notes-page\">\n                    <div className=\"mytips\">\n                        <p>平台发布笔记约定：</p>\n                        <blockquote>\n                            <p>\n                                <i>1、笔记标题必须填写。</i>\n                            </p>\n                            <p>\n                                <i>2、标签可以填写也可以不填写，最多不超过5个(≤5)标签。</i>\n                            </p>\n                            <p>\n                                <i>3、笔记所属分类（笔记簿）必须选择</i>\n                            </p>\n                            <p>\n                                <i>4、动态内容必须填写，书写采用采用MarkDown语法。书写完毕后，建议到前台页面查看实际效果，以便造成格式不兼容。</i>\n                            </p>\n                        </blockquote>\n                    </div>\n                    <Col span={24} className=\"b-edit-notes-page-form\">\n                        <Form {...this.formItemLayout} ref={this.formRef} className=\"bk-transparent\">\n                          <Form.Item {...this.buttonItemLayout} style={{'textAlign':'right'}}>\n                            <Button htmlType=\"button\" type=\"primary\" onClick={this.submit}>提交</Button>\n                          </Form.Item>\n                            <Form.Item label=\"标题\" {...this.formItemLayout} name='topic' initialValue={form.topic} getValueFromEvent={ (e) => clearTrimValueEvent(e)} rules={[ {required: true, message: '请输入标题'}, {max: 50, message: '最多不超过50个字符'},]}>\n                              <Input type='text' style={{width:'40em'}}/>\n                            </Form.Item>\n                            <Form.Item label=\"所属分类\" {...this.formItemLayout} name='notebookId' initialValue={form.notebookId} rules={[{required: true, message: '请选择所属分类'}]}>\n                              <Select style={{width:'34em'}} showSearch\n                                      placeholder=\"请选择所属分类\">\n                                {notebooks}\n                              </Select>\n                            </Form.Item>\n                            <Form.Item label=\"标签\" {...this.formItemLayout}>\n                                <div style={{ marginBottom: 16 }}>\n                                    {tagChild}\n                                </div>\n                                {inputVisible && (\n                                    <Input\n                                        ref={input => this.input = input}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue}\n                                        onChange={this.handleInputChange}\n                                        onBlur={this.handleInputConfirm}\n                                        onPressEnter={this.handleInputConfirm}\n                                    />\n                                )}\n                                {!inputVisible && (\n                                    <Tag onClick={this.showInput} >\n                                      <PlusOutlined/> New Tag\n                                    </Tag>\n                                )}\n                            </Form.Item>\n                            <Form.Item label=\"内容\" {...this.formItemLayout}>\n                                <RichTextEditor onRef={this.bindMarkDownRef.bind(this)}/>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n/*\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\n*/\n\n/*\n使用ref\n1. 创建ref容器: thi.pw = React.createRef()\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\n3. 通过ref容器读取标签元素: this.pw.current\n*/\n\n// 对外暴露\nexport default EditNote;\n","import React, { Component } from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport NotesList from './list'\nimport EditNote from \"./edit\";\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-07-27 - 22:01\n * 描述：笔记便笺管理\n */\n\n// 定义组件（ES6）\nclass Notes extends Component {\n\n\n  render() {\n      return (\n          <Switch>\n              <Route path='/backstage/memory/notes' component={NotesList} exact/> {/*路径完全匹配*/}\n              <Route path='/backstage/memory/notes/create' component={EditNote}/>\n              <Route path='/backstage/memory/notes/update' component={EditNote}/>\n              <Redirect to='/backstage/memory/notes'/>\n          </Switch>\n      )\n  }\n}\n\n// 对外暴露\nexport default Notes;\n","import React, {Component} from 'react';\nimport {Button, Col, Table, DatePicker, Input, Form, Modal} from \"antd\";\nimport {deleteNews, getNewsList} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport moment from 'moment';\nimport {DeleteOutlined, EditOutlined, PlusOutlined, ReloadOutlined, SearchOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\";\nimport DocumentTitle from 'react-document-title'\nimport {disabledDate} from \"../../../utils/var\";\n/*\n * 文件名：list.jsx\n * 作者：liunengkai\n * 创建日期：2019-07-24 - 22:28\n * 描述：动态管理页面\n */\nconst {RangePicker} = DatePicker;\n// 定义组件（ES6）\nclass List extends Component {\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n        filters: {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n            topic: null // 主题\n        },\n    };\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '作者',\n                dataIndex: 'source', // 显示数据对应的属性名\n            },\n            {\n                title: '标题',\n                dataIndex: 'topic', // 显示数据对应的属性名\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'createtime', // 显示数据对应的属性名\n            },\n            {\n                title: '修改时间',\n                dataIndex: 'updatetime', // 显示数据对应的属性名\n            },\n            {\n                title: '管理',\n                render: (text, record) => (\n                    <div>\n                        <Button type=\"primary\" onClick={() => this.props.history.push('/backstage/memory/news/update', record)} shape=\"circle\" icon={<EditOutlined/>}/>\n                        &nbsp;\n                        <Button type=\"danger\" onClick={() => this.handleDellNews(record)}  shape=\"circle\" icon={<DeleteOutlined/>}/>\n                    </div>\n                ),\n            },\n        ]\n    };\n\n    /**\n     * 获取动态列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            topic: this.state.filters.topic,\n            nowPage: this.state.nowPage,\n            pageSize: this.state.pageSize,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getNewsList(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /*\n    * 删除指定动态\n    */\n    handleDellNews = (item) => {\n        let _this = this;\n        Modal.confirm({\n            title: '删除确认',\n            content: `确认删除主题为:${item.topic}的动态吗?`,\n            onOk: async () => {\n                // 在发请求前, 显示loading\n                _this.setState({listLoading: true});\n                let para = { id: item.id };\n                const {msg, code} = await deleteNews(para);\n                // 在请求完成后, 隐藏loading\n                _this.setState({listLoading: false});\n                if (code === 0) {\n                    openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n                    _this.getDatas();\n                } else {\n                    openNotificationWithIcon(\"error\", \"错误提示\", msg);\n                }\n            }\n        })\n    };\n\n    /**\n     * 刷新\n     */\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters= _this.state.filters;\n        filters.beginTime = null;\n        filters.endTime = null;\n        filters.topic = null;\n        _this.setState({\n            nowPage: 1,\n            filters: filters,\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        this.setState({\n            nowPage: current,\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== ''){\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        }else{\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            nowPage: 1,\n            filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n\n    /**\n     * 双向绑定用户查询主题\n     * @param event\n     */\n    topicInputChange = (event) => {\n        let _this = this;\n        const value = event.target.value;\n        let filters = _this.state.filters;\n        filters.topic = value;\n        _this.setState({\n            nowPage: 1,\n            filters\n        })\n    };\n\n    /*\n    *为第一次render()准备数据\n    * 因为要异步加载数据，所以方法改为async执行\n    */\n    componentWillMount() {\n        // 初始化表格属性设置\n        this.initColumns();\n    };\n\n    /*\n    执行异步任务: 发异步ajax请求\n     */\n    componentDidMount() {\n        // 加载页面数据\n        this.getDatas();\n    };\n\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading,filters} = this.state;\n        let {beginTime,endTime,topic} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null){\n            rangeDate = [moment(beginTime),moment(endTime)]\n        } else {\n            rangeDate = [null,null]\n        }\n        return (\n            <DocumentTitle title='动态管理'>\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item label=\"主题:\">\n                                <Input type='text' value={topic} onChange={this.topicInputChange}\n                                       placeholder='按主题检索'/>\n                            </Form.Item>\n                            <Form.Item label=\"发布时间:\">\n                                <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                    <SearchOutlined/>查询\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                    <ReloadOutlined/>重置\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\">\n                                    <Link to='/backstage/memory/news/publish'><PlusOutlined/>发布</Link>\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" rowKey=\"id\" bordered loading={listLoading} columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default List;\n","import React, {Component} from 'react';\nimport {Button, Form, Col, Input, Tag} from \"antd\";\nimport RichTextEditor from '../../../component/for-editor'\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport {getNews, editNews, publishNews} from \"../../../api/index\"\nimport DocumentTitle from 'react-document-title'\nimport \"./index.less\"\nimport {clearTrimValueEvent} from \"../../../utils/string\";\nimport {PlusOutlined} from \"@ant-design/icons\";\n/*\n * 文件名：edit.jsx\n * 作者：liunengkai\n * 创建日期：2019-07-27 - 21:44\n * 描述：编辑动态\n */\n\n// 定义组件（ES6）\nclass EditNews extends Component {\n\n    // 创建用来保存ref标识的标签对象的容器\n    formRef = React.createRef();\n    markdownRef = React.createRef();\n\n    state = {\n        tagColor:['magenta','red','volcano','orange','gold','lime','green','cyan','blue','geekblue','purple'],\n        tags: [],\n        inputVisible: false,\n        inputValue: '',\n        form: {},\n        // 根据是否传入id标识保存操作为 新增 还是 修改\n        isUpdate: false,\n        id: ''\n    };\n\n    /**\n     * 删除tag\n     * @param removedTag\n     */\n    handleClose = removedTag => {\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\n        this.setState({ tags });\n    };\n\n    /**\n     * 显示文本框，让用户可输入\n     */\n    showInput = () => {\n        let _this = this;\n        let tags = _this.state.tags;\n        // 至多允许用户输入5个tag\n        if (tags.length < 5){\n            this.setState({ inputVisible: true }, () => this.input.focus());\n        }\n    };\n\n    handleInputChange = e => {\n        this.setState({ inputValue: e.target.value });\n    };\n\n    /**\n     * 添加tag\n     */\n    handleInputConfirm = () => {\n        const { inputValue } = this.state;\n        let { tags } = this.state;\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n            tags = [...tags, inputValue];\n        }\n        this.setState({\n            tags,\n            inputVisible: false,\n            inputValue: '',\n        });\n    };\n\n\n    forMap = tag => {\n        let colors = this.state.tagColor;\n        const tagElem = (\n            <Tag\n                closable\n                color={colors[Math.floor(Math.random()*10)]}\n                onClose={e => {\n                    e.preventDefault();\n                    this.handleClose(tag);\n                }}\n            >\n                {tag}\n            </Tag>\n        );\n        return (<span key={tag} style={{ display: 'inline-block' }}>{tagElem}</span>\n        );\n    };\n\n\n    /**\n     * 提交数据\n     */\n    submit = () => {\n        const _this = this;\n        let {tags, isUpdate, id} = _this.state;\n        // 调用子组件\n        if (_this.markdownRef.isNull() === true){\n            openNotificationWithIcon(\"error\", \"错误提示\", \"请填写您要发布的内容\");\n            return\n        }\n        // 调用子组件\n        const editor = _this.markdownRef.getValue();\n        _this.formRef.current.validateFields(['topic']).then( value => {\n            // 通过核验\n            let _thisTag = null;\n            if (tags.length > 1){\n                _thisTag = tags.join(';')\n            } else if(tags.length === 1){\n                _thisTag = tags[0]\n            } else {\n                _thisTag = null\n            }\n            let para = {\n                topic: value.topic,\n                label: _thisTag,//标签\n                content: editor\n            };\n            if (isUpdate){\n                // 走更新的流程\n                para.id = id;\n                _this.updateNews(para)\n            } else{\n                // 走发布的流程\n                _this.createNews(para)\n            }\n        })\n    };\n\n    // 更新动态\n    updateNews = async (param) => {\n        const {msg, code} = await editNews(param);\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"动态修改成功\");\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    // 创建动态\n    createNews = async (param) => {\n        const {msg, code} = await publishNews(param);\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"动态发布成功\");\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n\n    /**\n     * 获取动态详情数据\n     * @returns {Promise<void>}\n     */\n    initDatas = async (id) => {\n        const _this= this;\n        let para = {\n            id: id\n        };\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getNews(para);\n        if (code === 0) {\n            _this.setState({\n                tags: data.label === null ? [] : (data.label).split(';'),\n                form: data,\n                isUpdate:true,\n                id: id\n            },function () {\n                _this.formRef.current.setFieldsValue(data);\n                _this.markdownRef.initEditor(data.content);\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 为markdown组件绑定ref\n     * @param ref\n     */\n    bindMarkDownRef = (ref) => {\n        this.markdownRef = ref\n    };\n\n    /**\n     * 初始化页面配置信息\n     */\n    componentDidMount() {\n        let _this = this;\n        // 取出携带的state\n        let news = _this.props.location.state;  // 如果是添加没值, 否则有值\n        if (news){\n            _this.initDatas(news.id)\n        } else {\n            let form = {content:\" \"};// 初始化\n            _this.setState({\n                isUpdate:!!news,\n                form: form\n            },function () {\n                _this.formRef.current.setFieldsValue({'topic':null});\n                _this.markdownRef.initEditor(' ');\n            });\n        }\n        this.formItemLayout = {\n            labelCol: {span: 2},\n            wrapperCol: {span: 21},\n        };\n        this.buttonItemLayout = {\n            wrapperCol: {span: 21, offset: 2},\n        };\n    };\n\n\n    render() {\n        const { tags, inputVisible, inputValue,form } = this.state;\n        const tagChild = tags.map(this.forMap);\n        return (\n            <DocumentTitle title='编辑动态'>\n                <section className='b-edit-news-page'>\n                    <div className=\"mytips\">\n                        <p>平台发布动态约定：</p>\n                        <blockquote>\n                            <p>\n                                <i>1、动态标题必须填写。</i>\n                            </p>\n                            <p>\n                                <i>2、标签可以填写也可以不填写，最多不超过5个(≤5)标签。</i>\n                            </p>\n                            <p>\n                                <i>3、动态内容必须填写，书写采用采用MarkDown语法。书写完毕后，建议到前台页面查看实际效果，以便造成格式不兼容。</i>\n                            </p>\n                        </blockquote>\n                    </div>\n                    <Col span={24} className=\"b-edit-news-page-form\">\n                        <Form {...this.formItemLayout} ref={this.formRef} className=\"bk-transparent\">\n                            <Form.Item {...this.buttonItemLayout} style={{'textAlign':'right'}}>\n                                <Button htmlType=\"button\" type=\"primary\" onClick={this.submit}>提交</Button>\n                            </Form.Item>\n                            <Form.Item label=\"标题\" {...this.formItemLayout} name='topic' initialValue={form.topic} getValueFromEvent={ (e) => clearTrimValueEvent(e)} rules={[ {required: true, message: '请输入标题'}, {max: 50, message: '最多不超过50个字符'},]}>\n                                <Input type='text' style={{width:'40em'}}/>\n                            </Form.Item>\n                            <Form.Item label=\"标签\" {...this.formItemLayout}>\n                                <div style={{ marginBottom: 16 }}>\n                                    {tagChild}\n                                </div>\n                                {inputVisible && (\n                                    <Input\n                                        ref={input => this.input = input}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{ width: 78 }}\n                                        value={inputValue}\n                                        onChange={this.handleInputChange}\n                                        onBlur={this.handleInputConfirm}\n                                        onPressEnter={this.handleInputConfirm}\n                                    />\n                                )}\n                                {!inputVisible && (\n                                    <Tag onClick={this.showInput} >\n                                        <PlusOutlined/>  New Tag\n                                    </Tag>\n                                )}\n                            </Form.Item>\n                            <Form.Item label=\"内容\" {...this.formItemLayout}>\n                                <RichTextEditor onRef={this.bindMarkDownRef.bind(this)}/>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\nexport default EditNews;","import React, { Component } from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport NewsList from './list'\nimport EditNews from \"./edit\";\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-07-27 - 22:01\n * 描述：\n */\n\n// 定义组件（ES6）\nclass News extends Component {\n\n\n  render() {\n      return (\n          <Switch>\n              <Route path='/backstage/memory/news' component={NewsList} exact/> {/*路径完全匹配*/}\n              <Route path='/backstage/memory/news/publish' component={EditNews}/>\n              <Route path='/backstage/memory/news/update' component={EditNews}/>\n              <Redirect to='/backstage/memory/news'/>\n          </Switch>\n      )\n  }\n}\n\n// 对外暴露\nexport default News;","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Form, Row, Modal, Input, Spin, Popconfirm} from \"antd\";\nimport DocumentTitle from 'react-document-title'\nimport './index.less'\nimport {getPlanList, createPlan, updatePlan, deletePlan} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport {LeftOutlined,RightOutlined} from \"@ant-design/icons\";\nimport moment from 'moment';\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-08-19 - 22:36\n * 描述：计划管理\n */\n\n// 定义组件（ES6）\nclass Plan extends Component {\n\n    // 创建用来保存ref标识的标签对象的容器\n    formRef = React.createRef();\n\n    state = {\n        listLoading: false,\n        datas:[],\n        outhtml:[],\n        filters: {\n            date: \"\"\n        },\n        formVisible: false,\n        //编辑界面数据\n        editForm: {\n            id: '',\n            planDate: '',\n            planContent: '',\n        },\n    };\n\n    /**\n     * 获取计划列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let _this = this;\n        let filters = _this.state.filters;\n        let para = {\n            date: filters.date,\n        };\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getPlanList(para);\n        // 在请求完成后, 隐藏loading\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            // 表格数据\n            _this.setState({datas: data},function () {\n                _this.rendering()\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    rendering = () => {\n        let isNowMonth = true;\n        // 判断是否是本月\n        let nowDate = new Date(this.getNowFormatDate());\n        let nowYear = nowDate.getFullYear();//获取年\n        let nowMonth = nowDate.getMonth();//获取月\n        let nowday = nowDate.getDate();//获取天数\n        let localDate = new Date(this.state.filters.date);\n        let localYear = localDate.getFullYear();//获取年\n        let localMonth = localDate.getMonth();//获取月\n        if((nowYear === localYear)&&(nowMonth === localMonth)){\n            isNowMonth = true;\n        } else {\n            isNowMonth = false;\n        }\n        // 在显示时，月份需要从1开始\n        localMonth = localDate.getMonth()+1;//获取月\n        let editDate = localYear + '-' + (localMonth<10?('0'+localMonth):localMonth) + '-';\n        // 开始渲染\n        let outhtml = [];//输出具体的日历\n        let _thisLine = [];//处理的每一行\n        let lineNum = 0;//行号\n        for(let i = 0;i < this.state.datas.length;i++){\n            const item = this.state.datas[i];\n            const cellNum = i % 7;\n            if(cellNum === 0){\n                // 行开始\n                _thisLine = [];\n                lineNum++\n            }\n            if(item.flog === 1){\n                // 需要渲染日历\n                // 判断该天有无安排计划\n                // 处理日期格式\n                const dateKey = editDate + ((item.number<10)?('0'+item.number):item.number);\n                if(item.value === 0){\n                    // 没有安排计划\n                    // 判断当前单元格是否是今天\n                    if(isNowMonth === true && nowday === item.number){\n                        _thisLine.push(<td key={i} onClick={this.clickTD} data-id={item.id} data-key={dateKey} className=\"today\">{item.number}</td>)\n                    }else {\n                        _thisLine.push(<td key={i} onClick={this.clickTD} data-id={item.id} data-key={dateKey}>{item.number}</td>)\n                    }\n                }else{\n                    // 有计划\n                    _thisLine.push(<td key={i} onClick={this.clickTD} className=\"havetoday\" data-id={item.id} data-key={dateKey} data-value={item.value}>{item.number}</td>)\n                }\n            }else{\n                // 显示1号前和月尾的空白单元格\n                _thisLine.push(<td key={i}></td>)\n            }\n            if(cellNum === 6){\n                outhtml.push(<tr key={lineNum}>{_thisLine}</tr>)\n            }\n        }\n        this.setState({\n            outhtml\n        })\n    };\n\n    /**\n     * 获取当前日期\n     * @returns {string}\n     */\n    getNowFormatDate = () => {\n        let date = new Date();\n        let seperator1 = '-';\n        let year = date.getFullYear();\n        let month = date.getMonth() + 1;\n        let strDate = date.getDate();\n        if (month >= 1 && month <= 9) {\n            month = '0' + month\n        }\n        if (strDate >= 0 && strDate <= 9) {\n            strDate = '0' + strDate\n        }\n        let currentdate = year + seperator1 + month + seperator1 + strDate;\n        return currentdate;\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let filters = _this.state.filters;\n        if (dateString === '' || JSON.stringify(dateString) === null || JSON.stringify(dateString) === 'null'){\n            filters.date = this.getNowFormatDate()\n        }else {\n            filters.date = date.format('YYYY-MM-DD');// toString()\n        }\n        _this.setState({\n            filters\n        },function () {\n            _this.getDatas()\n        })\n    }\n\n    /**\n     * 日期加减运算\n     * @param _dateObject\n     * @param x\n     * @returns {string}\n     */\n    getOperationData = (_dateObject,x) => {\n        //运算日期\n        if( _dateObject === null || undefined === _dateObject || _dateObject === ''){\n            _dateObject = new Date();\n        }\n        _dateObject.setMonth(_dateObject.getMonth() + x);\n        let nd = _dateObject.valueOf() ;\n        nd = new Date(nd);\n        let y = nd.getFullYear();\n        let m = nd.getMonth() + 1;\n        let d = nd.getDate();\n        if(m <= 9) m = '0' + m;\n        if(d <= 9) d = '0'+ d;\n        let cdate = y + '-' + m + '-01' ;\n        return cdate;\n    }\n\n    /**\n     * 日期加减事件\n     * @param flog\n     */\n    buttonQuery = (flog) =>{\n        let _this = this;\n        // 通过上一个月，下一个月进行日期查询\n        let filters = _this.state.filters;\n        filters.date = _this.getOperationData(new Date(filters.date),flog);\n        _this.setState({filters},function () {\n            _this.getDatas()\n        })\n    };\n\n    /**\n     * 单击单元格事件\n     * @param e\n     */\n    clickTD = (e) => {\n        const _this = this;\n        // 得到自定义属性\n        // 得到计划的主键，没有计划时为-1\n        let id =  e.currentTarget.getAttribute('data-id');\n        // 得到当天的时间\n        let key =  e.currentTarget.getAttribute('data-key');\n        let {formVisible, editForm} = _this.state;\n        formVisible = true;\n        if (id === -1 || id === '-1'){\n            const format = 'YYYY-MM-DD';\n            const nowDate = moment().format(format);\n            const clickData = moment(key,format);\n            if (moment(clickData).isBefore(nowDate)){\n               // 点击的时间早于当天的时间的，不允许创建计划\n                openNotificationWithIcon(\"warning\", \"提示\", '不能在过去的日期上创建计划');\n                return\n            }\n            // 该天无计划\n            editForm.planDate = key;\n            editForm.planContent = null;\n            editForm.id = null\n        } else {\n            // 该天有计划\n            let value =  e.currentTarget.getAttribute('data-value');\n            editForm.planContent = value;\n            editForm.planDate = key;\n            editForm.id = id;\n        }\n        _this.setState({\n            formVisible:formVisible,\n            editForm:editForm\n        },function () {\n            _this.formRef.current.setFieldsValue(editForm);\n        })\n    };\n\n    /**\n     * 关闭计划弹窗\n     */\n    handleCloseForm = () => {\n        let _this = this;\n        let formVisible = false;\n        _this.setState({\n            formVisible:formVisible\n        })\n    };\n\n    /**\n     * 提交修改\n     */\n    handleSubmitForm = () => {\n        let _this = this;\n        let form = _this.state.editForm;\n        _this.formRef.current.validateFields(['planContent']).then( value => {\n            // 通过验证\n            form.planContent = value.planContent;\n            if (form.id === null){\n                // 提交到创建接口\n                _this.sendInsertRequest(form)\n            } else {\n                // 提交到修改接口\n                _this.sendUpdateRequest(form)\n            }\n        })\n    };\n\n    /**\n     * 发送添加请求\n     * @param form\n     * @returns {Promise<void>}\n     */\n    sendInsertRequest = async (form) => {\n        let _this = this;\n        let para = {\n            describe: form.planContent,\n            plandate: form.planDate\n        };\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        const {msg, code} = await createPlan(para);\n        // 在请求完成后, 隐藏loading\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"创建成功\");\n            _this.handleCloseForm();\n            _this.formRef.current.resetFields();\n            _this.getDatas();\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    sendUpdateRequest = async (form) => {\n        let _this = this;\n        let para = {\n            id: form.id,\n            describe:form.planContent,\n            plandate: form.planDate\n        };\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        const {msg, code} = await updatePlan(para)\n        // 在请求完成后, 隐藏loading\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"修改成功\");\n            _this.handleCloseForm();\n            _this.formRef.current.resetFields();\n            _this.getDatas();\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 删除计划\n     * @param e\n     */\n    handleDeletePlan = async (e) =>{\n        let _this = this;\n        let editForm = _this.state.editForm\n        let para = {\n            id: editForm.id\n        };\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        const {msg, code} = await deletePlan(para);\n        // 在请求完成后, 隐藏loading\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n            _this.handleCloseForm();\n            _this.formRef.current.resetFields();\n            _this.getDatas();\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    }\n\n    /*\n     * 为第一次render()准备数据\n     * 因为要异步加载数据，所以方法改为async执行\n     */\n    componentDidMount() {\n        let filters = this.state.filters;\n        filters.date = this.getNowFormatDate();\n        this.setState({\n            filters\n        });\n        this.formItemLayout = {\n            labelCol: {span: 4},\n            wrapperCol: {span: 14},\n        };\n        this.buttonItemLayout = {\n            wrapperCol: {span: 14, offset: 4},\n        };\n        // 加载页面数据\n        this.getDatas();\n    };\n\n\n    render() {\n        const {formVisible, editForm, listLoading} = this.state;\n        const {date} = this.state.filters;\n        let rangeDate;\n        if (date){\n            rangeDate = moment(date);\n        } else{\n            rangeDate = null;\n        }\n        const outhtml = this.state.outhtml;\n        return (\n            <DocumentTitle title=\"日程安排\">\n                <section className=\"b-plan-page\">\n                    <Modal\n                        title=\"计划安排\"\n                        width=\"50%\"\n                        visible={formVisible === true}\n                        okText='提交'\n                        onOk={this.handleSubmitForm}\n                        onCancel={this.handleCloseForm}>\n                        <Form {...this.formItemLayout} ref={this.formRef}>\n                            <Form.Item label=\"计划时间\" {...this.formItemLayout}>\n                                <Input disabled={true} value={editForm.planDate}/>\n                            </Form.Item>\n                            <Form.Item label=\"计划内容：\" name='planContent' {...this.formItemLayout} initialValue={editForm.planContent} rules={[{required: true, message: '请输入计划内容'},{min: 1, message: '长度在 1 到 50 个字符'}, {max: 50, message: '长度在 1 到 50 个字符'}]}>\n                                <Input.TextArea maxLength={50} showCount autosize={{minRows: 2, maxRows: 4}} placeholder='请输入计划内容'/>\n                            </Form.Item>\n                            {\n                                !!editForm.id &&\n                                <Form.Item {...this.buttonItemLayout}>\n                                    <Popconfirm\n                                        title=\"您确定要删除该计划?\"\n                                        onConfirm={this.handleDeletePlan}\n                                        okText=\"确定\"\n                                        cancelText=\"取消\"\n                                    >\n                                        <Button type=\"link\">删除计划</Button>\n                                    </Popconfirm>\n                                </Form.Item>\n                            }\n                        </Form>\n                    </Modal>\n                    <Row>\n                        <Col span={24} className=\"toolbar\">\n                            <Form layout=\"inline\">\n                                <Form.Item label=\"计划时间:\">\n                                    <DatePicker value={rangeDate} picker=\"month\" onChange={this.onChangeDate}/>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={24}>\n                            <div\n                                style={{float: 'left',width: '30%',height: '100%',textAlign: 'left',lineHeight: '45px',cursor: 'pointer'}}>\n                                <span onClick={() => this.buttonQuery(-1)}><LeftOutlined style={{color:'#000'}}/></span>\n                            </div>\n                            <div\n                                style={{float: 'left',width: '40%',height: '100%',textAlign: 'center',lineHeight: '45px',fontSize: '20px',color:'#000'}}>\n                                {date}\n                            </div>\n                            <div\n                                style={{float: 'right',width: '28%',height: '100%',textAlign: 'right',lineHeight: '45px',cursor: 'pointer'}}>\n                                <span onClick={() => this.buttonQuery(+1)}><RightOutlined style={{color:'#000'}}/></span>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={24}>\n                            {listLoading === true ? <Spin/> :\n                            <table id=\"plantanle\" border=\"1px\" cellPadding=\"0\" cellSpacing=\"0\">\n                                <thead>\n                                <tr>\n                                    <td>星期日</td>\n                                    <td>星期一</td>\n                                    <td>星期二</td>\n                                    <td>星期三</td>\n                                    <td>星期四</td>\n                                    <td>星期五</td>\n                                    <td>星期六</td>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {outhtml}\n                                </tbody>\n                            </table>\n                            }\n                        </Col>\n                    </Row>\n                </section>\n            </DocumentTitle>\n        )\n    }\n}\n\n// 对外暴露\nexport default Plan;\n","import React, {Component} from 'react';\nimport {downloadBackUpDB, getBackUpDBList} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport {Button, Col, Form, DatePicker, Table} from \"antd\";\nimport moment from 'moment';\nimport axios from \"axios\";\nimport DocumentTitle from 'react-document-title'\nimport {ReloadOutlined, SearchOutlined,CloudDownloadOutlined} from \"@ant-design/icons\";\nimport {disabledDate} from \"../../../utils/var\";\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-07-09 - 22:44\n * 描述：数据库备份管理\n */\nconst {RangePicker} = DatePicker;\n\n// 定义组件（ES6）\nclass DB extends Component {\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n        filters: {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n        },\n    };\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '归档日期',\n                dataIndex: 'archiveDate', // 显示数据对应的属性名\n            },\n            {\n                title: '存放路径',\n                dataIndex: 'url', // 显示数据对应的属性名\n            },\n            {\n                title: '备份时间',\n                dataIndex: 'createtime', // 显示数据对应的属性名\n            },\n            {\n                title: '下载',\n                render: (text, record) => (\n                    <span onClick={() => this.downloadFile(record)}>\n                        <CloudDownloadOutlined/>\n                    </span>\n                ),\n            },\n        ]\n    };\n\n    /**\n     * 获取备份数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            nowPage: this.state.nowPage,\n            pageSize: this.state.pageSize,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getBackUpDBList(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    reloadPage = () => {\n        // 重置查询条件\n        const _this = this;\n        let filters = _this.state.filters;\n        filters.beginTime = null;\n        filters.endTime = null;\n        _this.setState({\n            nowPage: 1,\n            filters: filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        this.setState({\n            nowPage: current,\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        const _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== ''){\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        }else{\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            nowPage: 1,\n            filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    downloadFile = (row) => {\n        let _this = this;\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        axios({\n            method: \"GET\",\n            url: downloadBackUpDB+\"?archiveDate=\"+row.archiveDate,   //接口地址\n            responseType: 'blob',\n            //上面这个参数不加会乱码，据说{responseType: 'arraybuffer'}也可以\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(function (res) {\n                _this.setState({listLoading: false});\n                let fileName = row.archiveDate+'.sql';//文件名称\n                let blob = new Blob([res.data]);\n                if (window.navigator.msSaveOrOpenBlob) {\n                    navigator.msSaveBlob(blob, fileName);\n                } else {\n                    let link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }\n            })\n            .catch(function (res) {\n                _this.setState({listLoading: false});\n                openNotificationWithIcon(\"error\", \"错误提示\", \"导出数据库备份失败\"+res);\n            });\n    };\n\n\n    /*\n    *为第一次render()准备数据\n    * 因为要异步加载数据，所以方法改为async执行\n    */\n  componentDidMount() {\n      // 初始化表格属性设置\n      this.initColumns();\n      // 加载页面数据\n      this.getDatas();\n  };\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading,filters} = this.state;\n        let {beginTime,endTime} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null){\n            rangeDate = [moment(beginTime),moment(endTime)]\n        } else {\n            rangeDate = [null,null]\n        }\n        return (\n            <DocumentTitle title='数据备份'>\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item label=\"备份时间:\">\n                                <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                  <SearchOutlined/>查询\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                  <ReloadOutlined/>重置\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" bordered rowKey=\"url\" loading={listLoading} columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default DB;\n","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Icon, Table, Form, Input, Modal, Upload} from \"antd\";\nimport {getFileList, deleteFile, editFile, uploadFile, downloadFileForAdmin} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport moment from 'moment';\nimport axios from \"axios\";\nimport DocumentTitle from 'react-document-title'\nimport {DeleteOutlined, CloudDownloadOutlined, EditOutlined, ReloadOutlined, SearchOutlined,CloudUploadOutlined} from \"@ant-design/icons\";\nimport {disabledDate} from \"../../../utils/var\";\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-08-11 - 17:31\n * 描述：文件管理主页\n */\nconst {RangePicker} = DatePicker;\nconst { Dragger } = Upload;\n// 定义组件（ES6）\nclass Files extends Component {\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n        //上传界面是否显示\n        uploadVisible: false,\n        filters: {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n            filename: null\n        },\n    };\n\n    /**\n     * 初始化上传组件信息\n     */\n    initUpload = () => {\n        let _this = this;\n        _this.uploadConfig = {\n            name: 'file',\n            multiple: true,\n            action: uploadFile,\n            data: file => ({\n                // data里存放的是接口的请求参数\n                // 这里文件传递唯一序列码（前端生成）\n                uid: file.uid,\n            }),\n            onRemove: file => {\n                const { uid ,response} = file;\n                // 如果response.code不为0，则表示这个文件在服务器端已经上传失败了，此时调用删除方法只需要删除浏览器上的即可\n                if (response && 0 === response.code){\n                    // 删除文件\n                    _this.deleteFile({'uid':uid})\n                }\n            },\n            onChange(info) {\n                // 状态有：uploading done error removed\n                const { status ,response} = info.file;\n                if (status === 'done' || status === 'error') {\n                    if (0 === response.code){\n                        openNotificationWithIcon(\"success\", \"上传成功\", `${info.file.name} file uploaded successfully.`);\n                        _this.getDatas();\n                    }else{\n                        openNotificationWithIcon(\"error\", \"错误提示\", `${info.file.name} file upload failed.cause by:${response.msg}`);\n                    }\n                }\n            },\n        };\n    };\n\n    /*\n     * 初始化Table所有列的数组\n     */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '文件名',\n                dataIndex: 'filename', // 显示数据对应的属性名\n            },\n            {\n                title: '上传者',\n                dataIndex: 'source', // 显示数据对应的属性名\n            },\n            {\n                title: '状态',\n                render: (text, record) => {\n                    if (record.status === '1') {\n                        return '已显示'\n                    } else if (record.status === '2') {\n                        return '已屏蔽'\n                    } else {\n                        return '未知'\n                    }\n                }\n            },\n            {\n                title: '日期',\n                dataIndex: 'date', // 显示数据对应的属性名\n            },\n            {\n                title: '下载',\n                render: (text, record) => (\n                    <div>\n                        <Button type=\"primary\" onClick={() => this.downloadFile(record)} shape=\"circle\" icon={<CloudDownloadOutlined/>}/>\n                        &nbsp;\n                        <Button type=\"primary\" onClick={() => this.handleChangeFile(record)} shape=\"circle\" icon={<EditOutlined/>}/>\n                        &nbsp;\n                        <Button type=\"danger\" onClick={() => this.handleDeleteFile(record)} shape=\"circle\" icon={<DeleteOutlined/>}/>\n                    </div>\n                ),\n            },\n        ]\n    };\n\n    /**\n     * 获取文件列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            nowPage: this.state.nowPage,\n            pageSize: this.state.pageSize,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n            filename: this.state.filters.filename,\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getFileList(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 重置查询条件\n     */\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.beginTime = null;\n        filters.endTime = null;\n        filters.filename = null;\n        _this.setState({\n            nowPage: 1,\n            filters: filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    /**\n     * 回调函数,改变页宽大小\n     * @param pageSize\n     * @param current\n     */\n    changePageSize = (pageSize, current) => {\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        this.setState({\n            nowPage: current,\n        }, function () {\n            this.getDatas();\n        });\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== ''){\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        }else{\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            nowPage: 1,\n            filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    /**\n     * 接口名文本框内容改变事件（用于双向绑定数据）\n     * @param event\n     */\n    fileInputInputChange = (event) => {\n        let _this = this;\n        const value = event.target.value;\n        let filters = _this.state.filters;\n        filters.filename = value;\n        _this.setState({\n            nowPage: 1,\n            filters\n        })\n    };\n\n    /**\n     * 取消上传\n     */\n    handleCancelUpload = () => {\n        let _this = this;\n        let uploadVisible = false;\n        _this.setState({\n            uploadVisible\n        })\n    };\n\n    /**\n     * 打开上传框\n     */\n    handleOpenUpload = () => {\n        let _this = this;\n        let uploadVisible = true;\n        _this.setState({\n            uploadVisible\n        })\n    };\n\n    /**\n     * 删除文件\n     */\n    deleteFile = async (para) => {\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code} = await deleteFile(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n            this.getDatas();\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 弹框确认删除\n     */\n    handleDeleteFile = (item) => {\n        let _this = this;\n        Modal.confirm({\n            title: '删除确认',\n            content: `确认文件名为:'${item.filename}'的文件吗?`,\n            onOk: () => {\n                let para = { id: item.id };\n                _this.deleteFile(para)\n            }\n        })\n    };\n\n    /**\n     * 下载文件\n     * @param row\n     */\n    downloadFile = (row) => {\n        let _this = this;\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        axios({\n            method: \"GET\",\n            url: downloadFileForAdmin+row.id,   //接口地址\n            responseType: 'blob',\n            //上面这个参数不加会乱码，据说{responseType: 'arraybuffer'}也可以\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(function (res) {\n                console.log(res)\n                _this.setState({listLoading: false});\n                let fileName = row.filename;//文件名称\n                let blob = new Blob([res.data]);\n                if (window.navigator.msSaveOrOpenBlob) {\n                    navigator.msSaveBlob(blob, fileName);\n                } else {\n                    let link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }\n            })\n            .catch(function (res) {\n                _this.setState({listLoading: false});\n                openNotificationWithIcon(\"error\", \"错误提示\", \"下载文件失败\"+res);\n            });\n    };\n\n    /**\n     * 改变文件状态\n     * @param item\n     */\n    handleChangeFile = (item) => {\n        const _this = this;\n        let message = '';\n        let sendStatus = null;\n        if (item.status === '1')\n        {\n            // 屏蔽\n            sendStatus = 2;\n            message = `您确定要屏蔽文件名为：' ${item.filename} '的文件吗？`\n        } else {\n            // 显示\n            sendStatus = 1;\n            message = `您确定要显示文件名为：' ${item.filename} '的文件吗？`\n        }\n        Modal.confirm({\n            title: '修改确认',\n            content: message,\n            onOk: async () => {\n                let para = { id: item.id, status: sendStatus };\n                // 在发请求前, 显示loading\n                _this.setState({listLoading: true});\n                // 发异步ajax请求, 获取数据\n                const {msg, code} = await editFile(para);\n                // 在请求完成后, 隐藏loading\n                _this.setState({listLoading: false});\n                if (code === 0) {\n                    openNotificationWithIcon(\"success\", \"操作结果\", \"修改成功\");\n                    _this.getDatas();\n                } else {\n                    openNotificationWithIcon(\"error\", \"错误提示\", msg);\n                }\n            }\n        })\n\n    };\n\n    /*\n     *为第一次render()准备数据\n     * 因为要异步加载数据，所以方法改为async执行\n     */\n  componentDidMount() {\n      // 初始化上传组件配置\n      this.initUpload();\n      // 初始化表格属性设置\n      this.initColumns();\n      // 加载页面数据\n      this.getDatas();\n  };\n\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading,filters, uploadVisible} = this.state;\n        let {beginTime,endTime} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null){\n            rangeDate = [moment(beginTime),moment(endTime)]\n        } else {\n            rangeDate = [null,null]\n        }\n        return (\n            <DocumentTitle title='文件管理'>\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item label=\"文件名:\">\n                                <Input type='text' value={filters.filename} onChange={this.fileInputInputChange}\n                                       placeholder='请输入文件名'/>\n                            </Form.Item>\n                            <Form.Item label=\"上传时间:\">\n                                <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                  <SearchOutlined/>查询\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                  <ReloadOutlined/>重置\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.handleOpenUpload}>\n                                    <CloudUploadOutlined/>上传\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" rowKey=\"id\" bordered loading={listLoading} columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                    <Modal\n                        title=\"上传文件\"\n                        visible={uploadVisible === true}\n                        onOk={this.handleCancelUpload}\n                        onCancel={this.handleCancelUpload}>\n                        <Dragger {...this.uploadConfig}>\n                            <p className=\"ant-upload-drag-icon\">\n                                <Icon type=\"inbox\" />\n                            </p>\n                            <p className=\"ant-upload-text\">单击或拖动文件到此区域进行上传</p>\n                            <p className=\"ant-upload-hint\">\n                                支持单个或批量上传，单个文件大小不能超过10M，禁止上传exe/bat等可执行文件。\n                            </p>\n                        </Dragger>\n                    </Modal>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default Files;\n","import React, {Component} from 'react';\nimport {Button, Row, Col, Input, Form, DatePicker, Modal, Spin, Upload} from \"antd\";\nimport moment from 'moment';\nimport './index.less'\nimport {getPictureList, deletePicture, uploadWallpaper, setUserInfo} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport DocumentTitle from 'react-document-title'\nimport axios from 'axios'\nimport memoryUtils from \"../../../utils/memoryUtils\";\nimport storageUtils from \"../../../utils/storageUtils\";\nimport {ReloadOutlined, SearchOutlined,CloudUploadOutlined,DeleteOutlined,HeartOutlined,MinusOutlined,MoreOutlined,CheckOutlined} from \"@ant-design/icons\";\nimport {disabledDate,isEmptyObject} from \"../../../utils/var\";\n\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-08-17 - 20:40\n * 描述：壁纸管理\n */\nconst {RangePicker} = DatePicker;\n\n// 定义组件（ES6）\nclass Wallpaper extends Component {\n\n    state = {\n        filters: {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n            filename: null\n        },\n        // 返回的单元格数据\n        datas: [],\n        // 下一页\n        nextpage: 1,\n        // 是否显示加载\n        listLoading: false,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示上传层\n        uploadVisible: false,\n        previewVisible: false,\n        previewImage: '',\n        fileList: [],\n    };\n\n\n    /**\n     * 获取壁纸列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            type: 1,\n            nowPage: 'null' === this.state.nextpage ? 1 : this.state.nextpage,\n            pageSize: this.state.pageSize,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n            filename: this.state.filters.filename,\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getPictureList(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            // 表格数据\n            this.rendering(data);\n        } else {\n            this.setState({nextpage: 'null'});\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 表格数据渲染\n     * @param data\n     */\n    rendering = (data) => {\n        let {datas, nextpage} = this.state;\n        // 渲染数据\n        if (!(isEmptyObject(data.grid))) {\n            //第一页采用直接覆盖的显示方式\n            if (data.pageNow === 1) {\n                datas = data.grid;//绑定到Vue\n            } else {\n                datas = (datas).concat(data.grid);//追加，合并\n            }\n        } else {\n            datas = 'null';\n        }\n        //显示是否加载下一页(当前页是最后一页)\n        //console.log(\"是否当前页：\",data.pageNow === data.totalPage)\n        if (data.pageNow === data.totalPage) {\n            nextpage = 'null';\n        } else {\n            nextpage = data.pageNow + 1;\n        }\n        //console.log(\"设置下一页：\",nextpage)\n        this.setState({\n            datas: datas,\n            nextpage: nextpage\n        })\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== '') {\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        } else {\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            nextpage: 1,\n            filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    /**\n     * 重置查询条件\n     */\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.beginTime = null;\n        filters.endTime = null;\n        filters.filename = null;\n        _this.setState({\n            nextpage: 1,\n            filters: filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    /**\n     * 接口名文本框内容改变事件（用于双向绑定数据）\n     * @param event\n     */\n    fileInputInputChange = (event) => {\n        let _this = this;\n        const value = event.target.value;\n        let filters = _this.state.filters;\n        filters.filename = value;\n        _this.setState({\n            nextpage: 1,\n            filters\n        })\n    };\n\n    /**\n     * 弹框确认删除\n     */\n    handleDeleteFile = (e) => {\n        let _this = this;\n        // 得到自定义属性\n        let id =  e.currentTarget.getAttribute('data-id')\n        Modal.confirm({\n            title: '删除确认',\n            content: `确认编号为:'${id}'的壁纸吗?`,\n            onOk: () => {\n                let para = { id: id};\n                _this.deletePicture(para)\n            }\n        })\n    };\n\n    /**\n     * 设置壁纸\n     * @param e\n     */\n    handleSetBackbround = async (e) => {\n        let _this = this;\n        // 得到自定义属性\n        let src =  e.currentTarget.getAttribute('data-src')\n        let id =  e.currentTarget.getAttribute('data-id')\n        let flag = false;\n        // 利用axios检测该壁纸能否打开\n        await axios.get(src)\n            .then(function(response){\n                flag = true\n            })\n            .catch(function(err){\n                flag = false\n            });\n        if (true === flag) {\n            let para = {\n                background: parseInt(id)\n            };\n            // 在发请求前, 显示loading\n            _this.setState({listLoading: true});\n            const result = await setUserInfo(para);\n            // 在请求完成后, 隐藏loading\n            _this.setState({listLoading: false});\n            let {msg, code} = result;\n            if (code === 0) {\n                const data = memoryUtils.user;\n                data.user.background = src;\n                data.user.backgroundId = parseInt(id);\n                memoryUtils.user = data;// 保存在内存中\n                storageUtils.saveUser(data); // 保存到local中\n                openNotificationWithIcon(\"success\", \"操作结果\", \"壁纸设置成功\");\n            } else {\n                openNotificationWithIcon(\"error\", \"错误提示\", msg);\n            }\n        }else{\n            openNotificationWithIcon(\"error\", \"错误提示\", '当前壁纸图片无效，该壁纸不能设置');\n        }\n    };\n\n    /**\n     * 执行删除操作\n     * @param para\n     * @returns {Promise<void>}\n     */\n    deletePicture = async (para) => {\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code} = await deletePicture(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n            this.getDatas();\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 取消上传\n     */\n    handleCancelUpload = () => {\n        let _this = this;\n        let uploadVisible = false;\n        _this.setState({\n            uploadVisible:uploadVisible,\n            fileList: []\n        })\n    };\n\n    /**\n     * 打开上传框\n     */\n    handleOpenUpload = () => {\n        let _this = this;\n        let uploadVisible = true;\n        _this.setState({\n            uploadVisible\n        })\n    };\n\n    /**\n     * 处理图片为Base64\n     * @param file\n     * @returns {Promise<any>}\n     */\n    getBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    };\n\n    /**\n     * 关闭图片预览\n     */\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    /**\n     * 预览图片\n     * @param file\n     * @returns {Promise<void>}\n     */\n    handlePreview = async (file) => {\n        // if (!file.url && !file.preview) {\n        //     file.preview = this.getBase64(file.originFileObj);\n        // }\n        this.setState({\n            previewImage: file.url || file.thumbUrl,\n            previewVisible: true,\n        });\n    };\n\n    /**\n     * 上传前添加到list，\n     * @param fileList\n     */\n    handleChange = (info) => {\n        let fileList = info.fileList;\n        const { status } = info.file;\n        // 注意，发生一次上传后，会有三个顺序的status变化，done，uploading，dong，而，只需要处理最后一个状态即可\n        if (status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (status === 'done') {\n            openNotificationWithIcon(\"success\", \"上传成功\", `${info.file.name} file uploaded successfully.`);\n            this.getDatas();\n        } else if (status === 'error') {\n            openNotificationWithIcon(\"error\", \"错误提示\", `${info.file.name} file upload failed.`);\n        }\n        this.setState({ fileList });\n    };\n\n    // handleChange = ({ fileList }) => {\n    //     this.setState({ fileList });\n    // };\n\n    /**\n     * 删除图片\n     * @param file\n     */\n    handleDelete = (file) => {\n        //console.log(file)\n        this.setState(state => {\n            const index = state.fileList.indexOf(file);\n            //console.log(index)\n            const newFileList = state.fileList.slice();\n            newFileList.splice(index, 1);\n            return {\n                fileList: newFileList,\n            };\n        },function () {\n            console.log(this.state.fileList)\n        });\n    };\n\n    /**\n     * 大图预览\n     */\n    previewPhoto = () => {\n        console.log(\"进入大图预览\")\n    };\n\n    /*\n    执行异步任务: 发异步ajax请求\n     */\n    componentDidMount() {\n        // 加载页面数据\n        this.getDatas();\n    };\n\n\n    render() {\n        // 读取状态数据\n        const {filters, datas, nextpage, listLoading, uploadVisible, previewVisible, previewImage, fileList} = this.state;\n        let {beginTime, endTime} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null) {\n            rangeDate = [moment(beginTime), moment(endTime)]\n        } else {\n            rangeDate = [null, null]\n        }\n        const user = memoryUtils.user;\n        const uploadButton = (\n            <div>\n                <CloudUploadOutlined/>\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n        return (\n            <DocumentTitle title='壁纸管理'>\n                <section>\n                    <Modal\n                        title=\"壁纸文件\"\n                        visible={uploadVisible === true}\n                        onOk={this.handleCancelUpload}\n                        onCancel={this.handleCancelUpload}>\n                        <Upload\n                            action={uploadWallpaper}\n                            listType=\"picture-card\"\n                            accept=\"image/jpeg,image/jpg,image/png,image/bmp\"\n                            fileList={fileList}\n                            onPreview={this.handlePreview}\n                            onChange={this.handleChange}\n                            onRemove={this.handleDelete}>\n                            {fileList.length >= 8 ? null : uploadButton}\n                        </Upload>\n                    </Modal>\n                    <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                    </Modal>\n                    <Row>\n                        <Col span={24} className=\"toolbar\">\n                            <Form layout=\"inline\">\n                                <Form.Item label=\"文件名:\">\n                                    <Input type='text' value={filters.filename} onChange={this.fileInputInputChange}\n                                           placeholder='请输入文件名'/>\n                                </Form.Item>\n                                <Form.Item label=\"上传时间:\">\n                                    <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                      <SearchOutlined/>查询\n                                    </Button>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                      <ReloadOutlined/>重置\n                                    </Button>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"button\" onClick={this.handleOpenUpload}>\n                                        <CloudUploadOutlined/>上传\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                    {\n                        listLoading === true ? <Spin/> :\n                            <ul className=\"wallpaper-ul\">\n                                {datas !=='null' ? datas.map((item) => (\n                                        <li span={6} className=\"album-div-imgdiv\" key={item.id}>\n                                            <div className=\"tools\">\n                                                <Button type=\"primary\" shape=\"circle\" icon={<DeleteOutlined/>} data-id={item.id} onClick={this.handleDeleteFile} size=\"small\" title=\"删除\"/>\n                                                {\n                                                    user.user.backgroundId === item.id ?\n                                                        null\n                                                    :\n                                                        <Button type=\"primary\" style={{marginLeft: '0.5em'}} shape=\"circle\" icon={<HeartOutlined />} data-id={item.id} data-src={item.weburl} onClick={this.handleSetBackbround} size=\"small\" title=\"设为壁纸\"/>\n                                                }\n                                            </div>\n                                            <a href=\"#toolbar\" onClick={this.previewPhoto} rel=\"noopener noreferrer\" className=\"a-img\">\n                                                <img src={item.weburl} alt={item.filename}\n                                                     className=\"img-responsive\"/>\n                                            </a>\n                                        </li>\n                                    )):\n                                    <li span={6} className=\"album-div-imgdiv\">\n                                        <Button type=\"primary\" shape=\"circle\" icon={<MinusOutlined/>} size=\"small\" title=\"好像并没有照片诶\"/>\n                                    </li>\n                                }\n                                {nextpage !=='null' ?\n                                    <li span={6} className=\"album-div-imgdiv\">\n                                        <Button type=\"primary\" onClick={this.getDatas} shape=\"circle\" icon={<MoreOutlined/>} size=\"small\" title=\"加载更多\"/>\n                                    </li>\n                                    :\n                                    <li span={6} className=\"album-div-imgdiv\">\n                                        <Button type=\"primary\" shape=\"circle\" icon={<CheckOutlined/>} size=\"small\" title=\"已经加载完壁纸了\"/>\n                                    </li>\n                                }\n                            </ul>\n                    }\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default Wallpaper;\n","import React, {Component} from 'react';\nimport {Button, Row, Col, Input, Form, DatePicker, Modal, Spin} from \"antd\";\nimport moment from 'moment';\nimport './index.less'\nimport {getPictureList, deletePicture} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport DocumentTitle from 'react-document-title'\nimport {disabledDate,isEmptyObject} from \"../../../utils/var\";\nimport {\n  CheckOutlined,\n  DeleteOutlined,\n  MinusOutlined,\n  MoreOutlined,\n  ReloadOutlined,\n  SearchOutlined\n} from \"@ant-design/icons\";\n\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-08-17 - 20:40\n * 描述：插图管理\n */\nconst {RangePicker} = DatePicker;\n\n// 定义组件（ES6）\nclass Illustration extends Component {\n\n    state = {\n        filters: {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n            filename: null\n        },\n        // 返回的单元格数据\n        datas: [],\n        // 下一页\n        nextpage: 1,\n        // 是否显示加载\n        listLoading: false,\n        // 页面宽度\n        pageSize: 10,\n    };\n\n    /**\n     * 获取插图列表数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let para = {\n            type: 2,\n            nowPage: 'null' === this.state.nextpage ? 1 : this.state.nextpage,\n            pageSize: this.state.pageSize,\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n            filename: this.state.filters.filename,\n        };\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await getPictureList(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            // 表格数据\n            this.rendering(data);\n        } else {\n            this.setState({nextpage: 'null'});\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /**\n     * 表格数据渲染\n     * @param data\n     */\n    rendering = (data) => {\n        let {datas, nextpage} = this.state;\n        // 渲染数据\n        if (!(isEmptyObject(data.grid))) {\n            //第一页采用直接覆盖的显示方式\n            if (data.pageNow === 1) {\n                datas = data.grid;//绑定到Vue\n            } else {\n                datas = (datas).concat(data.grid);//追加，合并\n            }\n        } else {\n            datas = 'null';\n        }\n        //显示是否加载下一页(当前页是最后一页)\n        if (data.pageNow === data.totalPage) {\n            nextpage = 'null';\n        } else {\n            nextpage = data.pageNow + 1;\n        }\n        this.setState({\n            datas: datas,\n            nextpage: nextpage\n        })\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== '') {\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        } else {\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            nextpage: 1,\n            filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    /**\n     * 重置查询条件\n     */\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.beginTime = null;\n        filters.endTime = null;\n        filters.filename = null;\n        _this.setState({\n            nextpage: 1,\n            filters: filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    /**\n     * 文件名名文本框内容改变事件（用于双向绑定数据）\n     * @param event\n     */\n    fileInputInputChange = (event) => {\n        let _this = this;\n        const value = event.target.value;\n        let filters = _this.state.filters;\n        filters.filename = value;\n        _this.setState({\n            nextpage: 1,\n            filters\n        })\n    };\n\n    /**\n     * 弹框确认删除\n     */\n    handleDeleteFile = (e) => {\n        let _this = this;\n        // 得到自定义属性\n        let id =  e.currentTarget.getAttribute('data-id')\n        Modal.confirm({\n            title: '删除确认',\n            content: `确认编号为:'${id}'的壁纸吗?`,\n            onOk: () => {\n                let para = { id: id};\n                _this.deletePicture(para)\n            }\n        })\n    };\n\n    /**\n     * 执行删除操作\n     * @param para\n     * @returns {Promise<void>}\n     */\n    deletePicture = async (para) => {\n        // 在发请求前, 显示loading\n        this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code} = await deletePicture(para);\n        // 在请求完成后, 隐藏loading\n        this.setState({listLoading: false});\n        if (code === 0) {\n            openNotificationWithIcon(\"success\", \"操作结果\", \"删除成功\");\n            this.getDatas();\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    /*\n    执行异步任务: 发异步ajax请求\n     */\n    componentDidMount() {\n        // 加载页面数据\n        this.getDatas();\n    };\n\n\n    render() {\n        // 读取状态数据\n        const {filters, datas, nextpage, listLoading} = this.state;\n        let {beginTime, endTime} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null) {\n            rangeDate = [moment(beginTime), moment(endTime)]\n        } else {\n            rangeDate = [null, null]\n        }\n        return (\n            <DocumentTitle title='插图管理'>\n                <section>\n                    <Row>\n                        <Col span={24} className=\"toolbar\">\n                            <Form layout=\"inline\">\n                                <Form.Item label=\"文件名:\">\n                                    <Input type='text' value={filters.filename} onChange={this.fileInputInputChange}\n                                           placeholder='请输入文件名'/>\n                                </Form.Item>\n                                <Form.Item label=\"上传时间:\">\n                                    <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                      <SearchOutlined/>查询\n                                    </Button>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                      <ReloadOutlined/>重置\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                    {\n                        listLoading === true ? <Spin/> :\n                            <ul className=\"illustration-ul\">\n                                {datas !=='null' ? datas.map((item) => (\n                                        <li span={6} className=\"album-div-imgdiv\" key={item.id}>\n                                            <div className=\"tools\">\n                                                <Button type=\"primary\" shape=\"circle\" icon={<DeleteOutlined/>} data-id={item.id} onClick={this.handleDeleteFile} size=\"small\" title=\"删除\"/>\n                                            </div>\n                                            <a href=\"#toolbar\" rel=\"noopener noreferrer\" className=\"a-img\">\n                                                <img src={item.weburl} alt={item.filename}\n                                                     className=\"img-responsive\"/>\n                                            </a>\n                                        </li>\n                                    )):\n                                    <li span={6} className=\"album-div-imgdiv\">\n                                        <Button type=\"primary\" shape=\"circle\" icon={<MinusOutlined/>} size=\"small\" title=\"好像并没有照片诶\"/>\n                                    </li>\n                                }\n                                {nextpage !=='null' ?\n                                    <li span={6} className=\"album-div-imgdiv\">\n                                        <Button type=\"primary\" onClick={this.getDatas} shape=\"circle\" icon={<MoreOutlined/>} size=\"small\" title=\"加载更多\"/>\n                                    </li>\n                                    :\n                                    <li span={6} className=\"album-div-imgdiv\">\n                                        <Button type=\"primary\" shape=\"circle\" icon={<CheckOutlined/>} size=\"small\" title=\"已经加载完插图了\"/>\n                                    </li>\n                                }\n                            </ul>\n                    }\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default Illustration;\n","import React, { Component } from 'react';\nimport {Col, Row, DatePicker,Card, Statistic, Skeleton,Divider,List} from 'antd';\nimport DocumentTitle from \"react-document-title\";\nimport { TinyArea,TinyColumn,Progress,WordCloud,Rose,DualAxes } from '@ant-design/charts';\nimport {getAccountGrowthRate,getIncomePercentage,getActivityRate,getNewsRate,getOrderByAmount,getPreSixMonthBill,getCountAndWordCloud} from \"../../../api/index\";\nimport moment from 'moment';\nimport './index.less'\nimport {disabledMonth,formatMoney} from \"../../../utils/var\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\n/*\n * 文件名：index.jsx\n * 作者：saya\n * 创建日期：2021/1/23 - 下午8:51\n * 描述：数据概览\n */\n\n// 定义组件（ES6）\nclass Chart extends Component {\n\n  state = {\n    // 收支增长率\n    accountGrowthRate:{\n      loading:true,\n      tradeDate:null,\n      serverData:{\n        m2m: 0,\n        y2y: 0,\n        avg: 0,\n        account: 0\n      }\n    },\n    // 收支率\n    incomePercentage:{\n      loading:true,\n      tradeDate:null,\n      serverData:{\n        account: 0,\n        percentage: 0\n      }\n    },\n    // 活跃度\n    activityRate:{\n      loading:true,\n      tradeDate:null,\n      serverData:{\n        avg: 0,\n        count: 0,\n        log6:{\n          month:[],\n          count:[]\n        }\n      }\n    },\n    // 动态发布\n    newsRate:{\n      loading:true,\n      tradeDate:null,\n      serverData:{\n        avg: 0,\n        count: 0,\n        news6:{\n          month:[],\n          count:[]\n        }\n      }\n    },\n    // 前半年统计图 和 摘要排名 共用的查询时间\n    financial:{\n      tradeDate:null,\n    },\n    // 前半年账单\n    financial6:{\n      config:{\n        autoFit: true,\n        xField: 'time',\n        yField: ['value', 'count'],\n        geometryOptions: [\n          {\n            geometry: 'column',\n            isGroup: true,\n            seriesField: 'type',\n            columnWidthRatio: 0.4,\n            label: {},\n            color: ['#5B8FF9', '#5D7092'],\n          },\n          {\n            geometry: 'line',\n            color: '#5AD8A6',\n          },\n        ],\n        meta: {\n          count: {\n            alias: '收支总额',\n          },\n        },\n      },\n      loading:true,\n      serverData:{\n        currencyNumber:[],\n        incomeAndPay:[],\n      }\n    },\n    // 摘要排名\n    amountOrder:{\n      loading:true,\n      serverData:[]\n    },\n    // 数据分布 及 词云\n    countAndWordCloud:{\n      loading:true,\n      wordCloudConfig:{\n        height: 260,\n        autoFit: true,\n        wordField: 'name',\n        weightField: 'notesCount',\n        colorField: 'name',\n        wordStyle: {\n          fontFamily: 'Verdana',\n          fontSize: [\n            8,\n            32\n          ],\n          rotation: 0\n        },\n        random: function random() {\n          return 0.5;\n        }\n      },\n      serverRoseData:[],\n      serverWordCloudData:[]\n    }\n  };\n\n  /**\n   * 收支增长率\n   * @returns {Promise<void>}\n   */\n  loadAccountGrowthRate = async () => {\n    const _this = this;\n    let accountGrowthRate = _this.state.accountGrowthRate;\n    accountGrowthRate.loading = true;\n    _this.setState({accountGrowthRate});\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getAccountGrowthRate((accountGrowthRate.tradeDate).format('YYYY-MM-DD'));\n    accountGrowthRate.loading = false;\n    if (code === 0) {\n      accountGrowthRate.serverData = data;\n      _this.setState({accountGrowthRate});\n    }else {\n      _this.setState({accountGrowthRate});\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 收支率\n   * @returns {Promise<void>}\n   */\n  loadIncomePercentage = async () => {\n    const _this = this;\n    let incomePercentage = _this.state.incomePercentage;\n    incomePercentage.loading = true;\n    _this.setState({incomePercentage});\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getIncomePercentage((incomePercentage.tradeDate).format('YYYY-MM-DD'));\n    incomePercentage.loading = false;\n    if (code === 0) {\n      incomePercentage.serverData = data;\n      _this.setState({incomePercentage});\n    }else {\n      _this.setState({incomePercentage});\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 活跃度\n   * @returns {Promise<void>}\n   */\n  loadActivityRate= async () => {\n    const _this = this;\n    let activityRate = _this.state.activityRate;\n    activityRate.loading = true;\n    _this.setState({activityRate});\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getActivityRate((activityRate.tradeDate).format('YYYY-MM-DD'));\n    activityRate.loading = false;\n    if (code === 0) {\n      activityRate.serverData.avg = data.avg;\n      activityRate.serverData.count = data.count;\n      const log6 = data.log6;\n      let count = [];\n      let month = [];\n      // 这里的key是月份\n      for(let key in log6){\n        month.push(key);\n        count.push(log6[key])\n      }\n      const log = {month:month,count:count};\n      activityRate.serverData.log6 = log;\n      _this.setState({activityRate});\n    }else {\n      _this.setState({activityRate});\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 动态发布\n   * @returns {Promise<void>}\n   */\n  loadNewsRate = async () => {\n    const _this = this;\n    let newsRate = _this.state.newsRate;\n    newsRate.loading = true;\n    _this.setState({newsRate});\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getNewsRate((newsRate.tradeDate).format('YYYY-MM-DD'));\n    newsRate.loading = false;\n    if (code === 0) {\n      newsRate.serverData.avg = data.avg;\n      newsRate.serverData.count = data.count;\n      const news6 = data.news6;\n      let count = [];\n      let month = [];\n      // 这里的key是月份\n      for(let key in news6){\n        month.push(key);\n        count.push(news6[key])\n      }\n      const news = {month:month,count:count};\n      newsRate.serverData.news6 = news;\n      _this.setState({newsRate});\n    }else {\n      _this.setState({newsRate});\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 账单排名\n   * @returns {Promise<void>}\n   */\n  loadOrderByAmount = async () => {\n    const _this = this;\n    let {amountOrder,financial} = _this.state;\n    amountOrder.loading = true;\n    _this.setState({amountOrder});\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getOrderByAmount((financial.tradeDate).format('YYYY-MM-DD'));\n    amountOrder.loading = false;\n    if (code === 0) {\n      let array = [];\n      for (let i = 0; i < 5 && i < data.length; i++) {\n        array.push({'index':(i+1),'name':data[i].amountEntity.tag,'count':data[i].currencyNumber})\n      }\n      amountOrder.serverData = array;\n      _this.setState({amountOrder});\n    }else {\n      _this.setState({amountOrder});\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 前6个月账单\n   * @returns {Promise<void>}\n   */\n  loadPreSixMonthBill = async () => {\n    const _this = this;\n    let {financial6,financial} = _this.state;\n    financial6.loading = true;\n    _this.setState({financial6});\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getPreSixMonthBill((financial.tradeDate).format('YYYY-MM-DD'));\n    financial6.loading = false;\n    if (code === 0) {\n      let currencyNumber = [];\n      let incomeAndPay = [];\n      for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n        // 总收支\n        currencyNumber.push({time:item.tradeDate,count:item.currencyNumber})\n        // 总收入\n        incomeAndPay.push({time:item.tradeDate,value:item.deposited,type:'收入'})\n        // 总支出\n        incomeAndPay.push({time:item.tradeDate,value:item.expenditure,type:'支出'})\n      }\n      financial6.serverData = {currencyNumber:currencyNumber,incomeAndPay:incomeAndPay};\n      _this.setState({financial6});\n    }else {\n      _this.setState({financial6});\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 数据总量及词云数据\n   * @returns {Promise<void>}\n   */\n  loadCountAndWordCloud= async () => {\n    const _this = this;\n    let countAndWordCloud = _this.state.countAndWordCloud;\n    countAndWordCloud.loading = true;\n    _this.setState({countAndWordCloud});\n    // 发异步ajax请求, 获取数据\n    const {msg, code, data} = await getCountAndWordCloud();\n    countAndWordCloud.loading = false;\n    if (code === 0) {\n      countAndWordCloud.serverRoseData = data.rose;\n      countAndWordCloud.serverWordCloudData = data.wordCloud;\n      _this.setState({countAndWordCloud});\n    }else {\n      _this.setState({countAndWordCloud});\n      openNotificationWithIcon(\"error\", \"错误提示\", msg);\n    }\n  };\n\n  /**\n   * 页面中日期发生变化后的时间\n   * @param date\n   * @param filed\n   */\n  tradeDateChange = (date,filed) => {\n    const _this = this;\n    let _chart = _this.state[filed];\n    if(!date){\n      return;\n    }\n    _chart.tradeDate = date;\n    _this.setState({\n      [filed]: _chart\n    },function () {\n      _this.tradeDateChangeHandle(filed);\n    });\n  };\n\n  tradeDateChangeHandle = (type) => {\n    switch (type) {\n      case \"accountGrowthRate\":\n        this.loadAccountGrowthRate();\n        break;\n      case \"incomePercentage\":\n        this.loadIncomePercentage();\n        break;\n      case \"activityRate\":\n        this.loadActivityRate();\n        break;\n      case \"newsRate\":\n        this.loadNewsRate();\n        break;\n      case \"financial\":\n        this.loadOrderByAmount();\n        this.loadPreSixMonthBill();\n        break;\n      default:\n        break\n    }\n  }\n\n  /**\n   * 鼠标放置活动率面积图事件\n   * @param title\n   * @param data\n   * @returns {string}\n   */\n  activityCustomContent = (index, data) => {\n    const activityRate = this.state.activityRate;\n    let label = '操作次数:';\n    if (activityRate&&activityRate.serverData&&activityRate.serverData.log6&&activityRate.serverData.log6.month&&activityRate.serverData.log6.month[index]) {\n      label = activityRate.serverData.log6.month[index]+'&nbsp;操作次数:';\n    }\n    let _data$, _data$$data;\n    return label.concat(\n            (_data$ = data[0]) === null || _data$ === void 0\n                ? void 0\n                : (_data$$data = _data$.data) === null || _data$$data === void 0\n                ? void 0\n                : _data$$data.y,\n        );\n  };\n\n  /**\n   * 鼠标放置动态柱状图事件\n   * @param title\n   * @param data\n   * @returns {string}\n   */\n  newsCustomContent = (index,data) => {\n    const newsRate = this.state.newsRate;\n    let label = '撰写篇数:';\n    if (newsRate&&newsRate.serverData&&newsRate.serverData.news6&&newsRate.serverData.news6.month&&newsRate.serverData.news6.month[index]) {\n      label = newsRate.serverData.news6.month[index]+'&nbsp;撰写篇数:';\n    }\n    let _data$, _data$$data;\n    return label.concat(\n        (_data$ = data[0]) === null || _data$ === void 0\n            ? void 0\n            : (_data$$data = _data$.data) === null || _data$$data === void 0\n            ? void 0\n            : _data$$data.y,\n    );\n  }\n\n  /*\n   * 为第一次render()准备数据\n   * 因为要异步加载数据，所以方法改为async执行\n   */\n  componentDidMount() {\n    const _this= this;\n    let initMonth = moment();//.format('YYYY-MM-DD');\n    let {accountGrowthRate,incomePercentage,activityRate,newsRate,financial} = _this.state;\n    accountGrowthRate.tradeDate=initMonth;\n    incomePercentage.tradeDate=initMonth;\n    activityRate.tradeDate=initMonth;\n    newsRate.tradeDate=initMonth;\n    financial.tradeDate=initMonth;\n    _this.setState({\n      accountGrowthRate,\n      incomePercentage,\n      activityRate,\n      newsRate,\n      financial\n    },function () {\n      _this.loadAccountGrowthRate();\n      _this.loadIncomePercentage();\n      _this.loadActivityRate();\n      _this.loadNewsRate();\n      _this.loadOrderByAmount();\n      _this.loadPreSixMonthBill();\n      _this.loadCountAndWordCloud();\n    });\n  }\n\n  render() {\n    const {accountGrowthRate,incomePercentage,activityRate,newsRate,financial,amountOrder,financial6,countAndWordCloud} = this.state;\n    return (\n      <DocumentTitle title='概览'>\n        <section className='background-chart'>\n          <Row gutter={[16, 16]}>\n            <Col span={6}>\n              {\n                accountGrowthRate.loading?\n                    <Card><Skeleton active/></Card>\n                    :\n                    <Card>\n                      <Statistic title={<div className='notice-tooltip'>收支总额<DatePicker bordered={false} disabledDate={disabledMonth} onChange={(e)=>this.tradeDateChange(e,'accountGrowthRate')}  picker=\"month\" className='date-switch' value={accountGrowthRate.tradeDate} format='YYYY年MM月'/></div>} value={(accountGrowthRate.serverData && accountGrowthRate.serverData.account)?accountGrowthRate.serverData.account:0} prefix={'￥'} />\n                      <div className='rate-area'>\n                        <div className='m2m-rate'>\n                          <span className='rate-tag'>环比增长</span>\n                          {\n                            (!accountGrowthRate.serverData || !accountGrowthRate.serverData.m2m)\n                                ? '-':\n                                <div>\n                                  {accountGrowthRate.serverData.m2m+'%'}\n                                  <div style={{width:'1em',height:'1em',backgroundSize: 'cover',backgroundImage:`url('${process.env.PUBLIC_URL+'/picture/chart/'+(accountGrowthRate.serverData.m2m>0?'caret-up.svg':'caret-down.svg')}')`}}></div>\n                                </div>\n                          }\n                        </div>\n                        <div className='y2y-rate'>\n                          <span className='rate-tag'>同比增长</span>\n                          {\n                            (!accountGrowthRate.serverData || !accountGrowthRate.serverData.y2y)\n                                ? '-':\n                                <div>\n                                  {accountGrowthRate.serverData.y2y+'%'}\n                                  <div style={{width:'1em',height:'1em',backgroundSize: 'cover',backgroundImage:`url('${process.env.PUBLIC_URL+'/picture/chart/'+(accountGrowthRate.serverData.y2y>0?'caret-up.svg':'caret-down.svg')}')`}}></div>\n                                </div>\n                          }\n                        </div>\n                      </div>\n                      <Divider className='extra-divider'/>\n                      <div>\n                        日均收支金额(元)：{(accountGrowthRate.serverData && accountGrowthRate.serverData.avg)?formatMoney(accountGrowthRate.serverData.avg,2):'-'}\n                      </div>\n                    </Card>\n              }\n            </Col>\n            <Col span={6}>\n              {\n                incomePercentage.loading?\n                    <Card><Skeleton active/></Card>\n                    :\n                    <Card>\n                      <Statistic title={<div className='notice-tooltip'>收支率<DatePicker bordered={false} disabledDate={disabledMonth} onChange={(e)=>this.tradeDateChange(e,'incomePercentage')}  picker=\"month\" className='date-switch' value={incomePercentage.tradeDate} format='YYYY年MM月'/></div>} valueStyle={{ color: ((incomePercentage.serverData && incomePercentage.serverData.percentage)?incomePercentage.serverData.percentage:0)>=0.5?'#cf1322':'#3f8600' }} value={(incomePercentage.serverData && incomePercentage.serverData.percentage)?incomePercentage.serverData.percentage*100:'-'} precision={2} suffix=\"%\"/>\n                      <Progress height={70} autoFit={true} percent={(incomePercentage.serverData && incomePercentage.serverData.percentage)?incomePercentage.serverData.percentage:0} barWidthRatio={0.1} color={['#cf1322','#3f8600']} />\n                      <Divider className='extra-divider'/>\n                      <div>\n                        总收支金额(元)：{(incomePercentage.serverData && incomePercentage.serverData.account)?incomePercentage.serverData.account:'-'}\n                      </div>\n                    </Card>\n              }\n            </Col>\n            <Col span={6}>\n              {\n                activityRate.loading?\n                    <Card><Skeleton active/></Card>\n                    :\n                    <Card>\n                      <Statistic title={<div className='notice-tooltip'>活跃度<DatePicker bordered={false} disabledDate={disabledMonth} onChange={(e)=>this.tradeDateChange(e,'activityRate')}  picker=\"month\" className='date-switch' value={activityRate.tradeDate} format='YYYY年MM月'/></div>} value={(activityRate.serverData && activityRate.serverData.count)?activityRate.serverData.count:0} suffix=\"次\"/>\n                      <TinyArea height={70} autoFit={true} data={activityRate.serverData.log6.count} smooth={true} tooltip={{customContent:this.activityCustomContent}} areaStyle={{fill: '#975fe4'}} line={{color:'#975fe4'}}/>\n                      <Divider className='extra-divider'/>\n                      <div>\n                        日均操作次数(次)：{(activityRate.serverData && activityRate.serverData.avg)?activityRate.serverData.avg:'-'}\n                      </div>\n                    </Card>\n              }\n            </Col>\n            <Col span={6}>\n              {\n                newsRate.loading?\n                    <Card><Skeleton active/></Card>\n                    :\n                    <Card>\n                      <Statistic title={<div className='notice-tooltip'>笔记数<DatePicker bordered={false} disabledDate={disabledMonth} onChange={(e)=>this.tradeDateChange(e,'newsRate')}  picker=\"month\" className='date-switch' value={newsRate.tradeDate} format='YYYY年MM月'/></div>} value={(newsRate.serverData && newsRate.serverData.count)?newsRate.serverData.count:0} suffix=\"篇\"/>\n                      <TinyColumn height={70} autoFit={true} data={newsRate.serverData.news6.count} tooltip={{customContent:this.newsCustomContent}}/>\n                      <Divider className='extra-divider'/>\n                      <div>\n                        日均撰写(篇)：{(newsRate.serverData && newsRate.serverData.avg)?newsRate.serverData.avg:'-'}\n                      </div>\n                    </Card>\n              }\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]}>\n            <Col span={24}>\n              <Card title=\"收入支出\" bordered={false} extra={<DatePicker bordered={false} disabledDate={disabledMonth} onChange={(e)=>this.tradeDateChange(e,'financial')}  picker=\"month\" className='date-switch' value={financial.tradeDate} format='YYYY年MM月'/>}>\n                <Row gutter={50} style={{minHeight:'25em'}}>\n                  <Col span={18}>\n                    {\n                      financial6.loading?\n                        <Skeleton active/>\n                        :\n                        <DualAxes {...financial6.config} data={[financial6.serverData.incomeAndPay, financial6.serverData.currencyNumber]}/>\n                    }\n                  </Col>\n                  <Col span={6}>\n                    {\n                      amountOrder.loading?\n                          <Skeleton active/>\n                          :\n                          <List\n                              header={<div style={{fontWeight:'bold'}}>收支构成排行</div>}\n                              split={false}\n                              dataSource={amountOrder.serverData}\n                              renderItem={item => (\n                                  <List.Item>\n                                    {item.index}、{item.name}<span style={{float:'right'}}>¥{formatMoney(item.count,2)}</span>\n                                  </List.Item>\n                              )}\n                          />\n                    }\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]} >\n            <Col span={15}>\n              {\n                countAndWordCloud.loading?\n                  <Card><Skeleton active/></Card>\n                  :\n                  <Card title=\"数据分布\" bordered={false}>\n                    <Rose height={260} autoFit={true} xField='type' yField='value' seriesField='type' radius={0.9} label={{ offset: -15 }} data={countAndWordCloud.serverRoseData}/>\n                  </Card>\n              }\n            </Col>\n            <Col span={9}>\n              {\n                countAndWordCloud.loading?\n                  <Card><Skeleton active/></Card>\n                  :\n                  <Card title=\"活跃笔记簿\" bordered={false}>\n                    <WordCloud {...countAndWordCloud.wordCloudConfig} data={countAndWordCloud.serverWordCloudData}/>\n                  </Card>\n              }\n            </Col>\n          </Row>\n        </section>\n      </DocumentTitle>\n    );\n  }\n}\n\n// 对外暴露\nexport default Chart;\n","import React, {Component} from 'react';\nimport {totalTransactionForDay, outTransactionForDayExcel} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport moment from 'moment';\nimport axios from 'axios';\nimport {SearchOutlined, ReloadOutlined, FileExcelOutlined} from '@ant-design/icons';\nimport DocumentTitle from 'react-document-title'\nimport {Button, Col, DatePicker, Table, Form} from \"antd\";\nimport {disabledDate, formatMoney} from \"../../../utils/var\";\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-09-01 - 15:09\n * 描述：财务日度报表\n */\nconst {RangePicker} = DatePicker;\n// 定义组件（ES6）\nclass FinancialForDay extends Component {\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n        filters: {\n            beginTime: null,// 搜索表单的开始时间\n            endTime: null,// 搜索表单的结束时间\n        },\n    };\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '统计日期',\n                dataIndex: 'tradeDate', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '收入',\n                dataIndex: 'deposited', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.deposited))\n            },\n            {\n                title: '支出',\n                dataIndex: 'expenditure', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.expenditure))\n            },\n            {\n                title: '收支总额',\n                dataIndex: 'currencyNumber', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.currencyNumber))\n            }\n        ]\n    };\n\n    /**\n     * 获取页面数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let _this = this;\n        let para = {\n            beginTime: _this.state.filters.beginTime,\n            endTime: _this.state.filters.endTime,\n            nowPage: this.state.nowPage,\n            pageSize: this.state.pageSize,\n        };\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await totalTransactionForDay(para);\n        // 在请求完成后, 隐藏loading\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            _this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n    reloadPage = () => {\n        // 重置查询条件\n        let _this = this;\n        let filters = _this.state.filters;\n        filters.beginTime = null;\n        filters.endTime = null;\n        _this.setState({\n            nowPage: 1,\n            filters: filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        let _this = this;\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        _this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        let _this = this;\n        _this.setState({\n            nowPage: current,\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    // 日期选择发生变化\n    onChangeDate = (date, dateString) => {\n        let _this = this;\n        let {filters} = _this.state;\n        // 为空要单独判断\n        if (dateString[0] !== '' && dateString[1] !== '') {\n            filters.beginTime = dateString[0];\n            filters.endTime = dateString[1];\n        } else {\n            filters.beginTime = null;\n            filters.endTime = null;\n        }\n        _this.setState({\n            nowPage: 1,\n            filters\n        }, function () {\n            _this.getDatas()\n        });\n    };\n\n    /**\n     * 导出财务流水\n     */\n    exportExcel = () =>{\n        let _this = this;\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        let para = {\n            beginTime: this.state.filters.beginTime,\n            endTime: this.state.filters.endTime,\n        };\n        axios({\n            method: \"GET\",\n            url: outTransactionForDayExcel,   //接口地址\n            params: para,           //接口参数\n            responseType: 'blob',\n            //上面这个参数不加会乱码，据说{responseType: 'arraybuffer'}也可以\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(function (res) {\n                _this.setState({listLoading: false});\n                let fileName = '财务流水日度报表.xlsx';//excel文件名称\n                let blob = new Blob([res.data], {type: 'application/x-xlsx'});   //word文档为msword,pdf文档为pdf，excel文档为x-xls\n                if (window.navigator.msSaveOrOpenBlob) {\n                    navigator.msSaveBlob(blob, fileName);\n                } else {\n                    let link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }\n            })\n            .catch(function (res) {\n                console.log(res);\n                _this.setState({listLoading: false});\n                openNotificationWithIcon(\"error\", \"错误提示\", \"导出财务流水日度报表失败\");\n            });\n    };\n\n    /*\n    *为第一次render()准备数据\n    * 因为要异步加载数据，所以方法改为async执行\n    */\n    componentDidMount() {\n        // 初始化表格属性设置\n        this.initColumns();\n        // 加载页面数据\n        this.getDatas();\n    };\n\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading, filters} = this.state;\n        let {beginTime, endTime} = filters;\n        let rangeDate;\n        if (beginTime !== null && endTime !== null) {\n            rangeDate = [moment(beginTime), moment(endTime)]\n        } else {\n            rangeDate = [null, null]\n        }\n        return (\n            <DocumentTitle title=\"日度报表\">\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item>\n                                <RangePicker value={rangeDate} disabledDate={disabledDate} onChange={this.onChangeDate}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getDatas}>\n                                    <SearchOutlined/>查询\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.reloadPage}>\n                                    <ReloadOutlined/>重置\n                                </Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.exportExcel}>\n                                    <FileExcelOutlined/>导出\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" bordered rowKey='tradeDate' loading={listLoading} columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default FinancialForDay;","import React, {Component} from 'react';\nimport {totalTransactionForMonth, outTransactionForMonthExcel} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport axios from 'axios'\nimport DocumentTitle from 'react-document-title'\nimport {Button, Col, Table, Form} from \"antd\";\nimport {FileExcelOutlined} from \"@ant-design/icons\";\nimport {formatMoney} from \"../../../utils/var\";\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-09-01 - 15:09\n * 描述：财务月度报表\n */\n// 定义组件（ES6）\nclass FinancialForMonth extends Component {\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n    };\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '统计日期',\n                dataIndex: 'tradeDate', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '收入',\n                dataIndex: 'deposited', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.deposited))\n            },\n            {\n                title: '支出',\n                dataIndex: 'expenditure', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.expenditure))\n            },\n            {\n                title: '收支总额',\n                dataIndex: 'currencyNumber', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.currencyNumber))\n            }\n        ]\n    };\n\n    /**\n     * 获取页面数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let _this = this;\n        let para = {\n            nowPage: this.state.nowPage,\n            pageSize: this.state.pageSize,\n        };\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await totalTransactionForMonth(para);\n        // 在请求完成后, 隐藏loading\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            _this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        let _this = this;\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        _this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        let _this = this;\n        _this.setState({\n            nowPage: current,\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    /**\n     * 导出财务流水\n     */\n    exportExcel = () =>{\n        let _this = this;\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        axios({\n            method: \"GET\",\n            url: outTransactionForMonthExcel,   //接口地址\n            //params: para,           //接口参数\n            responseType: 'blob',\n            //上面这个参数不加会乱码，据说{responseType: 'arraybuffer'}也可以\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(function (res) {\n                _this.setState({listLoading: false});\n                let fileName = '财务流水月度报表.xlsx';//excel文件名称\n                let blob = new Blob([res.data], {type: 'application/x-xlsx'});   //word文档为msword,pdf文档为pdf，excel文档为x-xls\n                if (window.navigator.msSaveOrOpenBlob) {\n                    navigator.msSaveBlob(blob, fileName);\n                } else {\n                    let link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }\n            })\n            .catch(function (res) {\n                console.log(res);\n                _this.setState({listLoading: false});\n                openNotificationWithIcon(\"error\", \"错误提示\", \"导出财务流水月度报表失败\");\n            });\n    };\n\n    /*\n    *为第一次render()准备数据\n    * 因为要异步加载数据，所以方法改为async执行\n    */\n    componentDidMount() {\n        // 初始化表格属性设置\n        this.initColumns();\n        // 加载页面数据\n        this.getDatas();\n    };\n\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading} = this.state;\n        return (\n            <DocumentTitle title=\"月度报表\">\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.exportExcel}>\n                                    <FileExcelOutlined/>导出\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" rowKey='tradeDate' bordered loading={listLoading} columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default FinancialForMonth;","import React, {Component} from 'react';\nimport {totalTransactionForYear, outTransactionForYearExcel} from \"../../../api\";\nimport {openNotificationWithIcon} from \"../../../utils/window\";\nimport axios from 'axios'\nimport DocumentTitle from 'react-document-title'\nimport {Button, Col, Icon, Table, Form} from \"antd\";\nimport {formatMoney} from \"../../../utils/var\";\nimport {FileExcelOutlined} from \"@ant-design/icons\";\n/*\n * 文件名：index.jsx\n * 作者：liunengkai\n * 创建日期：2019-09-01 - 15:09\n * 描述：财务年度报表\n */\n// 定义组件（ES6）\nclass FinancialForYear extends Component {\n\n    state = {\n        // 返回的单元格数据\n        datas: [],\n        // 总数据行数\n        dataTotal: 0,\n        // 当前页\n        nowPage: 1,\n        // 页面宽度\n        pageSize: 10,\n        // 是否显示加载\n        listLoading: false,\n    };\n\n    /*\n    * 初始化Table所有列的数组\n    */\n    initColumns = () => {\n        this.columns = [\n            {\n                title: '统计日期',\n                dataIndex: 'tradeDate', // 显示数据对应的属性名\n                align:'center',\n            },\n            {\n                title: '收入',\n                dataIndex: 'deposited', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.deposited))\n            },\n            {\n                title: '支出',\n                dataIndex: 'expenditure', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.expenditure))\n            },\n            {\n                title: '收支总额',\n                dataIndex: 'currencyNumber', // 显示数据对应的属性名\n                align:'right',\n                render:(value,row) => (formatMoney(row.currencyNumber))\n            }\n        ]\n    };\n\n    /**\n     * 获取页面数据\n     * @returns {Promise<void>}\n     */\n    getDatas = async () => {\n        let _this = this;\n        let para = {\n            nowPage: this.state.nowPage,\n            pageSize: this.state.pageSize,\n        };\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        // 发异步ajax请求, 获取数据\n        const {msg, code, data} = await totalTransactionForYear(para);\n        // 在请求完成后, 隐藏loading\n        _this.setState({listLoading: false});\n        if (code === 0) {\n            _this.setState({\n                // 总数据量\n                dataTotal: data.dateSum,\n                // 表格数据\n                datas: data.grid\n            });\n        } else {\n            openNotificationWithIcon(\"error\", \"错误提示\", msg);\n        }\n    };\n\n\n    // 回调函数,改变页宽大小\n    changePageSize = (pageSize, current) => {\n        let _this = this;\n        // react在生命周期和event handler里的setState会被合并（异步）处理,需要在回调里回去获取更新后的 state.\n        _this.setState({\n            nowPage: 1,\n            pageSize: pageSize\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    // 回调函数，页面发生跳转\n    changePage = (current) => {\n        let _this = this;\n        _this.setState({\n            nowPage: current,\n        }, function () {\n            _this.getDatas();\n        });\n    };\n\n    /**\n     * 导出财务流水\n     */\n    exportExcel = () =>{\n        let _this = this;\n        // 在发请求前, 显示loading\n        _this.setState({listLoading: true});\n        axios({\n            method: \"GET\",\n            url: outTransactionForYearExcel,   //接口地址\n            //params: para,           //接口参数\n            responseType: 'blob',\n            //上面这个参数不加会乱码，据说{responseType: 'arraybuffer'}也可以\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(function (res) {\n                _this.setState({listLoading: false});\n                let fileName = '财务流水年度报表.xlsx';//excel文件名称\n                let blob = new Blob([res.data], {type: 'application/x-xlsx'});   //word文档为msword,pdf文档为pdf，excel文档为x-xls\n                if (window.navigator.msSaveOrOpenBlob) {\n                    navigator.msSaveBlob(blob, fileName);\n                } else {\n                    let link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = fileName;\n                    link.click();\n                    window.URL.revokeObjectURL(link.href);\n                }\n            })\n            .catch(function (res) {\n                console.log(res);\n                _this.setState({listLoading: false});\n                openNotificationWithIcon(\"error\", \"错误提示\", \"导出财务流水年度报表失败\");\n            });\n    };\n\n    /*\n    *为第一次render()准备数据\n    * 因为要异步加载数据，所以方法改为async执行\n    */\n    componentDidMount() {\n        // 初始化表格属性设置\n        this.initColumns();\n        // 加载页面数据\n        this.getDatas();\n    };\n\n\n    render() {\n        // 读取状态数据\n        const {datas, dataTotal, nowPage, pageSize, listLoading} = this.state;\n        return (\n            <DocumentTitle title=\"年度报表\">\n                <section>\n                    <Col span={24} className=\"toolbar\">\n                        <Form layout=\"inline\">\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.exportExcel}>\n                                    <FileExcelOutlined/>导出\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24} className=\"dataTable\">\n                        <Table size=\"middle\" bordered rowKey='tradeDate' loading={listLoading} columns={this.columns} dataSource={datas}\n                               pagination={{\n                                   current:nowPage,\n                                   showTotal: () => `当前第${nowPage}页 共${dataTotal}条`,\n                                   pageSize: pageSize, showQuickJumper: true, total: dataTotal, showSizeChanger: true,\n                                   onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n                                   onChange: this.changePage,\n                               }}/>\n                    </Col>\n                </section>\n            </DocumentTitle>\n        );\n    }\n}\n\n// 对外暴露\nexport default FinancialForYear;","import React, {Component} from 'react';\nimport './index.less'\nimport {Redirect, Route, Switch, Link} from 'react-router-dom'\nimport { MenuOutlined } from '@ant-design/icons';\nimport menuConfig from '../../../config/backendMenuConfig'\nimport memoryUtils from \"../../../utils/memoryUtils\";\nimport storageUtils from '../../../utils/storageUtils'\nimport {isEmptyObject} from \"../../../utils/var\"\nimport { Button, Input, Menu, Popover, Avatar, Breadcrumb, Badge, Modal} from 'antd';\nimport {HomeOutlined,NotificationOutlined,MessageOutlined, DatabaseOutlined,StockOutlined,FieldTimeOutlined,SearchOutlined,UserOutlined,AccountBookOutlined,ScheduleOutlined,PushpinOutlined,CarryOutOutlined,MoneyCollectOutlined,SwitcherOutlined} from '@ant-design/icons';\nimport {requestLogout} from '../../../api'\nimport Info from '../../me/info'\nimport Logs from '../../me/logs'\nimport Transaction from '../../financial/transaction'\nimport Memo from '../../memory/memo'\nimport NoteBook from \"../../memory/notebook\";\nimport Notes from \"../../memory/notes\";\nimport News from \"../../memory/news\";\nimport Plan from \"../../memory/plan\";\nimport DB from \"../../oss/db\";\nimport Files from \"../../oss/file\";\nimport Wallpaper from \"../../oss/wallpaper\";\nimport Illustration from \"../../oss/illustration\";\nimport Chart from \"../../me/chart\";\nimport FinancialForDay from \"../../financial/day\";\nimport FinancialForMonth from \"../../financial/month\";\nimport FinancialForYear from \"../../financial/year\";\n/*\n * 文件名：index.jsx\n * 作者：saya\n * 创建日期：2020/7/15 - 10:20 下午\n * 描述：后台主页\n */\nconst {SubMenu} = Menu;\n// 定义组件（ES6）\nclass LayoutBackend extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // 默认让左侧的菜单展开\n            collapsed: false,\n            // 当前展开的菜单数组\n            openKeys: [],\n            searchfocus: false,\n            searchValue: null\n        };\n    }\n\n    /***\n     * 将字符串转换成组件\n     * @param value\n     * @returns {*}\n     */\n    transformComponent = (value) => {\n        switch(value) {\n            case 'DatabaseOutlined': {\n                return <DatabaseOutlined/>\n            }\n            case 'UserOutlined':{\n              return <UserOutlined/>\n            }\n            case 'AccountBookOutlined':{\n              return <AccountBookOutlined/>\n            }\n            case 'ScheduleOutlined':{\n              return <ScheduleOutlined/>\n            }\n            case 'HomeOutlined':{\n              return <HomeOutlined/>\n            }\n            default: {\n                return <MessageOutlined/>\n            }\n        }\n    };\n\n    // 切换面板\n    handlTabClick = () => {\n        const collapsed = !this.state.collapsed;\n        // 更新状态\n        this.setState({collapsed: collapsed})\n    };\n\n\n    /**\n     * 失去焦点\n     */\n    inputOnBlur = () => {\n        this.setState({\n            searchfocus: false\n        })\n    };\n\n\n    /**\n     * 获得焦点\n     */\n    inputOnFocus = () =>{\n        this.setState({\n            searchfocus: true\n        })\n    }\n\n    /**\n     * 初始化头像下拉菜单\n     */\n    initHeaderMenu = () => (\n        <div className=\"backend-layout-header-info-hover\">\n            <div className='user-img-div'>\n                <Avatar size={64} icon={<UserOutlined/>} src={this.userCatche.user.logo}/>\n                <div className='operator-img'>\n                    <span>{this.userCatche.user.user}</span>\n                    <Link to='/backstage/set/info'>更换头像</Link>\n                </div>\n            </div>\n            <div className='system-operator'>\n                <Button type=\"link\" href='/backstage/set/info'>设置</Button>\n                <Button type=\"link\" onClick={this.logout}>退出</Button>\n            </div>\n        </div>\n    )\n\n    /*\n     根据menu的数据数组生成对应的标签数组\n     使用reduce() + 递归调用\n     */\n    getMenuNodes = (menuList) => {\n        let _this = this;\n        // 得到当前请求的路由路径\n        const path = this.props.location.pathname;\n        return menuList.reduce((pre, item) => {\n            // 向pre添加<Menu.Item>\n            if (!item.children && item.hidden === false) {\n              if(item.root){\n                // 处理只有根节点，无子节点的菜单\n                if(path===item.key){\n                  // 当前打开的是根节点且无子节点，无须展开\n                  _this.setState({\n                    openKeys:[]\n                  })\n                }\n                pre.push((\n                  <Menu.Item key={item.key} icon={_this.transformComponent(item.icon)}><Button type=\"link\" style={{padding:0,color:'rgba(255, 255, 255, 0.7)'}} href={item.key}>{item.title}</Button></Menu.Item>\n                ))\n              }else{\n                pre.push((\n                  <Menu.Item key={item.key}><Button type=\"link\" href={item.key}>{item.title}</Button></Menu.Item>\n                ))\n              }\n            } else if (item.children && item.hidden === false) {\n                // 查找一个与当前请求路径匹配的子Item\n                const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0);\n                // 如果存在, 说明当前item的子列表需要打开\n                if (cItem) {\n                    _this.setState({\n                        openKeys:[item.key]\n                    })\n                }\n                // 向pre添加<SubMenu>\n                pre.push((\n                    <SubMenu key={item.key} icon={_this.transformComponent(item.icon)} style={{color:'rgba(255, 255, 255, 0.7)'}} title={<span>{item.title}</span>}>\n                        {_this.getMenuNodes(item.children)}\n                    </SubMenu>\n                ));\n            }\n            return pre\n        }, [])\n    };\n\n    /**\n     * 提取当前页面的标题\n     **/\n    getTitle = () => {\n        // 得到当前请求路径\n        const path = this.props.location.pathname;\n        let titles = {title: [], local: ''};\n        menuConfig.forEach(item => {\n            if (item.key === path) { // 如果当前item对象的key与path一样,item的title就是需要显示的title\n                titles.title.push((<Breadcrumb.Item key={item.key}>{item.title}</Breadcrumb.Item>));\n                titles.local = item.title\n            } else if (item.children) {\n                // 在所有子item中查找匹配的\n                const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0);\n                // 如果有值才说明有匹配的\n                if (cItem) {\n                    // 取出它的一级和二级title\n                    titles.title.push((<Breadcrumb.Item key={item.key}>{item.title}</Breadcrumb.Item>));\n                    titles.title.push((<Breadcrumb.Item key={cItem.key}>{cItem.title}</Breadcrumb.Item>));\n                    titles.local = cItem.title\n                }\n            }\n        });\n        return titles\n    };\n\n    /**\n     * 一级菜单点击展开事件\n     * @param _openKeys\n     */\n    onOpenChange = (_openKeys) => {\n        let _this = this;\n        const openKeys = this.state.openKeys;\n        const latestOpenKey = _openKeys.find(key => openKeys.indexOf(key) === -1);\n        menuConfig.reduce((pre, item) => {\n            if (item.hidden === false){\n                const cItem = _openKeys.find(cItem => openKeys.indexOf(cItem) === -1);\n                // 如果存在, 说明当前item的子列表需要打开\n                if (cItem) {\n                    // 切换\n                    _this.setState({\n                        openKeys: latestOpenKey ? [latestOpenKey] : [],\n                    });\n                }else {\n                    // 不切换保持原样\n                    _this.setState({ openKeys:_openKeys });\n                }\n            }\n        }, [])\n    };\n\n    getParentMenuChild = (path) => {\n        for (var i = 0; i < menuConfig.length; i++) {\n            const item = menuConfig[i];\n            if (path.indexOf(item.key) === 0){\n                return [item.key];\n            }\n        }\n        return []\n    };\n\n    /*\n    退出登陆\n     */\n    logout = () => {\n        // 显示确认框\n        Modal.confirm({\n            title: '操作确认',\n            content:'确定退出吗?',\n            onOk: async () => {\n                // 请求注销接口\n                await requestLogout();\n                // 删除保存的user数据\n                storageUtils.removeUser();\n                memoryUtils.user = {};\n                // 跳转到login\n                this.props.history.replace('/login')\n            }\n        })\n    };\n\n    /**\n     * 搜索框内容改变事件（用于双向绑定数据）\n     * @param event\n     */\n    searchInputChange = (event) => {\n        let _this = this;\n        const value = event.target.value\n        _this.setState({\n            searchValue: value\n        })\n    };\n\n    /**\n     * 执行搜索\n     */\n    handleSearch = () =>{\n        let _this = this;\n        let searchValue = _this.state.searchValue || \"\"\n        searchValue = searchValue.trim()\n        if (!!searchValue) {\n            // 有效内容可以搜索\n            // 跳转到笔记列表界面 (需要再回退到当前页面),replace是不需要回退\n            this.props.history.push(`/backstage/grow/notes?search=${searchValue}`)\n        }\n    }\n\n    /**\n     * 写笔记\n     */\n    addNotes = () => {\n        // 跳转到笔记列表界面 (需要再回退到当前页面),replace是不需要回退\n        this.props.history.push('/backstage/memory/notes/create')\n    }\n\n    /*\n    * 在第一次render()之前执行一次\n    * 为第一个render()准备数据(必须同步的)\n    */\n  componentDidMount() {\n      this.userCatche = memoryUtils.user || {};\n      // 初始化左侧导航\n      this.menuNodes = this.getMenuNodes(menuConfig);\n      // 顶部用户头像下拉\n      this.headerUserInfo = this.initHeaderMenu()\n  }\n\n    render() {\n        const user = memoryUtils.user;\n        // 如果内存没有存储user ==> 当前没有登陆\n        if (!user || !user.user) {\n            // 自动跳转到登陆(在render()中)\n            return <Redirect to='/login'/>\n        }\n        // 读取状态\n        let {collapsed, searchfocus, openKeys, searchValue} = this.state;\n        // 得到当前请求的路由路径\n        let path = this.props.location.pathname;\n        if (path.indexOf('/backstage/memory/news') === 0){\n            // 当前请求的是news及其下面的路由\n            path = '/backstage/message/news'\n        }\n        // 显示搜索框\n        let showSearch = true\n        if (path.indexOf('/backstage/memory/notes') === 0){\n            // 当前请求的是news及其下面的路由\n            path = '/backstage/grow/notes'\n            // 如果进入笔记模块，则不显示\n            showSearch = false\n        }\n        // 得到当前需要显示的title\n        const {title, local} = this.getTitle();\n        return (\n            <div className=\"backend-container\">\n                <div className='background-div' style={{backgroundImage:`url('${user.user.backgroundUrl || process.env.PUBLIC_URL+'/picture/backend/admin_background1.jpg'}')`}}>\n                </div>\n                <header className=\"this-header\">\n                    <div className='header-logo'>\n                        <div className='tab-operation'>\n                            <Button type=\"link\" size='large' onClick={this.handlTabClick}>\n                                <MenuOutlined/>\n                            </Button>\n                        </div>\n                        <div className='project-div' style={{backgroundImage:`url('${process.env.PUBLIC_URL}/picture/svg/project.svg')`}}>\n                        </div>\n                        <div className='project-name'>\n                            亲亲里\n                        </div>\n                    </div>\n                    <div className='header-search'>\n                        <div className='header-search-form'>\n                            {\n                                showSearch ?\n                                    <div className='header-search-form-input' style={{background:searchfocus?'#fff':'rgba(241,243,244,0.24)'}}>\n                                        <Button onClick={this.handleSearch}><SearchOutlined/></Button>\n                                        <Input placeholder=\"搜索笔记\"\n                                               value={searchValue}\n                                               onChange={this.searchInputChange}\n                                               onPressEnter={this.handleSearch}\n                                               onBlur={this.inputOnBlur }\n                                               onFocus={this.inputOnFocus }/>\n                                    </div>\n                                    : null\n                            }\n                        </div>\n                        <div className='header-search-menu'>\n                            {\n                                !(isEmptyObject(user.plan)) ?\n                                    <Popover content={user.plan.reduce((pre, item) => {pre.push(<p key={item.id}>{item.describe}</p>);return pre},[])} title=\"今天计划\">\n                                        <Badge count={user.plan.length} dot color=\"#2db7f5\">\n                                            <NotificationOutlined/>\n                                        </Badge>\n                                    </Popover> :\n                                    <Popover content=\"暂无计划\" title=\"今天计划\">\n                                        <Badge count={0} dot>\n                                            <NotificationOutlined/>\n                                        </Badge>\n                                    </Popover>\n                            }\n                        </div>\n                    </div>\n                    <div className='header-info'>\n                        <Popover trigger=\"hover\" mouseEnterDelay={0.2} mouseLeaveDelay={0.4} content={this.headerUserInfo}  placement=\"bottomRight\">\n                            <span className=\"el-dropdown-link\">\n                                <img src={user.user.logo} alt={user.user.user}/>\n                            </span>\n                        </Popover>\n                    </div>\n                </header>\n                <section className=\"this-content\">\n                    <div className={`leftmunu ${collapsed ? 'leftmunu-close' : 'leftmunu-open'}`}>\n                        <div className='menu-logo'>\n                            <div className={`logo-item ${collapsed?\"menu-logo-close\":null}`} onClick={this.addNotes}>\n                                写笔记\n                            </div>\n                        </div>\n                        <div className='menu-list'>\n                            <Menu className='menu-list-ul' subMenuCloseDelay={1}  subMenuOpenDelay={1}  onOpenChange={this.onOpenChange} openKeys={openKeys} defaultOpenKeys={openKeys} mode=\"inline\"\n                                  inlineCollapsed={collapsed}>\n                                {\n                                    this.menuNodes\n                                }\n                            </Menu>\n                        </div>\n                        <div className={`menu-copyright ${collapsed?\"menu-copyright-close\":null}`}>\n                            <Button type=\"link\" title='切换壁纸' href=\"/backstage/oss/wallpaper\"><SwitcherOutlined/></Button>\n                            <Button type=\"link\" title='数据统计' href=\"/backstage/chart\"><StockOutlined/></Button>\n                            <Button type=\"link\" title='操作日志' href=\"/backstage/me/logs\"><FieldTimeOutlined/></Button>\n                        </div>\n                    </div>\n                    <div className='content-container'>\n                        <div className='pagename-div'>\n                            <div className='pagename-label'>\n                                <strong>{local}</strong>\n                                <Breadcrumb className=\"breadcrumb-inner\">\n                                    <Breadcrumb.Item>所在位置</Breadcrumb.Item>\n                                    {\n                                        title\n                                    }\n                                </Breadcrumb>\n                            </div>\n                        </div>\n                        <div className='content-div'>\n                            <div className='container-div'>\n                                <Switch>\n                                    <Route path='/backstage/me/info' component={Info}/>\n                                    <Route path='/backstage/me/logs' component={Logs}/>\n                                    <Route path='/backstage/chart' component={Chart}/>\n                                    <Route path='/backstage/financial/transaction' component={Transaction}/>\n                                    <Route path='/backstage/financial/day' component={FinancialForDay} />\n                                    <Route path='/backstage/financial/month' component={FinancialForMonth}/>\n                                    <Route path='/backstage/financial/year' component={FinancialForYear}/>\n                                    <Route path='/backstage/memory/news' component={News}/>\n                                    <Route path='/backstage/memory/plan' component={Plan}/>\n                                    <Route path='/backstage/memory/notebook' component={NoteBook}/>\n                                    <Route path='/backstage/memory/notes' component={Notes}/>\n                                    <Route path='/backstage/memory/memo' component={Memo}/>\n                                    <Route path='/backstage/oss/wallpaper' component={Wallpaper}/>\n                                    <Route path='/backstage/oss/illustration' component={Illustration}/>\n                                    <Route path='/backstage/oss/files' component={Files}/>\n                                    <Route path='/backstage/oss/db' component={DB}/>\n                                    {/*默认、及匹配不到时的页面*/}\n                                    <Redirect to='/backstage/me/info'/>\n                                </Switch>\n                            </div>\n                            <div className='operation-info'>\n                                {\n                                    !(isEmptyObject(user.log)) ?\n                                        <span>{`您上次操作时间:${user.log.date},操作地点:${user.log.city}(${user.log.ip}),操作明细:${user.log.logType.describe}`}</span> :\n                                        <span>Hi，这是您第一次使用吧？如有需要帮助的请及时联系运营团队。</span>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className='quick-div'>\n                        <Button type=\"link\" title='记账' href=\"/backstage/financial/transaction\"><MoneyCollectOutlined/></Button>\n                        <Button type=\"link\" title='发布动态' href=\"/backstage/memory/news/publish\"><NotificationOutlined/></Button>\n                        <Button type=\"link\" title='日程安排' href=\"/backstage/memory/plan\"><CarryOutOutlined/></Button>\n                        <Button type=\"link\" title='便利贴' href=\"/backstage/memory/memo\"><PushpinOutlined/></Button>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\n// 对外暴露\nexport default LayoutBackend;\n","import React, {Component} from 'react';\nimport './index.less'\nimport {Button,message, Input} from 'antd';\nimport DocumentTitle from 'react-document-title'\nimport {requestLogin} from '../../api'\nimport memoryUtils from '../../utils/memoryUtils'\nimport storageUtils from '../../utils/storageUtils'\n/*\n * 文件名：index.jsx\n * 作者：刘能凯\n * 创建日期：2020-7-15 - 14:22\n * 描述：登录的路由组件\n */\n\nconst activeLabel = {\n  lineHeight: \"18px\",\n  fontSize: \"18px\",\n  fontWeight: 100,\n  top: \"0px\"\n};\n\nconst activeSpin = {\n  width: \"100%\"\n};\n\nconst unactiveLabel = {\n  lineHeight: \"60px\",\n  fontSize: \"24px\",\n  fontWeight: 300,\n  top: \"10px\"\n};\n\nconst unactiveSpin = {\n  width: \"0px\"\n};\n\n// 定义组件（ES6）\nclass Login extends Component {\n\n  state = {\n    // 用户文本框状态\n    userState: false,\n    // 密码框状态\n    pwdState: false,\n    // 给用户输入的文本框和密码框\n    userName: '',\n    passWord: '',\n    loading: false\n  };\n\n\n  /**\n   * 用户名文本框失去焦点事件\n   */\n  userOnBlur = () => {\n    let _this = this;\n    let {userName} = _this.state;\n    // 当用户文本框失去焦点，需要判断文本框是否有值，如果有值，此时不能把文本框还原缩小\n    if (null === userName || \"\" === userName) {\n      _this.setState({userState: false});\n    } else {\n      _this.setState({userState: true});\n    }\n  };\n\n  /**\n   * 用户名文本框获得焦点事件\n   */\n  userOnFocus = () => {\n    let _this = this;\n    _this.setState({userState: true});\n  };\n\n  /**\n   * 用户名密码失去焦点事件\n   */\n  pwdOnBlur = () => {\n    let _this = this;\n    let {passWord} = _this.state;\n    // 当密码框失去焦点，需要判断密码框是否有值，如果有值，此时不能把密码框还原缩小\n    if (null === passWord || \"\" === passWord) {\n      _this.setState({pwdState: false});\n    } else {\n      _this.setState({pwdState: true});\n    }\n  };\n\n  /**\n   * 用户名密码框获得焦点事件\n   */\n  pwdOnFocus = () => {\n    let _this = this;\n    _this.setState({pwdState: true});\n  };\n\n  /**\n   * 双向绑定用户文本框\n   * @param event\n   */\n  userInputChange = (event) => {\n    let _this = this;\n    const value = event.target.value;\n    _this.setState({\n      userName: value.trim()\n    })\n  };\n\n  /**\n   * 双向绑定密码框\n   * @param event\n   */\n  pwdInputChange = (event) => {\n    let _this = this;\n    const value = event.target.value;\n    _this.setState({\n      passWord: value.trim()\n    })\n  };\n\n  /**\n   * 响应登录事件\n   */\n  loginHandle = async () => {\n    let _this = this;\n    let {userName,passWord} = _this.state;\n    if (null === userName || null === passWord || '' === userName || '' === passWord){\n      message.error('请输入用户名和密码');\n      return\n    }\n    let loginParams = {user: userName, password: passWord};\n    _this.setState({loading: true});\n    const result = await requestLogin(loginParams);\n    let {code, data} = result;\n    _this.setState({loading: false});\n    if (code === 0) {\n      memoryUtils.user = data;// 保存在内存中\n      storageUtils.saveUser(data); // 保存到local中\n      // 跳转到管理界面 (不需要再回退回到登陆),push是需要回退\n      this.props.history.replace('/backstage/chart')\n    } else if (code === 5) {\n      message.error('请输入用户名和密码');\n    } else {\n      message.error('用户名或密码错误');\n    }\n  };\n\n  render() {\n    // 读取状态数据\n    const {userState, pwdState, userName, passWord,loading} = this.state;\n    return (\n      <DocumentTitle title='亲亲里·统一身份认证入口'>\n        <div className=\"login-register-container\"\n             style={{backgroundImage: `url('${process.env.PUBLIC_URL}/picture/login/login_background1.png')`}}>\n          <div className=\"login-register-box\">\n            <div className=\"login-box\">\n              <div className=\"title\">登录</div>\n              <div className=\"input\">\n                <label style={userState ? activeLabel : unactiveLabel}>用户名</label>\n                <Input type=\"text\" value={userName} onChange={this.userInputChange} onBlur={this.userOnBlur}\n                       onFocus={this.userOnFocus}/>\n                <span className=\"spin\" style={userState ? activeSpin : unactiveSpin}></span>\n              </div>\n              <div className=\"input\">\n                <label style={pwdState ? activeLabel : unactiveLabel}>密码</label>\n                <Input type=\"password\" value={passWord} onChange={this.pwdInputChange} onBlur={this.pwdOnBlur}\n                       onFocus={this.pwdOnFocus}/>\n                <span className=\"spin\" style={pwdState ? activeSpin : unactiveSpin}></span>\n              </div>\n              <div className=\"button login\">\n                <Button type=\"text\" onClick={this.loginHandle} loading={loading}>登录</Button>\n              </div>\n              <Button type=\"link\" className=\"pass-forgot\">\n                忘记密码？\n              </Button>\n            </div>\n          </div>\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Backend1 from './pages/layout/backend1';\nimport Login from './pages/login/index';\n/**\n * 应用根组件\n * @returns {*}\n * @constructor\n */\nfunction App() {\n  return (\n      <BrowserRouter>\n        {/*\n            *只匹配其中一个，匹配到了就显示\n            *重要说明！！！\n            *因为，后台已对「/backend1，/frontend，/warehouse」接口代理,页面路由绝对禁止出现/backend1、/frontend、/warehouse（远景包括map）\n            *在定义接口代理时，上述的路由单词已经被定义，如果使用，刷新页面将出现404，\n            */}\n        <Switch>\n          <Route path={['/login','/']} exact={true} component={Login}/>\n          <Route path='/backstage' component={Backend1}/>\n          {/* <Route path='/' component={Home}/>*/}\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","/**\r\n * 入口js\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\nimport {ConfigProvider} from 'antd';\r\nimport zhCN from 'antd/lib/locale-provider/zh_CN';\r\nimport './console'\r\n// 默认语言为 en-US，如果你需要设置其他语言，推荐在入口文件全局设置 locale\r\nimport 'moment/locale/zh-cn';\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser();\r\nmemoryUtils.user = user;\r\n\r\n// 国际化设置，设置中文\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(\r\n    <ConfigProvider locale={zhCN}>\r\n        <App/>\r\n    </ConfigProvider>, document.getElementById('root'));"],"sourceRoot":""}